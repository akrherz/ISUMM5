===================================================================
CHANGES
diff -r3.3 -r3.8
11c11
< The current release is 3.3 (January 25, 2000)
---
> The current release is 3.4 (November 6, 2000)
13a14,157
> 
> Bug fixes:
> 
> - Fix a problem when MAXNES is greater than the number of data
>   types.
> 
>   Affected file:
>   src/tfudge.F
> 
> - Fix print option. IPRTHT = .T. will now generate print of all
>   processed fields at mesh points. 
> 
>   Affected file:
>   src/finprt.F
> 
> - Fix a bound check for polar projection option.
> 
>   Affected file:
>   src/check_data.F, mxmnll.F
> 
> - Correct a typo in plots.F in calling error handler.
> 
>   Affected file:
>   src/plots.F
> 
> - Print out exact dimensions (ITRH and JTRH) required to process data.
>   (change in tar file since 10/12/00).
> 
>   Affected file:
>   src/terdrv.F
> 
> - Add 'binary' to ftp script in the decks to ensure data are
>   acquired correctly from NCAR's ftp site.
>   (change in tar file since 5/16/00)
> 
>   Affected files:
>   Templates/terrain.deck.*
> 
> - Correct a problem of deep soil temperature not being reset
>   along nest interface in the adjustment. This causes the 
>   deep soil temp on the nest boundary being not consistent with
>   that in the coarse domain. Affect land-surface model data 
>   option only. (change in tar file since 4/12/00)
> 
>   Affected file:
>   src/tfudge.F
> 
> - Correct a problem in openning land-water mask file when a 
>   combination of options of IFEZFUG=T and NewLandUse=T is used.
>   (change in tar file since 3/10/00)
> 
>   Affected file:
>   src/setup.F
> 
> - Clean up field name in subheader for vegetation fraction.
>   (change in tar file since 3/10/00)
> 
>   Affected file:
>   src/output.F
> 
> - All USGS vegetation data files and land-water mask data files 
>   are updated to include Hawaii Islands, and a few other Pacific Islands.
> 
> 
> Changes and improvements:
> 
> - Add a 2-minute resolution data (~3.7 km) input option. This fills a
>   gap in data resolution between 5 min (~9 km) and 30 sec (~1 km), and 
>   allows a user to make use of high-resolution data without the excessive
>   requirement on computer memory. The 2-min data are created from the 
>   USGS 30 second dataset.
> 
>   Affected files:
>   src/anal2.F, crlwmsk.F, crsoil.F, data_area.F, finprt.F,
>       interp.F, io.incl, ltdata.incl, maps.incl, mxmnll.F, output.F, 
>       paramed.incl, plots.F, pltter.F, rdldtr.F, replace.F, search.F,
>       setup.F, terdrv.F, terrain.F, tfudge.F, vs_cmn1.incl, vs_data.incl,
>       vs_data0.incl, vs_data2.incl
> 
> - Elevation data at 1 degree, 30, 10 and 5 minute resolutions are 
>   recreated from the USGS 30 second dataset. This allows consistency
>   between datasets, and also correct a number of data problems discovered
>   in these low-resolution datasets. A user will see (hopefully) small
>   differences between data created in this and previous releases.
> 
> - Major change in decks. The purposes of the change include: accomodate
>   additional data input option, and separate ftp functions from the deck.
>   The new decks are smaller, and with a number of script variables removed.
>   Users are required to fill the namelist variables that are used to be
>   filled via script variables (e.g. IFTER, IFILL, etc.). Two new namelist
>   variables are added to better help user to select data option: LSMDATA,
>   and VEGTYPE. A program is added to read the namelist and pass the options
>   to ftp scripts. 
> 
>   Because of all these changes, one must recreate a new deck for use of 
>   release-3-4 code, and data. 
> 
>   Affected files:
>   Templates/terrain.deck.*
>   src/Makefile, namelist.incl, setup.F, rdnml.F (new)
>   Data/ftp.csh, ftp30s.csh, namelist.usgsdata, namelist.sibdata (all new)
> 
> - Domain configuration check (whether the nest is too close to its mother
>   domain) is now done even if terrain data are not generated.
> 
>   Affected file:
>   src/setup.F
> 
> - Use of IPRINT to control print output. IPRINT = 1 will generate
>   a terrain.print.out file that similar to before, while the default
>   IPRINT = 0 will only generate limited output in terrain.print.out.
> 
>   Affected files:
>   src/crlnd.F, crlwmsk.F, crsoil.F, crter.F, crvst.F, crvst30s.F,
>       finprt.F, lakes.F, mxmnll.F, output.F, plotcon.F, plots.F,
>       rdldtr.F, replace.F, setup.F, smthtr.F, soil_tg.F, terdrv.F,
>       terrain.F, tfudge.F, water_vfr.F, watercheck.F, xyobsll.F
> 
> - Modify earth rotation parameter omega to be the same as in MM5.
> 
>   Affected file:
>   src/terrestial_info.F
> 
> - Allow boundary feedback in soil and vegetation category data, since 
>   these data are required input for the new Pleim-Xiu LSM in MM5.
>   Generation of these extra data is controled by namelist variable IEXTRA.
> 
>   Affected file:
>   src/tfudge.F
>   Templates/terrain.deck.*
> 
> - Add compile option for Linux. (change in tar file since 5/2/00)
>   Also makes a few changes so that PGI compiler will not complain.
> 
>   Affected file:
>   Makefile
>   src/Makefile, plots.F, pltter.F
> 
> - Add comments in Makefile regarding using no-NCAR-Graphics option.
> 
>   Affected files:
>   Makefile
> 
> =======================================
===================================================================
Makefile
diff -r3.2 -r3.12
12c12,13
< RM_LIST	=	*.o *.f core .tmpfile terrain.exe data_area.exe rdem.exe
---
> RM_LIST	=	*.o *.f core .tmpfile terrain.exe data_area.exe rdem.exe rdnml
> RM_LIST2=	*.o *.f core .tmpfile make*.terrain.out terrain.namelist terrain.print.out
14a16,17
> ## Note: Don't forget to remove the libraries (or RHS) in the LOCAL_LIBRARIES 
> ##       line when not using NCAR Graphics.
84a88,101
> 	else \
> 		grep Linux .tmpfile ; \
> 	if [ $$? = 0 ]; then echo "Compiling for Linux" ;		\
> 		( $(CD) src ; $(MAKE) all				\
> 		"RM		= $(RM)" 	"RM_LIST	= $(RM_LIST)"	\
> 		"LN		= $(LN)" 	"MACH		= SGI"		\
> 		"MAKE		= $(MAKE)"	"CPP		= /lib/cpp"	\
> 		"CPPFLAGS	= -I. -C -traditional -D$(NCARGRAPHICS) -DRECLENBYTE"	\
> 		"FC		= pgf90"	"FCFLAGS	= -I. -byteswapio"\
> 		"LDOPTIONS	= " 		"CFLAGS		= -I."		\
> 		"LOCAL_LIBRARIES= -L$NCARG_ROOT/lib -L/usr/X11R6/lib -lncarg -lncarg_gks -lncarg_c -lX11 -L$PGI/linux86/lib -L/usr/lib -lf2c" ) ; \
> 	else echo "Do not know how to compile for the `cat .tmpfile` machine." \
> 		fi ; \
> 		fi ; \
123a141,146
>         else \
> 		grep Linux .tmpfile ; \
> 	if [ $$? = 0 ]; then \
> 		echo "Making terrain deck for Linux" ; 			\
> 		( cp Templates/terrain.deck.sgi terrain.deck ) ;	\
> 	fi; \
139c162
< 	$(RM) $(RM_LIST)
---
> 	$(RM) $(RM_LIST2)
===================================================================
README
diff -r3.4 -r3.8
2,3c2,3
< VERSION 3 TERRAIN PROGRAM (release-3-3)
< (Updated January 25, 2000)
---
> VERSION 3 TERRAIN PROGRAM (release-3-4)
> (Updated November 6, 2000)
13,14c13,15
< NCAR Graphics is a licensed software, and must be purchased and 
< installed on your system. For information on NCAR Graphics, please visit
---
> NCAR Graphics is a licensed software, but part of it has become free.
> TERRAIN program only requires this part of the NCAR Graphics to produce
> plots. For information on NCAR Graphics, please visit
16c17,23
<     http://ngwww.ucar.edu
---
>     http://ngwww.ucar.edu/info/pricing.html
> 
> If you have NCAR Graphics, set the environment variable NCARG_ROOT
> either in .cshrc file, or type it before you compiler and run TERRAIN:
> 
>     setenv NCARG_ROOT /usr/local/ncarg (or the directory where NCAR 
>                                         Graphics is installed)
42c49,50
< ******* IMPORTANT *******
---
> ******* IMPORTANT FOR 3.1 RELEASE *******
> 
47c55,75
< *************************
---
> 
> ******* IMPORTANT FOR 3.4 RELEASE *******
> 
> Starting from 3-4 release, the number of input data resolution has increased
> from five (at 1 degree, 30 min, 10 min, 5 min and 30 second resolution) 
> to six with an additional 2-minutes resolution data (approximately 3.7 km).
> The 2-minute data are provided separately from the lower resolution datasets
> and 30-second dataset. 
> The purpose of this addition is to allow users to use high resolution
> terrestrial datasets for model runs at a few kilometer resolution without
> accessing the 30 sec data which requires a large amount of job memory.
> 
> Also starting with 3-4 release, the terrain elevation data at 1 degree,
> 30, 10, and 5 minute resolution are recreated from the USGS 30 second
> dataset. The new dataset is provided in a new tar file: TER.TAR.gz, and
> is separated from the old landuse dataset, which is now in LANDUSE-OLD.TAR.gz.
> The new 2 min data are also created from the 30 second dataset.
> 
> The complete list of data files provided by mesouser is in Data/README file.
> 
> *****************************************
50,51c78,79
< SGI, DEC_Alpha, Cray, Sun, HP and IBM. 
< Platforms tested are: SGI, DEC_Alpha, Cray, and IBM.
---
> SGI, DEC_Alpha, Cray, Sun, HP, IBM, and PC running Linux. 
> Default compilation options are provided for these platforms.
53c81
< This program is not yet tested on PCs.
---
> Platforms tested are: SGI, DEC_Alpha, Sun, Cray, IBM, and PC running Linux.
73c101,102
< NCAR Graphics, set NCARGRAPHICS = "NONCARG" in Makefile file.
---
> NCAR Graphics, set NCARGRAPHICS = "NONCARG" in Makefile file. You may also
> need to empty the LOCAL_LIBRARIES line where NCAR Graphics library is defined.
77c106,121
< To run Terrain program:
---
> How to run Terrain program:
> 
>    Type 'make terrain.deck' first to create a deck for your machine. Then
>    edit the deck to select appropriate options, parameter statements, and
>    namelist options. Type 'terrain.deck' to compile and run the program.
>    In this case, make is executed inside the deck.
> 
>    Type chmod +x terrain.deck, if necessary.
> 
>    NOTE that the V3-4 terrain deck has changed. So please go through the
>    deck and namelist carefully to fill in appropriate values. Since most
>    of the script variables are removed (such as TerPlt), you must now
>    fill the namelist directly. These namelists are: 
>    IFTER, IFILL, LSMDATA and VEGTYPE.
> 
>    OR (recommended only for experienced users)
104,112d147
<    OR
< 
<    Type 'make terrain.deck' first to create a deck for your machine. Then
<    edit the deck to select appropriate options, parameter statements, and
<    namelist options. Type 'terrain.deck' to compile and run the program.
<    In this case, make is executed inside the deck.
< 
<    Type chmod +x terrain.deck, if necessary.
< 
136a172
> ------------------------------------------------
141c177,180
<    the terrain/landuse data file and land-water mask data file:
---
>    the terrestrial datasets based on the resolution you requested in the 
>    namelist (NTYPE). It makes the use of the ftp shell, ftp.csh, in Data directory.
>    (ftp.csh may be run separately to obtain data, but in this case, you must
>    edit the script and define some variables.)
143,144d181
<    site:
<    ftp://ftp.ucar.edu/mesouser/MM5V3/DATA
146,147d182
<    files:
<    TERLN.TAR.gz
149c184,187
<    land-water mask data based USGS vegetation data:
---
> 2. If you would like to use the 30 sec elevation data, set NTYPE = 6 for
>    the particular nest. Also define script variable Where30sTer in the deck
>    to tell the deck where to locate the data. The data can be downloaded to
>    your local disk prior to running Terrain program.
151,152c189,191
<      LANDWATERMASK-USGS.TAR.gz  - 1 deg, 30, 10, 5 min resolution
<      LWMASK-USGS.30s.gz         - 30 sec resolution
---
>    If you tell the deck to ftp data, the deck (via another ftp script, ftp30s.csh,
>    in Data/ directory) will automatically go to USGS ftp site to get the data.
>    (USGS ftp site: ftp://edcftp.cr.usgs.gov/pub/data/gtopo30/global)
154c193,194
<    land-water mask data based SiB/USGS vegetation data:
---
>    Note that the old 30 sec US dataset is not usable in this and previous V3 
>    releases. One will have to use the global 30 sec data instead.
156,157c196,198
<      LANDWATERMASK-SIB.TAR.gz   - 1 deg, 30, 10, 5 min resolution
<      LWMASK-SIB.30s.gz          - 30 sec resolution
---
>    A new option is added in 3-1 release to use single tile USGS global 30 sec
>    elevation. This data file is only available from NCAR/MSS (1.9 Gb). If you
>    would like to obtain this file, contact mesouser.
159,168c200,203
< 2  If you would like to use the 30 sec elevation data, 
<    set GLOBAL30S = TRUE at the top of the deck, and choose appropriate 
<    ways to get the data in the deck:
< 
<    If you have downloaded data from USGS Web site, you may set Data_Dir to
<    be the directory where the data reside.
< 
<    If you don't have data local, set Data_Dir to be ftp (**NCAR/MMM users need
<    to set users variable too**). The deck will then go to USGS ftp site to
<    get the data. (USGS ftp site: ftp://edcftp.cr.usgs.gov/pub/data/gtopo30/global)
---
> 3. If you get a 'segmentation faults' error when executing this program,
>    check the domain dimensions defined in namelist, the PARAMETER statement
>    in the deck, do a 'make clean', and type 'terrain.deck' to start
>    make and execution again.
170,171c205,206
<    Note that the old 30 sec US dataset is not usable in this and prior V3 releases.
<    One will have to use the global 30 sec data instead.
---
> 4. You can run the job on Cray and use the OutIEEE switch in the Cray
>    deck to create a dataset for workstation.
173,181c208,211
<    A new option is added in 3-1 release to use single tile USGS global 30 sec
<    elevation. This data file is only available from NCAR/MSS (1.9 Gb). To use
<    this option, replace the 30 sec US terrain data file name in the namelist:
<    TER.30s, with DEM_30S_GLOBAL. 
<    If you want to use this file, contact mesouser.
< 
< 3. If you choose to use the 30 sec vegetation data to create landuse categories,
<    set NewLandUse = TRUE in the deck. The deck will go to NCAR's anonymous ftp 
<    site to obtain additional files for processing: 
---
> 5. When working on NCAR's Cray, you may obtain a batch deck from
>    ~mesouser/MM5V3/terrain.deck.cray, edit it, and submit it to
>    Cray batch job queue. Note that the deck for release 3.4 is different from
>    the decks for previous releases.
183,184c213
<    site:
<    ftp://ftp.ucar.edu/mesouser/MM5V3/DATA
---
> ---------------------------------------------------------
186c215
<    landuse data based USGS vegetation data:
---
> *** A Note about Data:
188,189c217,221
<      VEGETATION-USGS.TAR.gz   - 1 deg, 30, 10, 5 min resolution
<      VEG-USGS.30s.gz          - 30 sec resolution
---
> Six resolution datasets are available for elevation, vegetation and 
> land-water mask (the land-water mask data are derived from vegetation data).
> These are 60 min (or 1 deg), 30 min, 10 min, 5 min, 2 min and 30 sec. 
> The coarser resolution datasets are derived from the 30 sec datasets
> (except the old 13-category landuse data).
191c223,224
<    landuse data based SiB/USGS vegetation data:
---
>    Site:
>    ftp://ftp.ucar.edu/mesouser/MM5V3/DATA
193,194c226
<      VEGETATION-SIB.TAR.gz    - 1 deg, 30, 10, 5 min resolution
<      VEG-SIB.30s.gz           - 30 sec resolution
---
>    Files:
196c228
<    There are two types of vegetation datasets to choose from:
---
>    Elevation files:
198,211c230,231
<    1) USGS: This is a global dataset, with the exception of Antarctica, part of
<       Greenland and Russia (we are looking for ways to fill the gaps).
<       Terrain creates 24 category landuse data, including urban. The category
<       for water is 16.
< 
<    2) SiB:  This is a regional datasets with boundaries from 60W - 180W, and
<       0N - 90N (basically North America without the NE corner of Canada).
<       Terrain creates 16 category landuse data without urban. The category for
<       water is 15. Urban is not one of the categories. 
<       This dataset is the same used in NCEP's Eta model.
< 
< 4. If you choose to process additional data for running the land-surface module
<    in MM5, set NewLandUse = FALSE and LandSurface = TRUE. The deck will go to
<    NCAR's anonymous ftp site to obtain the following files for processing:
---
>      TER.TAR.gz (60, 30, 10, and 5 min data)
>      DEM_02M_GLOBAL.gz (2 min data)
213,214c233
<    site:
<    ftp://ftp.ucar.edu/mesouser/MM5V3/DATA
---
>    Landuse files:
216,219c235
<       SOILCAT.TAR.gz   - soil category data at 1 deg, 30, 10, 5 min resolution
<       SOILCAT.30s.gz   - soil category data at 30 sec resolution
<       SOILTEMP.60      - deep soil temperature at 1 deg resolution
<       VEG-FRACTION.10.gz   - vegetation fraction data at 10 min resolution
---
>      13-category old landuse data: 60, 30 and 10 min resolution
221,222c237
<    Note, the soil categroy data over much of the world only have 1 degree
<       resolution. It is 30 sec resolution over US.
---
>      LANDUSE-OLD.TAR.gz
224,227c239
< 5. If you get a 'segmentation faults' error when executing this program,
<    check the domain dimensions defined in namelist, the PARAMETER statement
<    in the deck, do a 'make clean', and type 'terrain.deck' to start
<    make and execution again.
---
>      24-category USGS landuse data based vegetation data: (depending on VEGTYPE)
229c241,243
< 6. To obtain a single listing of the source code, type
---
>      VEGETATION-USGS.TAR.gz   - 1 deg, 30, 10, 5 min resolution
>      VEG-USGS.02.gz           - 2 min resolution
>      VEG-USGS.30s.gz          - 30 sec resolution
231,232c245
<    make code
<    mv src/terrain.f terrain.listing ; cat src/*.f >> terrain.listing
---
>      16-category SiB landuse data based vegetation data:(depending on VEGTYPE)
234,235c247,249
< 7. You can run the job on Cray and use the OutIEEE switch in the Cray
<    deck to create a dataset for workstation. This option will be available soon.
---
>      VEGETATION-SIB.TAR.gz    - 1 deg, 30, 10, 5 min resolution
>      VEG-SIB.02.gz            - 2 min resolution
>      VEG-SIB.30s.gz           - 30 sec resolution
237,238c251
< 8. You must recompile each time you run this program on Cray. The old 
<    Cray executables for terrain program will NOT work. 
---
>    Land-water mask files:
240,242c253
<    When working on NCAR's Cray, you may obtain a batch deck from
<    ~mesouser/MM5V3/terrain.deck.cray, edit it, and submit it to
<    Cray batch job queue.
---
>      land-water mask data based USGS vegetation data: (depending on VEGTYPE)
244c255,257
< ---------------------------------------------------------
---
>      LANDWATERMASK-USGS.TAR.gz  - 1 deg, 30, 10, 5 min resolution
>      LWMASK-USGS.02.gz          - 2 min resolution
>      LWMASK-USGS.30s.gz         - 30 sec resolution
246c259,263
< *** A Note about Data:
---
>      land-water mask data based SiB/USGS vegetation data: (depending on VEGTYPE)
> 
>      LANDWATERMASK-SIB.TAR.gz   - 1 deg, 30, 10, 5 min resolution
>      LWMASK-SIB.02.gz           - 2 min resolution
>      LWMASK-SIB.30s.gz          - 30 sec resolution
248,251c265,285
< Five resolution datasets are available for vegetation and land-water mask
< (the land-water mask data are derived from vegetation data).
< These are 60 min (or 1 deg), 30 min, 10 min, 5 min and 30 sec. The coarser
< resolution datasets are derived from the 30 sec datasets.
---
> USGS: This is a global dataset, with the exception of Antarctica, part of
> Greenland and Russia (we are looking for ways to fill the gaps).
> Terrain creates 24 category landuse data, including urban. The category
> for water is 16.
> 
> SiB:  This is a regional datasets with boundaries from 60W - 180W, and
> 0N - 90N (basically North America without the NE corner of Canada).
> Terrain creates 16 category landuse data without urban. The category for
> water is 15. Urban is not one of the categories. 
> This dataset is the same used in NCEP's Eta model.
> 
>    If you wish to process data for LSM model option in MM5, set LSMDATA=.TRUE. in
>    the deck, you'll obtain additional data:
> 
>    LSM data:
> 
>      SOILCAT.TAR.gz   - soil category data at 1 deg, 30, 10, 5 min resolution
>      SOILCAT.02.gz    - soil category data at 2 min resolution
>      SOILCAT.30s.gz   - soil category data at 30 sec resolution
>      SOILTEMP.60      - deep soil temperature at 1 deg resolution
>      VEG-FRACTION.10.gz   - vegetation fraction data at 10 min resolution
253,254c287,288
< Soil category data over much of the world only have 1 degree resolution. It
< is 30 sec resolution over US. Hence data at other resolution are created
---
> Note that soil category data over much of the world only have 1 degree resolution. It
> is 30 sec resolution over the US. Hence data at other resolution are created
===================================================================
Data/README
diff -r3.0 -r3.1
2a3,57
> 
> Apart from USGS tiled 30 second elevation data, all
> input data to TERRAIN are expected to locate in this
> directory. The complete data sets and their sizes are
> listed below:
> 
> Global elevation data, generated from USGS 30 sec dataset:
>    116640000  DEM_02M_GLOBAL
>     18662400  DEM_05M_GLOBAL
>      4665600  DEM_10M_GLOBAL
>       518400  DEM_30M_GLOBAL
>       129600  DEM_60M_GLOBAL
> 
> Old 13-category landuse data:
>     30326400  LANDUSE.10
>      3369600  LANDUSE.30
>       842400  LANDUSE.60
> 
> USGS 24-category land-water mask and landuse/vegetaion data:
>    933249604  LWMASK-USGS.30s
>     58341600  LWMASK-USGS.02
>      9339840  LWMASK-USGS.05
>      2337120  LWMASK-USGS.10
>       260640  LWMASK-USGS.30
>        65520  LWMASK-USGS.60
>    933249604  VEG-USGS.30s
>   1458151200  VEG-USGS.02
>    233340480  VEG-USGS.05
>     58350240  VEG-USGS.10
>      6490080  VEG-USGS.30
>      1625040  VEG-USGS.60
> 
> Soil category (17), deep soil temp and vegetation fraction data:
>    933120000  SOILCAT.30s
>    991440000  SOILCAT.02
>    158630400  SOILCAT.05
>     39657600  SOILCAT.10
>      4406400  SOILCAT.30
>      1101600  SOILCAT.60
>       129600  SOILTEMP.60
>     27993600  VEG-FRACTION.10
> 
> SiB 16-category land-water mask and landuse/vegetaion data:
>    155520000  LWMASK-SIB.30s
>      9720000  LWMASK-SIB.02
>      1555200  LWMASK-SIB.05
>       388800  LWMASK-SIB.10
>        43200  LWMASK-SIB.30
>        10800  LWMASK-SIB.60
>    155520000  VEG-SIB.30s
>    165240000  VEG-SIB.02
>     26438400  VEG-SIB.05
>      6609600  VEG-SIB.10
>       734400  VEG-SIB.30
>       183600  VEG-SIB.60
===================================================================
Templates/terrain.deck.cray
diff -r3.6 -r3.9
37,85d36
< # set GLOBAL30S = TRUE, if you want to use global 30 sec. elevation data:
< #
< #   set GLOBAL30S = TRUE
<     set GLOBAL30S = FALSE
< #
< #   whether to create color-filled terrain/landuse plots
< #
<     set FillCo  = FALSE
< #   set FillCo  = TRUE
< #
< #  set TerPlt = FALSE to create domain maps only
< #  set TerPlt = TRUE  to create terrain/landuse output
< #
<     set TerPlt = FALSE
< #   set TerPlt = TRUE
< #
< #  set NewLandUseOnly = TRUE if you want to use a better landuse dataset
< #      derived from 30 sec vegetation data
< #
< #  set NewLandUseOnly = TRUE
<    set NewLandUseOnly = FALSE
< #
< #  set LandSurface = TRUE if you want to use the land-surface model
< #      in MM5. This will output additional fields.
< #  Note: if you choose LandSurface = TRUE, set NewLandUseOnly = FALSE.
< #      New landuse data is a default when LandSurface = TRUE
< #
< #  set LandSurface = TRUE
<    set LandSurface = FALSE
< #
< #  Select VegType if NewLandUseOnly = TRUE, or LandSurface = TRUE,
< #     USGS = Global coverage, 24 catagories
< #      SiB = 0 - 90N, 60W - 180W, 16 catagories (same as used in Eta)
< #
< #  OR Select VegType if you want to use new land-water mask data
< #     to define coast instead of NCAR Graphics
< #
<    set VegType = USGS
< #  set VegType = SiB
< #
< if ( $LandSurface    == TRUE ) set NewLandUseOnly = FALSE
< if ( $NewLandUseOnly == TRUE ) set LandSurface    = TRUE
< #
< if ( $TerPlt == FALSE ) then
<    set      GLOBAL30S = FALSE
<    set NewLandUseOnly = FALSE
<    set    LandSurface = FALSE
< endif
< #
90,91c41,42
< #  Do you want to create an additional IEEE copy of the output?
< #     IEEE data are used on workstations.
---
> #  Uncomment this to create an 32-bit IEEE copy of the output
> #     (IEEE data are used on workstations)
93,94c44
<     set OutIEEE = no
< #   set OutIEEE = yes
---
> #   set OutIEEE
96,97c46,47
< # set host user and machine names to remote copy the terrain plots (ter.plt)
< #    to users' local machine, and where your own source code tar file may locate
---
> #  Set host user and machine names to remote copy the terrain plots (TER.PLT)
> #    to users' local machine, and where your own source code tar file may locate.
101c51
<     set Host    = username@host.domain:/local_directory
---
> #   set Host    = username@host.domain:/local_directory
103c53
< #      Do you want to use your source code tar file?
---
> #  Set this if you want to use your source code tar file
105,106c55
< #  set UseMySource = yes
<    set UseMySource = no
---
> #  set UseMySource
110,111c59,62
< if ( $UseMySource == yes ) then
<      rcp $Host/terrain.tar .
---
> if ( $?UseMySource ) then
>      if ( $?Host ) then
>         rcp $Host/terrain.tar .
>      endif
113c64
< else if ( ( $UseMySource == no ) && ( $ENVIRONMENT == BATCH ) ) then
---
> else if ( $ENVIRONMENT == BATCH ) then
160c111
<  & ;-------------------------------------------------------------------
---
>  &END
165,172c116,123
<  NESTIX =   35,   49,  136,  271,  271,   ; GRID DIMENSIONS IN Y DIRECTION
<  NESTJX =   41,   52,  181,  295,  295,   ; GRID DIMENSIONS IN X DIRECTION
<  DIS    =  90.,  30.,6.667,  3.0,  1.0,   ; GRID DISTANCE
<  NUMNC  =    1,    1,    2,    3,    4,   ; MOTHER DOMAIN ID
<  NESTI  =    1,   10,   28,   45,   80,   ; LOWER LEFT I OF NEST IN MOTHER DOMAIN
<  NESTJ  =    1,   17,   25,  123,  120,   ; LOWER LEFT J OF NEST IN MOTHER DOMAIN
<  RID    =  1.5,  1.5,  1.5,  3.1,  2.3,   ; RADIUS OF INFLUENCE IN GRID UNITS (IFANAL=T)
<  NTYPE  =    2,    3,    4,    4,    5,   ; INPUT DATA RESOLUTION
---
>  NESTIX =   35,   49,  136,  181,  211,  221,  ; GRID DIMENSIONS IN Y DIRECTION
>  NESTJX =   41,   52,  181,  196,  211,  221,  ; GRID DIMENSIONS IN X DIRECTION
>  DIS    =  90.,  30.,   9.,  3.0,  1.0,  1.0,  ; GRID DISTANCE
>  NUMNC  =    1,    1,    2,    3,    4,    5,  ; MOTHER DOMAIN ID
>  NESTI  =    1,   10,   28,   35,   45,   50,  ; LOWER LEFT I OF NEST IN MOTHER DOMAIN
>  NESTJ  =    1,   17,   25,   65,   55,   50,  ; LOWER LEFT J OF NEST IN MOTHER DOMAIN
>  RID    =  1.5,  1.5,  1.5,  3.1,  2.3,  2.3,  ; RADIUS OF INFLUENCE IN GRID UNITS (IFANAL=T)
>  NTYPE  =    2,    3,    4,    5,    6,    6,  ; INPUT DATA RESOLUTION
178,180c129,130
<  ;      5; 30 sec ( ~.9 km) global terrain and landuse
<  ;            if NTYPE=5 and your domain is not over 48 US States, 
<  ;               set GLOBAL30S = T near the top of the deck
---
>  ;      5;  2 min (  ~4 km) global terrain and landuse
>  ;      6; 30 sec ( ~.9 km) global terrain and landuse
182,183c132,133
<  NSTTYP=   1,   2,  2,  2,   2,    ;  1 -- ONE WAY NEST, 2 -- TWO WAY NEST
<  & ;-------------------------------------------------------------------
---
>  NSTTYP=     1,    2,    2,    2,    2,    2,  ;  1 -- ONE WAY NEST, 2 -- TWO WAY NEST
>  &END
185c135
<  IFTER   = .${TerPlt}.,  ; .T.-- TERRAIN,  .F.-- PLOT DOMAIN MAPS ONLY
---
>  IFTER   = .TRUE.,    ; .T.-- TERRAIN,  .F.-- PLOT DOMAIN MAPS ONLY
197,199c147,149
<  IPRTHT  = .F.,       ; PRINT OUT TERRAIN HEIGHT ON THE MESH
<  IPRTLU  = .F.,       ; PRINT OUT LANDUSE ON THE MESH
<  FIN     = 100.,100.,100.,100.,100., ; CONTOUR INTERVAL (meter) FOR TERRAIN HEIGHT PLOT
---
>  IPRTHT  = .F.,       ; PRINT OUT ALL PROCESSING FIELDS ON THE MESH
>  IPRINT  =  0,        ; = 1: A LOT MORE PRINT OUTPUT IN terrain.print.out
>  FIN     = 100.,100.,100.,100.,100.,100., ; CONTOUR INTERVAL (meter) FOR TERRAIN HEIGHT PLOT
201,215c151,165
<  ;If your true latitude is not standard for the map projection you choose
<  ;uncomment and define the TRUELAT1 and TRUELAT2 lines (delete the ;).
<  ;standard (minus for southern hemesphere) :
<  ;          Lambert Conformal  : TRUELAT1=30. ,TRUELAT2=60., 
<  ;          Polar Stereographic: TRUELAT1=60., 
<  ;          Mercater           : TRUELAT1=0.                 ) 
<  ;TRUELAT1=91.,       ; TRUE LATITUDE 1
<  ;TRUELAT2=91.,       ; TRUE LATITUDE 2, use this if IPROJ='LAMCON'
<  IFILL    = .${FillCo}.,          ; COLOR-FILL THE TERRAIN HEIGHT CONTOURS AND MAP BKG 
<  VegeSoil = .${LandSurface}.,     ; .TRUE. --- Use vegetation for landuse
<   VegOnly = .${NewLandUseOnly}.,  ; .TRUE. --- Use vegetation for landuse
<    VSplot = .TRUE.,             ; .TRUE. --- plot Vege., Soil, Vege. Frc. percentages
<  G30SD    = .${GLOBAL30S}.,       ; .TRUE. --- Use global 30 sec elevation data
<  ;                      (do not change)
<  & ;-------------------------------------------------------------------
---
>  ; You may choose different true latitude(s) than the default for 
>  ;     Lambert Conformal or Polar Stereographic projection by defining
>  ;     TRUELAT1 and TRUELAT2 (needed for Lambert Conformal only). 
>  ; Standard true latitudes (minus for southern hemesphere) are :
>  ;          Lambert Conformal  : TRUELAT1=30. ,TRUELAT2=60., (may vary)
>  ;          Polar Stereographic: TRUELAT1=60.,               (may vary)
>  ;          Mercater           : TRUELAT1=0.                 (may not vary)
>  ;TRUELAT1=91.,         ; TRUE LATITUDE 1
>  ;TRUELAT2=91.,         ; TRUE LATITUDE 2, use this if IPROJ='LAMCON'
>  IFILL   = .FALSE.,     ; COLOR-FILL THE TERRAIN HEIGHT CONTOURS AND MAP BKG 
>  LSMDATA = .FALSE.,     ; .TRUE. --- Create the data for LSM
>  VEGTYPE = 1,           ; LANDUSE DATA TYPE: =0: old 13 cat; =1: 24 cat USGS; =2: 16 cat SiB
>  VSPLOT  = .TRUE.,      ; .TRUE. --- plot Vege., Soil, Vege. Frc. percentages
>  IEXTRA  = .FALSE.,     ; .TRUE. --- Create extra data for Pleim-Xiu LSM
>  &END
235c185
<  & ;-------------------------------------------------------------------
---
>  &END
248c198
<  & ;-------------------------------------------------------------------
---
>  &END
263,313d212
<  & ;-------------------------------------------------------------------
< EOF
< #
< #   The following file names represent files obtained from NCAR's ftp site
< #       under mesouser/MM5V3/DATA. 
< #
< #   If you are using the files from mesouser, no need to modify anything below.
< #
< #   Note: if you choose the tiled USGS global 30 sec data, the files are
< #       obtained separately from the namelist below. If you want to use
< #       the single USGS global 30 sec data file (1.9 Gb), comment out
< #       'Data/TER.30s', and uncomment 'Data/DEM_30S_GLOBAL'. This single
< #       global 30 sec data is not provided on NCAR's ftp site.
< #
< #       Currently we do not support the old TER.30s for continental US.
< #       One must use the global 30 sec data instead. Set GLOBAL30S=TRUE
< #       near the top of this deck.
< #
< if ( $VegType == USGS ) then
< 
< if ( -e data.namelist ) rm data.namelist
< cat > data.namelist << EOF
<  &DATANAME
<  TERNAME = 'Data/TER.60         ',
<            'Data/TER.30         ',
<            'Data/TER.10         ',
<            'Data/TER.05         ',
<            'Data/TER.30s        ',
<  ;         'Data/DEM_30S_GLOBAL ',
<  LNDNAME = 'Data/LANDUSE.60     ',
<            'Data/LANDUSE.30     ',
<            'Data/LANDUSE.10     ',
<            '                    ',
<            '                    ',
<  LWNAME  = 'Data/LWMASK-USGS.60 ',
<            'Data/LWMASK-USGS.30 ',
<            'Data/LWMASK-USGS.10 ',
<            'Data/LWMASK-USGS.05 ',
<            'Data/LWMASK-USGS.30s',
<  VGNAME  = 'Data/VEG-USGS.60    ',
<            'Data/VEG-USGS.30    ',
<            'Data/VEG-USGS.10    ',
<            'Data/VEG-USGS.05    ',
<            'Data/VEG-USGS.30s   ',
<  SONAME  = 'Data/SOILCAT.60     ',
<            'Data/SOILCAT.30     ',
<            'Data/SOILCAT.10     ',
<            'Data/SOILCAT.05     ',
<            'Data/SOILCAT.30s    ',
<  VFNAME  = 'Data/VEG-FRACTION.10',
<  TSNAME  = 'Data/SOILTEMP.60    ',
316,355d214
< 
< else if ( $VegType == SiB ) then
< 
< if ( -e data.namelist ) rm data.namelist
< cat > data.namelist << EOF
<  &DATANAME
<  TERNAME = 'Data/TER.60         ',
<            'Data/TER.30         ',
<            'Data/TER.10         ',
<            'Data/TER.05         ',
<            'Data/TER.30s        ',
<  ;         'Data/DEM_30S_GLOBAL ',
<  LNDNAME = 'Data/LANDUSE.60     ',
<            'Data/LANDUSE.30     ',
<            'Data/LANDUSE.10     ',
<            '                    ',
<            '                    ',
<  LWNAME  = 'Data/LWMASK-SIB.60  ',
<            'Data/LWMASK-SIB.30  ',
<            'Data/LWMASK-SIB.10  ',
<            'Data/LWMASK-SIB.05  ',
<            'Data/LWMASK-SIB.30s ',
<  VGNAME  = 'Data/VEG-SIB.60     ',
<            'Data/VEG-SIB.30     ',
<            'Data/VEG-SIB.10     ',
<            'Data/VEG-SIB.05     ',
<            'Data/VEG-SIB.30s    ',
<  SONAME  = 'Data/SOILCAT.60     ',
<            'Data/SOILCAT.30     ',
<            'Data/SOILCAT.10     ',
<            'Data/SOILCAT.05     ',
<            'Data/SOILCAT.30s    ',
<  VFNAME  = 'Data/VEG-FRACTION.10',
<  TSNAME  = 'Data/SOILTEMP.60    ',
<  &END
< EOF
< 
< endif
< #
< cat data.namelist >> terrain.namelist
376,405c235
< if ( ($VegType == USGS) && ($TerPlt == TRUE) ) then
< 
<    cp src/paramesv1.incl src/paramesv.incl.tmp
<    ./Templates/incldiff.sh src/paramesv.incl.tmp src/paramesv.incl
<    cp src/vs_data2.incl  src/vs_data.incl.tmp
<    ./Templates/incldiff.sh src/vs_data.incl.tmp src/vs_data.incl
< 
< else if ( ($VegType == SiB) && ($TerPlt == TRUE) ) then
< 
<    cp src/paramesv0.incl src/paramesv.incl.tmp
<    ./Templates/incldiff.sh src/paramesv.incl.tmp src/paramesv.incl
<    cp src/vs_data0.incl  src/vs_data.incl.tmp
<    ./Templates/incldiff.sh src/vs_data.incl.tmp src/vs_data.incl
< 
< endif
< #
< # edit namelist to remove comments
< #
< sed -f ./Templates/no_comment.sed terrain.namelist > mif.tmp
< mv mif.tmp terrain.namelist
< #
< # --------- get terrain and landuse data set from MS
< #
< cd Data
< if (( ! -e TER.30 ) && ( ${TerPlt} == TRUE ) ) then
<    msread terln.tar /MESOUSER/MM5V3/DATA/TERLN.TAR
<    tar -xf terln.tar
< endif
< #
< # -- Get Land-Water mask data
---
> make >& make.terrain.out
407c237
< if ( ($VegType == USGS) && ( ${TerPlt} == TRUE ) ) then
---
> #     Create a namelist without comments
409c239,240
< # -- 60, 30, 10, and 5 min Land-Water mask data from USGS:
---
> sed -f Templates/no_comment.sed terrain.namelist | grep "[A-Z,a-z]" > terlif.tmp
> mv terlif.tmp terrain.namelist
411,416c242
<     if ( ! -e LWMASK-USGS.30 ) then
<        msread LANDWATERMASK-USGS.TAR \
<               /MESOUSER/MM5V3/DATA/LANDWATERMASK-USGS.TAR
<        tar -xf LANDWATERMASK-USGS.TAR
<        rm LANDWATERMASK-USGS.TAR
<     endif
---
> #     Set default script variables
418c244
< # -- 30 sec Land-Water mask data from USGS:
---
> set LandUse = OLD
420,432c246,247
<     if ( ($GLOBAL30S == TRUE) && (! -e LWMASK-USGS.30s) ) then
<        msread LWMASK-USGS.30s /MESOUSER/MM5V3/DATA/LWMASK-USGS.30s
<     endif
< 
< else if ( ($VegType == SiB) && ($TerPlt == TRUE) ) then
< #
< # -- Land-Water mask data from SiB:
< #
<     if ( ! -e LWMASK-SIB.30 ) then
<        msread LANDWATERMASK-SIB.TAR /MESOUSER/MM5V3/DATA/LANDWATERMASK-SIB.TAR
<        tar -xf LANDWATERMASK-SIB.TAR
<        rm LANDWATERMASK-SIB.TAR
<     endif
---
> set DataType = `src/rdnml < terrain.namelist`
> echo $DataType
434c249,252
< # -- 30 sec Land-Water mask data from SiB:
---
> if ( $DataType[4] == 1 ) set IfProcData
> if ( $DataType[5] == 1 ) set LandUse = USGS
> if ( $DataType[5] == 2 ) set LandUse = SiB
> if ( $DataType[3] == 1 ) set IfUsgsTopo
436,440c254
<     if ( ($GLOBAL30S == TRUE) && (! -e LWMASK-SIB.30s) ) then
<        msread LWMASK-SIB.30s /MESOUSER/MM5V3/DATA/LWMASK-SIB.30s
<     endif
< 
< endif
---
> #      link to Fortran units
442c256,257
< # -- Get vegetation data
---
> set ForUnit = fort.
> rm ${ForUnit}1* ${ForUnit}2* ${ForUnit}4*
444,446c259,265
< if ( $NewLandUseOnly == TRUE || $LandSurface == TRUE ) then
< 
<   if ( $VegType == USGS ) then
---
> if ( ${LandUse} != SiB ) cat Data/namelist.usgsdata >> terrain.namelist
> if ( ${LandUse} == SiB ) cat Data/namelist.sibdata  >> terrain.namelist
> cat > endnml << EOF
>  &END
> EOF
> cat endnml >> terrain.namelist
> rm endnml
448c267,270
< # -- 60, 30, 10, and 5 min vegetation data:
---
>    ln -s  terrain.namelist      ${ForUnit}15
>    ln -s  ezids                 ${ForUnit}18
>    assign -a raobsta.ieee -Ff77 -Nieee ${ForUnit}16
> # ----------------------------------------------------------------------
450,463c272,273
<     if ( ! -e VEG-USGS.30 ) then
<        msread VEGETATION-USGS.TAR \
<               /MESOUSER/MM5V3/DATA/VEGETATION-USGS.TAR
<        tar -xf VEGETATION-USGS.TAR
<        rm VEGETATION-USGS.TAR
<     endif
< #
< # -- 30 sec vegetation data:
< #
<     if ( ($GLOBAL30S == TRUE) && (! -e VEG-USGS.30s) ) then
<        msread VEG-USGS.30s /MESOUSER/MM5V3/DATA/VEG-USGS.30s
<     endif
< 
<   else if ( $VegType == SiB ) then
---
> #     Update parameter statements for vegetation dataset
> #       (may require partial recompilation)
465,469c275
<     if ( ! -e VEG-SIB.30 ) then
<        msread VEGETATION-SIB.TAR /MESOUSER/MM5V3/DATA/VEGETATION-SIB.TAR
<        tar -xf VEGETATION-SIB.TAR
<        rm VEGETATION-SIB.TAR
<     endif
---
> if ( $LandUse == SiB ) then
471,473c277,281
<     if ( ($GLOBAL30S == TRUE) && (! -e VEG-SIB.30s) ) then
<        msread VEG-SIB.30s /MESOUSER/MM5V3/DATA/VEG-SIB.30s
<     endif
---
>    cp src/paramesv0.incl src/paramesv.incl.tmp
>    ./Templates/incldiff.sh src/paramesv.incl.tmp src/paramesv.incl
>    cp src/vs_data0.incl  src/vs_data.incl.tmp
>    ./Templates/incldiff.sh src/vs_data.incl.tmp src/vs_data.incl
>    make >& make2.terrain.out
475d282
<   endif
476a284
> # ----------------------------------------------------------------------
478,492c286
< #      Get vegetation fraction, soil type, and annual mean deep soil temp 
< #
< if ( ($LandSurface == TRUE) && ($NewLandUseOnly == FALSE) ) then
< #
<     msread VEG-FRACTION.10 /MESOUSER/MM5V3/DATA/VEG-FRACTION.10
<     msread SOILTEMP.60     /MESOUSER/MM5V3/DATA/SOILTEMP.60
< #
<     if ( ! -e SOILCAT.30 ) then 
<        msread SOILCAT.TAR /MESOUSER/MM5V3/DATA/SOILCAT.TAR
<        tar -xf SOILCAT.TAR 
<        rm SOILCAT.TAR
<     endif
<     if ( ($GLOBAL30S == TRUE) && (! -e SOILCAT.30s) ) then
<        msread SOILCAT.30s /MESOUSER/MM5V3/DATA/SOILCAT.30s
<     endif
---
> #     should I ftp the data?
493a288,293
> if ( $?IfProcData ) then
>    echo 'about to start ftping'
>    cp Data/ftp.csh .
>    chmod +x ftp.csh
>    ftp.csh >& ftp.out
>    rm ftp.csh 
496,577c296,300
< #   Back to top directory
< #
< cd ..
< make
< #
< # --------- set up fortran input files for TERRAIN ----------------
< #
< set ForUnit = fort.
< rm ${ForUnit}9 ${ForUnit}1* ${ForUnit}2* ${ForUnit}4*
< #
<    ln -s  namelist              ${ForUnit}9
<    ln -s  terrain.namelist      ${ForUnit}15
<    ln -s  ezids                 ${ForUnit}18
<    assign -a  raobsta.ieee    -Ff77  -Nieee  ${ForUnit}16
< #
< #  Obtain 30 sec global elevation data and preprocess the data
< #
< if ( $GLOBAL30S == TRUE ) then
< #
< # (1) Generate the "dem_read" for getting the 30s data:
< #
<       src/data_area.exe > data_area.out
<       set toast = $status
<       if ( $toast != 0 ) then
<          echo "error in running data_area, stopping"
<          exit(1)
<       endif
< 
< # only if dem_read is created, you need to go through the following sections
< 
<   if ( -e dem_read ) then
< 
<       echo "---------------------------------------------------"
<       echo "Global 30-sec data files needed"
<       echo "   FileName     MSS_file      FTP_file    FortranUnit"
<       cat dem_read
<       echo "---------------------------------------------------"
< #
< # (2) Get the data from MSS:
< #
<       mkdir -p Data30s
<       cd Data30s ; mv ../dem_read .
<         set File30s = `cat dem_read`
<         set Nfiles = ${#File30s}
<         echo $Nfiles $File30s
< #
<         set Num0 = 1
<         while ( $Num0 <= $Nfiles )
<           @ Num1 = $Num0 + 1
<           @ Num2 = $Num0 + 2
<           @ Num3 = $Num0 + 3
< 
<             if ( ! -e $File30s[$Num0] ) msread $File30s[$Num0] $File30s[$Num1]
<             if ( -e ${ForUnit}$File30s[$Num3] ) rm ${ForUnit}$File30s[$Num3]
<             ln -s $File30s[$Num0]  ${ForUnit}$File30s[$Num3]
< 
<           @ Num0 = $Num0 + 4
<         end
<       cd ..
< #
< # (3) To reconstruct the data for use of TERRAIN:
< #  .. mv some files to directory: Data30s
< #
<       echo "beginning reconstruct data"
<       mv data30sID  Data30s/.
<       mv src/rdem.exe Data30s/.
<       cd Data30s
<         rm new_*
<         rdem.exe > rdem.out
<         set toast = $status
<         if ( $toast != 0 ) then
<            echo "error in running rdem, stopping"
<            exit(3)
<         endif
<         mv new_* ../Data/.
<         rm gmeta rdem.exe data30sID ${ForUnit}79 ${ForUnit}8*
<       cd ..
<   else
<     echo "30 SEC ELEVATION DATA WERE NOT REQUESTED. CHECK NTYPE IN NAMELIST"
<     set GLOBAL30S = FALSE
<   endif
< 
---
> if ( $?IfUsgsTopo && $?IfProcData ) then
>    cp Data/ftp30s.csh .
>    chmod +x ftp30s.csh
>    ftp30s.csh $Where30sTer $users >& ftp30s.out
>    rm ftp30s.csh
578a302
> # ----------------------------------------------------------------------
580c304
< #       make TERRAIN executable and run TERRAIN
---
> #       execute TERRAIN 
581a306
> unlimit
589c314,320
< if ( $ENVIRONMENT == BATCH ) cat terrain.print.out
---
> if ( $ENVIRONMENT == BATCH ) then
>    cat make.terrain.out
>    if ( -e make2.terrain.out ) cat make2.terrain.out
>    if ( -e ftp.out ) cat ftp.out
>    if ( -e ftp30s.out ) cat ftp30s.out
>    cat terrain.print.out
> endif
612c343,345
< rcp TER.PLT ${Host}/ter.plt
---
> if ( $?Host ) then
>      rcp TER.PLT ${Host}/ter.plt
> endif
614c347
< if ( $TerPlt == TRUE || $TerPlt == T ) then
---
> if ( $?IfProcData ) then
626c359
<       if ( $OutIEEE == yes ) then
---
>       if ( $?OutIEEE ) then
647,648c380
< tar -cf terrain.out.tar terrain.namelist terrain.print.out \
<     src/terrain.exe 
---
> tar -cf terrain.out.tar terrain.namelist terrain.print.out src/terrain.exe 
652d383
< rm G*
===================================================================
Templates/terrain.deck.cray-ia
diff -r3.7 -r3.11
1c1
< #!/bin/csh
---
> #!/bin/csh -f
6c6
< unalias rm cd
---
> #   Set this if you would like to ftp terrain data
8c8,9
< # SET THE FOLLOWING SCRIPT VARIABLES
---
> set ftpdata = true
> #set ftpdata = false
10c11
< # set GLOBAL30S = TRUE, if you want to use global 30 sec. elevation data:
---
> #   Set the following for ftp'ing 30 sec elevation data from USGS ftp site
12,13c13,15
< #   set GLOBAL30S = TRUE
<     set GLOBAL30S = FALSE
---
> set Where30sTer = ftp
> #set Where30sTer = /your-data-directory
> if ( $Where30sTer == ftp) then
15c17
< if ( $GLOBAL30S == TRUE ) then
---
> #    Use this if you are ftping from other places
17,19c19
< # (1) .. Specify the directory in which the 30s data was stored:
< #        This assumes you have ftp'ed the data down yourself and
< #          uncompressed and untared the data.
---
> #    set users = Others
21c21
< #   set Data_Dir = /usr/tmp/username
---
> #    Use this if you are ftping from MMM/NCAR
23,28c23
< # (2) .. Use the data from ftp:
< #        Leave users blank if you are not using machines from MMM/NCAR
< #
<     set Data_Dir = ftp
<     set users    = MMM
< #   set users    =
---
>      set users = MMM
30,74c25
<     set Data_Dir =  
< endif
< #
< #  set TerPlt = FALSE to create domain maps only
< #  set TerPlt = TRUE  to create terrain/landuse output
< #
<    set TerPlt = TRUE
< #  set TerPlt = FALSE
< #
< #   whether to create color-filled terrain/landuse plots
< #
<    set FillCo = TRUE
< #  set FillCo = FALSE
< #
< #  set NewLandUseOnly = TRUE if you want to use a better landuse dataset
< #      derived from 30 sec vegetation data
< #
< #  set NewLandUseOnly = TRUE
<    set NewLandUseOnly = FALSE
< #
< #  set LandSurface = TRUE if you want to use the land-surface model
< #      in MM5. This will output additional fields.
< #  Note: if you choose LandSurface = TRUE, set NewLandUseOnly = FALSE. 
< #      New landuse data is a default when LandSurface = TRUE
< #
< #  set LandSurface = TRUE
<    set LandSurface = FALSE
< #
< #  Select VegType if NewLandUseOnly = TRUE, or LandSurface = TRUE, 
< #     USGS = Global coverage, 24 catagories
< #      SiB = 0 - 90N, 60W - 180W, 16 catagories (same as used in Eta)
< #  
< #  OR Select VegType if you want to use new land-water mask data
< #     to define coast instead of NCAR Graphics
< #
<    set VegType = USGS
< #  set VegType = SiB
< #
< if ( $LandSurface    == TRUE ) set NewLandUseOnly = FALSE
< if ( $NewLandUseOnly == TRUE ) set LandSurface    = TRUE
< #
< if ( $TerPlt == FALSE ) then
<    set      GLOBAL30S = FALSE
<    set NewLandUseOnly = FALSE
<    set    LandSurface = FALSE
---
>      set users = 
111c62
<  IEXP  =    .T.,      ; .T. EXPANDED COARSE DOMAIN, .F. NOT EXPANDED.
---
>  IEXP  =    .F.,      ; .T. EXPANDED COARSE DOMAIN, .F. NOT EXPANDED.
121,128c72,79
<  NESTIX =   35,   49,  136,  271,  271,   ; GRID DIMENSIONS IN Y DIRECTION
<  NESTJX =   41,   52,  181,  295,  295,   ; GRID DIMENSIONS IN X DIRECTION
<  DIS    =  90.,  30.,6.667,  3.0,  1.0,   ; GRID DISTANCE 
<  NUMNC  =    1,    1,    2,    3,    4,   ; MOTHER DOMAIN ID
<  NESTI  =    1,   10,   28,   45,   80,   ; LOWER LEFT I OF NEST IN MOTHER DOMAIN
<  NESTJ  =    1,   17,   25,  123,  120,   ; LOWER LEFT J OF NEST IN MOTHER DOMAIN
<  RID    =  1.5,  1.5,  1.5,  3.1,  2.3,   ; RADIUS OF INFLUENCE IN GRID UNITS (IFANAL=T)
<  NTYPE  =    2,    3,    4,    4,    5,   ; INPUT DATA RESOLUTION
---
>  NESTIX =   35,   49,  136,  181,  211, 221,  ; GRID DIMENSIONS IN Y DIRECTION
>  NESTJX =   41,   52,  181,  196,  211, 221,  ; GRID DIMENSIONS IN X DIRECTION
>  DIS    =  90.,  30.,   9.,  3.0,  1.0, 1.0,  ; GRID DISTANCE 
>  NUMNC  =    1,    1,    2,    3,    4,   5,  ; MOTHER DOMAIN ID
>  NESTI  =    1,   10,   28,   35,   45,  50,  ; LOWER LEFT I OF NEST IN MOTHER DOMAIN
>  NESTJ  =    1,   17,   25,   65,   55,  50,  ; LOWER LEFT J OF NEST IN MOTHER DOMAIN
>  RID    =  1.5,  1.5,  1.5,  3.1,  2.3,  2.3, ; RADIUS OF INFLUENCE IN GRID UNITS (IFANAL=T)
>  NTYPE  =    2,    3,    4,    6,    6,   6,  ; INPUT DATA RESOLUTION
134c85,86
<  ;      5; 30 sec ( ~.9 km) global terrain and landuse
---
>  ;      5;  2 min (  ~4 km) global terrain and landuse
>  ;      6; 30 sec ( ~.9 km) global terrain and landuse
136c88
<  NSTTYP=   1,   2,  2,  2,   2,    ;  1 -- ONE WAY NEST, 2 -- TWO WAY NEST
---
>  NSTTYP=     1,    2,    2,    2,    2,   2,  ;  1 -- ONE WAY NEST, 2 -- TWO WAY NEST
139c91
<  IFTER   = .${TerPlt}.,  ; .T.-- TERRAIN,  .F.-- PLOT DOMAIN MAPS ONLY
---
>  IFTER   = .TRUE.,    ; .T.-- TERRAIN,  .F.-- PLOT DOMAIN MAPS ONLY
151,153c103,105
<  IPRTHT  = .F.,       ; PRINT OUT TERRAIN HEIGHT ON THE MESH
<  IPRTLU  = .F.,       ; PRINT OUT LANDUSE ON THE MESH
<  FIN     = 100., 100., 100., 100., 100.,  ; CONTOUR INTERVAL (meter) FOR TERRAIN HEIGHT PLOT
---
>  IPRTHT  = .F.,       ; PRINT OUT ALL PROCESSING FIELDS ON THE MESH
>  IPRINT  =  0,        ; = 1: A LOT MORE PRINT OUTPUT IN terrain.print.out
>  FIN     = 100., 100., 100., 100., 100., 100., ; CONTOUR INTERVAL (meter) FOR TERRAIN HEIGHT PLOT
156,160c108,112
<  IFILL    = .${FillCo}.,        ; .TRUE. --- color filled plots
<  VegeSoil = .${LandSurface}.,   ; .TRUE. --- Create the Vegetation-Soil files
<   VegOnly = .${NewLandUseOnly}.,    ; .TRUE. --- Vegetation files only
<    VSplot = .TRUE.,             ; .TRUE. --- plot Vege., Soil, Vege. Frc. percentages.
<  G30sD    = .${GLOBAL30S}.,     ; .TRUE. --- Use global 30 sec elevation data
---
>  IFILL   = .TRUE.,    ; .TRUE. --- color filled plots
>  LSMDATA = .FALSE.,   ; .TRUE. --- Create the data for LSM
>  VEGTYPE = 1,         ; LANDUSE DATA TYPE: =0: old 13 cat; =1: 24 cat USGS; =2: 16 cat SiB
>  VSPLOT  = .TRUE.,    ; .TRUE. --- plot Vege., Soil, Vege. Frc. percentages.
>  IEXTRA  = .FALSE.,   ; .TRUE. --- Create extra data for Pleim-Xiu LSM
212,302d163
< #   The following file names represent files obtained from NCAR's ftp site
< #       under mesouser/MM5V3/DATA. 
< #
< #   If you are using the files from mesouser, no need to modify anything below.
< #
< #   Note: If you choose the tiled USGS global 30 sec data, the files are
< #       obtained separately from the namelist below. If you want to use
< #       the single USGS global 30 sec data file (1.9 Gb), comment out
< #       'Data/TER.30s', and uncomment 'Data/DEM_30S_GLOBAL'. This single
< #       global 30 sec data is not provided on NCAR's ftp site.
< #         
< #       Currently we do not support the old TER.30s for continental US.
< #       One must use the global 30 sec data instead. Set GLOBAL30S=TRUE
< #       near the top of this deck.
< #
< if ( $VegType == USGS ) then
< 
< if ( -e data.namelist ) rm data.namelist
< cat > data.namelist << EOF
<  &DATANAME
<  TERNAME = 'Data/TER.60         ',
<            'Data/TER.30         ',
<            'Data/TER.10         ',
<            'Data/TER.05         ',
<            'Data/TER.30s        ',
<  ;         'Data/DEM_30S_GLOBAL ',
<  LNDNAME = 'Data/LANDUSE.60     ',
<            'Data/LANDUSE.30     ',
<            'Data/LANDUSE.10     ',
<            '                    ',
<            '                    ',
<  LWNAME  = 'Data/LWMASK-USGS.60 ',
<            'Data/LWMASK-USGS.30 ',
<            'Data/LWMASK-USGS.10 ',
<            'Data/LWMASK-USGS.05 ',
<            'Data/LWMASK-USGS.30s',
<  VGNAME  = 'Data/VEG-USGS.60    ',
<            'Data/VEG-USGS.30    ',
<            'Data/VEG-USGS.10    ',
<            'Data/VEG-USGS.05    ',
<            'Data/VEG-USGS.30s   ',
<  SONAME  = 'Data/SOILCAT.60     ',
<            'Data/SOILCAT.30     ',
<            'Data/SOILCAT.10     ',
<            'Data/SOILCAT.05     ',
<            'Data/SOILCAT.30s    ',
<  VFNAME  = 'Data/VEG-FRACTION.10',
<  TSNAME  = 'Data/SOILTEMP.60    ',
<  &END
< EOF
< 
< else if ( $VegType == SiB ) then
< 
< if ( -e data.namelist ) rm data.namelist
< cat > data.namelist << EOF
<  &DATANAME
<  TERNAME = 'Data/TER.60         ',
<            'Data/TER.30         ',
<            'Data/TER.10         ',
<            'Data/TER.05         ',
<            'Data/TER.30s        ',
<  ;         'Data/DEM_30S_GLOBAL ',
<  LNDNAME = 'Data/LANDUSE.60     ',
<            'Data/LANDUSE.30     ',
<            'Data/LANDUSE.10     ',
<            '                    ',
<            '                    ',
<  LWNAME  = 'Data/LWMASK-SIB.60  ',
<            'Data/LWMASK-SIB.30  ',
<            'Data/LWMASK-SIB.10  ',
<            'Data/LWMASK-SIB.05  ',
<            'Data/LWMASK-SIB.30s ',
<  VGNAME  = 'Data/VEG-SIB.60     ',
<            'Data/VEG-SIB.30     ',
<            'Data/VEG-SIB.10     ',
<            'Data/VEG-SIB.05     ',
<            'Data/VEG-SIB.30s    ',
<  SONAME  = 'Data/SOILCAT.60     ',
<            'Data/SOILCAT.30     ',
<            'Data/SOILCAT.10     ',
<            'Data/SOILCAT.05     ',
<            'Data/SOILCAT.30s    ',
<  VFNAME  = 'Data/VEG-FRACTION.10',
<  TSNAME  = 'Data/SOILTEMP.60    ',
<  &END
< EOF
< 
< endif
< #
< cat data.namelist >> terrain.namelist
< #
309c170,179
< #      Create a namelist without comments
---
> #     Check to see if recompilation is needed
> #       Need to make here so that rdnml may be used
> #
> cd src
> ../Templates/incldiff.sh parame.incl.tmp parame.incl
> ../Templates/incldiff.sh paramed.incl.tmp paramed.incl
> cd ..
> make >& make.terrain.out
> #
> #     Create a namelist without comments
314c184
< # ------------------------------------------------------------------------------
---
> #     Set default script variables
316c186
< #      Get low-resolution terrain/landuse source data
---
> set LandUse = OLD
318,335c188,189
< cd Data
<   if ( (! -e TER.30) && ($TerPlt == TRUE) ) then
<      set dhost=ftp.ucar.edu
<      echo "About to contact $dhost ..."
<      cat >! ftp.tmp << EOF
<      user anonymous ${USER}@
<      bi
<      cd mesouser/MM5V3/DATA
<      mget TERLN.TAR.gz
<      quit
< EOF
<      echo "ftping ..."
<      ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<      rm -rf ftp.tmp ftp.output
<      echo "untarring and decompressing..."
<      gunzip -c TERLN.TAR.gz | tar xvf -
<      rm -rf TERLN.TAR.gz
<   endif
---
> set DataType = `src/rdnml < terrain.namelist`
> echo $DataType
337c191,195
< #      Get land-water mask data 
---
> if ( $DataType[4] == 1 ) set IfProcData
> if ( $DataType[4] == 0 ) set ftpdata = false
> if ( $DataType[5] == 1 ) set LandUse = USGS
> if ( $DataType[5] == 2 ) set LandUse = SiB
> if ( $DataType[3] == 1 ) set IfUsgsTopo
339,413c197
<   if ( ($VegType == USGS) && ($TerPlt == TRUE) ) then
< 
<      if ( ! -e LWMASK-USGS.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget LANDWATERMASK-USGS.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c LANDWATERMASK-USGS.TAR.gz | tar xvf -
<         rm -rf LANDWATERMASK-USGS.TAR.gz
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e LWMASK-USGS.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get LWMASK-USGS.30s.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip LWMASK-USGS.30s.gz 
<      endif
< 
<   else if ( ($VegType == SiB) && ($TerPlt == TRUE) ) then
< #
<      if ( ! -e LWMASK-SIB.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget LANDWATERMASK-SIB.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c LANDWATERMASK-SIB.TAR.gz | tar xf -
<         rm -rf LANDWATERMASK-SIB.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e LWMASK-SIB.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get LWMASK-SIB.30s.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip LWMASK-SIB.30s.gz 
<      endif
< 
<   endif
< #
< #      Get vegetation data 
---
> #      link to Fortran units
415,453c199,200
< if ( $NewLandUseOnly == TRUE || $LandSurface == TRUE ) then
< 
<   if ( $VegType == USGS ) then
< 
<      if ( ! -e VEG-USGS.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget VEGETATION-USGS.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c VEGETATION-USGS.TAR.gz    | tar xvf -
<         rm -rf VEGETATION-USGS.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e VEG-USGS.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get VEG-USGS.30s.gz 
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip VEG-USGS.30s.gz
<      endif
< 
<   else if ( $VegType == SiB ) then
---
> set ForUnit = fort.
> rm ${ForUnit}1* ${ForUnit}2* ${ForUnit}4*
455,481c202,205
<      if ( ! -e VEG-SIB.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget VEGETATION-SIB.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c VEGETATION-SIB.TAR.gz | tar xf -
<         rm -rf VEGETATION-SIB.TAR.gz
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e VEG-SIB.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get VEG-SIB.30s.gz 
<         quit
---
> if ( $LandUse != SiB ) cat Data/namelist.usgsdata >> terrain.namelist
> if ( $LandUse == SiB ) cat Data/namelist.sibdata  >> terrain.namelist
> cat > endnml << EOF
>  &END
483,492c207,208
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip VEG-SIB.30s.gz
<      endif
< 
<   endif
< endif
< #
< #      get vegetation fraction, soil type, and annual mean deep soil temp data
---
> cat endnml >> terrain.namelist
> rm endnml
494,534c210,213
< if ( ($LandSurface == TRUE) && ($NewLandUseOnly == FALSE) ) then
< 
<      if ( ! -e SOILCAT.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget SOILCAT.TAR.gz
<         mget SOILTEMP.60
<         mget VEG-FRACTION.10.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c SOILCAT.TAR.gz | tar xvf -
<         gunzip    VEG-FRACTION.10.gz
<         rm -rf SOILCAT.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e SOILCAT.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget SOILCAT.30s.gz 
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip SOILCAT.30s.gz 
<      endif
< 
< endif
< cd ..
---
>    ln -s  terrain.namelist      ${ForUnit}15
>    ln -s  ezids                 ${ForUnit}18
>    assign -a raobsta.ieee -Ff77 -Nieee ${ForUnit}16
> # ----------------------------------------------------------------------
536c215,216
< #      update parameter statements for vegetation dataset
---
> #     Update parameter statements for vegetation dataset
> #       (may require partial recompilation)
538,545c218
< if ( ($VegType == USGS) && ($TerPlt == TRUE) ) then
< 
<    cp src/paramesv1.incl src/paramesv.incl.tmp
<    ./Templates/incldiff.sh src/paramesv.incl.tmp src/paramesv.incl
<    cp src/vs_data2.incl  src/vs_data.incl.tmp
<    ./Templates/incldiff.sh src/vs_data.incl.tmp src/vs_data.incl
< 
< else if ( ($VegType == SiB) && ($TerPlt == TRUE) ) then
---
> if ( $LandUse == SiB ) then
550a224
>    make >& make2.print.out
552a227
> # ----------------------------------------------------------------------
554,574c229
< #      link to Fortran units
< #
< set ForUnit = fort.
< rm ${ForUnit}9 ${ForUnit}1* ${ForUnit}2* ${ForUnit}4*
< #
<    ln -s  namelist              ${ForUnit}9
<    ln -s  terrain.namelist      ${ForUnit}15
<    ln -s  ezids                 ${ForUnit}18
<    ln -s  raobsta.ieee          ${ForUnit}16
< #
< # --------------------------------------------------------------------------
< #
< unlimit
< #
< #     Check to see if recompilation is needed
< #
< cd src
< ../Templates/incldiff.sh parame.incl.tmp parame.incl
< ../Templates/incldiff.sh paramed.incl.tmp paramed.incl
< cd ..
< make
---
> #     should I ftp the data?
576,699c231,236
< #     Obtain 30 sec global elevation data, and preprocess the data
< #
< if ( $GLOBAL30S == TRUE ) then
< #
< # (1) Generate the "dem_read" for getting the 30s data:
< #
<       src/data_area.exe >! data_area.out
<       set toast = $status
<       if ( $toast != 0 ) then
<          echo "error in running data_area, stopping"
<          exit(1)
<       endif
< #      rm data_area.out
< 
< # if file dem_read is not created, no need to do the following
< 
<   if ( -e dem_read ) then
< 
<       echo "---------------------------------------------------"
<       echo "Global 30-sec data files needed"
<       echo "   FileName     MSS_file      FTP_file    FortranUnit"
<       cat dem_read
<       echo "---------------------------------------------------"
< #
< # (2) Get the data from MSS or ftp site or "ln" to the specified directory:
< #
<       mkdir -p Data30s
<       cd Data30s ; mv ../dem_read .
<         set File30s = `cat dem_read`
<         set Nfiles = ${#File30s}
<         echo $Nfiles $File30s
< #
<         set Num0 = 1
<         while ( $Num0 <= $Nfiles )
<           @ Num1 = $Num0 + 1
<           @ Num2 = $Num0 + 2
<           @ Num3 = $Num0 + 3
< 
<           if ( $Data_Dir == ftp ) then
< 
< #  ----- Data from ftp edcftp.cr.usgs.gov:
< 
<             if ( ! -e $File30s[$Num0] ) then
< 
<                if ( $users == MMM ) then
<                   set dhost=gate.ucar.edu
<                   echo "About to contact $dhost ..."
<                   cat >! ftp.tmp << EOF
<                   user anonymous@edcftp.cr.usgs.gov ${USER}@
<                   bi
<                   cd /pub/data/gtopo30/global
<                   mget ${File30s[$Num2]}.gz
<                   quit
< EOF
<                else
<                   set dhost=edcftp.cr.usgs.gov
<                   echo "About to contact $dhost ..."
<                   cat >! ftp.tmp << EOF
<                   user anonymous ${USER}@
<                   cd /pub/data/gtopo30/global
<                   mget ${File30s[$Num2]}.gz
<                   quit
< EOF
<                endif
< 
<                echo "ftping ..."
<                ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<                rm -rf ftp.tmp ftp.output
< 
<                if ( ! -e ${File30s[$Num2]}.gz ) then
<                   echo "ftp is failed"
<                   exit (1)
<                endif
<                echo "untarring and decompressing..."
<                gunzip -c ${File30s[$Num2]}.gz | tar xvf -
<                rm *.tar.gz *.DMW *.GIF *.HDR *.PRJ *.SCH *.SRC *.STX
< 
<             endif
< 
<             if ( -e ${ForUnit}$File30s[$Num3] ) rm ${ForUnit}$File30s[$Num3]
<             ln -s $File30s[$Num0]  ${ForUnit}$File30s[$Num3]
< 
<           else 
< 
< #  ----- access data file in directory ${Data_Dir}:
< 
<             echo "accessing data from specified directory"
<             if ( -e ${Data_Dir}/$File30s[$Num0] ) then
< 
<                if ( -e ${ForUnit}$File30s[$Num3] ) rm ${ForUnit}$File30s[$Num3]
<                ln -s ${Data_Dir}/$File30s[$Num0]  ${ForUnit}$File30s[$Num3]
< 
<             else
<                echo "File ${Data_Dir}/$File30s[$Num0] does not exist"
<                exit(1)
<             endif
< 
<           endif
<           @ Num0 = $Num0 + 4
<         end
<       cd ..
< #
< # (3) To reconstruct the data for use of TERRAIN:
< #  .. mv some files to directory: Data30s
< #
<       echo "beginning reconstruct data"
<       mv data30sID  Data30s/.
<       mv src/rdem.exe Data30s/.
<       cd Data30s
<         rm new_*
<         rdem.exe > rdem.out
<         set toast = $status
<         if ( $toast != 0 ) then
<            echo "error in running rdem, stopping"
<            exit(3)
<         endif
<         mv new_* ../Data/.
<         rm gmeta rdem.exe data30sID ${ForUnit}79 ${ForUnit}8*
<       cd ..
<   else
<      echo "30 SEC ELEVATION DATA WERE NOT REQUESTED. CHECK NTYPE IN NAMELIST"
<      set GLOBAL30S = FALSE
<   endif
< 
---
> if ( $ftpdata == true ) then
>    echo 'about to start ftping'
>    cp Data/ftp.csh .
>    chmod +x ftp.csh
>    ftp.csh >& ftp.out
>    rm ftp.csh ftp.out
702c239,246
< # -----------------------------------------------------------------------
---
> if ( $?IfUsgsTopo && $ftpdata == true ) then
>    echo 'about to start ftping 30 sec tiled elevation data from USGS'
>    cp Data/ftp30s.csh .
>    chmod +x ftp30s.csh
>    ftp30s.csh $Where30sTer $users >& ftp30s.out
>    rm ftp30s.csh ftp30s.out
> endif
> # ----------------------------------------------------------------------
705a250
> unlimit
707c252
< timex terrain.exe >&! terrain.print.out
---
> terrain.exe >&! terrain.print.out
709c254
< rm ${ForUnit}* namelist
---
> rm ${ForUnit}* 
===================================================================
Templates/terrain.deck.dec
diff -r3.7 -r3.11
1c1
< #!/bin/csh
---
> #!/bin/csh -f
6c6
< unalias rm cd
---
> #   Set this if you would like to ftp terrain data
8c8,9
< # SET THE FOLLOWING SCRIPT VARIABLES
---
> set ftpdata = true
> #set ftpdata = false
10c11
< # set GLOBAL30S = TRUE, if you want to use global 30 sec. elevation data:
---
> #   Set the following for ftp'ing 30 sec elevation data from USGS ftp site
12,13c13,15
< #   set GLOBAL30S = TRUE
<     set GLOBAL30S = FALSE
---
> set Where30sTer = ftp
> #set Where30sTer = /your-data-directory
> if ( $Where30sTer == ftp) then
15c17
< if ( $GLOBAL30S == TRUE ) then
---
> #    Use this if you are ftping from other places
17,19c19
< # (1) .. Specify the directory in which the 30s data was stored:
< #        This assumes you have ftp'ed the data down yourself and
< #          uncompressed and untared the data.
---
> #    set users = Others
21c21
< #   set Data_Dir = /usr/tmp/username
---
> #    Use this if you are ftping from MMM/NCAR
23,28c23
< # (2) .. Use the data from ftp:
< #        Leave users blank if you are not using machines from MMM/NCAR
< #
<     set Data_Dir = ftp
<     set users    = MMM
< #   set users    =
---
>      set users = MMM
30,74c25
<     set Data_Dir =  
< endif
< #
< #  set TerPlt = FALSE to create domain maps only
< #  set TerPlt = TRUE  to create terrain/landuse output
< #
<    set TerPlt = TRUE
< #  set TerPlt = FALSE
< #
< #   whether to create color-filled terrain/landuse plots
< #
<    set FillCo = TRUE
< #  set FillCo = FALSE
< #
< #  set NewLandUseOnly = TRUE if you want to use a better landuse dataset
< #      derived from 30 sec vegetation data
< #
< #  set NewLandUseOnly = TRUE
<    set NewLandUseOnly = FALSE
< #
< #  set LandSurface = TRUE if you want to use the land-surface model
< #      in MM5. This will output additional fields.
< #  Note: if you choose LandSurface = TRUE, set NewLandUseOnly = FALSE. 
< #      New landuse data is a default when LandSurface = TRUE
< #
< #  set LandSurface = TRUE
<    set LandSurface = FALSE
< #
< #  Select VegType if NewLandUseOnly = TRUE, or LandSurface = TRUE, 
< #     USGS = Global coverage, 24 catagories
< #      SiB = 0 - 90N, 60W - 180W, 16 catagories (same as used in Eta)
< #  
< #  OR Select VegType if you want to use new land-water mask data
< #     to define coast instead of NCAR Graphics
< #
<    set VegType = USGS
< #  set VegType = SiB
< #
< if ( $LandSurface    == TRUE ) set NewLandUseOnly = FALSE
< if ( $NewLandUseOnly == TRUE ) set LandSurface    = TRUE
< #
< if ( $TerPlt == FALSE ) then
<    set      GLOBAL30S = FALSE
<    set NewLandUseOnly = FALSE
<    set    LandSurface = FALSE
---
>      set users = 
111c62
<  IEXP  =    .T.,      ; .T. EXPANDED COARSE DOMAIN, .F. NOT EXPANDED.
---
>  IEXP  =    .F.,      ; .T. EXPANDED COARSE DOMAIN, .F. NOT EXPANDED.
121,128c72,79
<  NESTIX =   35,   49,  136,  271,  271,   ; GRID DIMENSIONS IN Y DIRECTION
<  NESTJX =   41,   52,  181,  295,  295,   ; GRID DIMENSIONS IN X DIRECTION
<  DIS    =  90.,  30.,6.667,  3.0,  1.0,   ; GRID DISTANCE 
<  NUMNC  =    1,    1,    2,    3,    4,   ; MOTHER DOMAIN ID
<  NESTI  =    1,   10,   28,   45,   80,   ; LOWER LEFT I OF NEST IN MOTHER DOMAIN
<  NESTJ  =    1,   17,   25,  123,  120,   ; LOWER LEFT J OF NEST IN MOTHER DOMAIN
<  RID    =  1.5,  1.5,  1.5,  3.1,  2.3,   ; RADIUS OF INFLUENCE IN GRID UNITS (IFANAL=T)
<  NTYPE  =    2,    3,    4,    4,    5,   ; INPUT DATA RESOLUTION
---
>  NESTIX =   35,   49,  136,  181,  211, 221,  ; GRID DIMENSIONS IN Y DIRECTION
>  NESTJX =   41,   52,  181,  196,  211, 221,  ; GRID DIMENSIONS IN X DIRECTION
>  DIS    =  90.,  30.,   9.,  3.0,  1.0, 1.0,  ; GRID DISTANCE 
>  NUMNC  =    1,    1,    2,    3,    4,   5,  ; MOTHER DOMAIN ID
>  NESTI  =    1,   10,   28,   35,   45,  50,  ; LOWER LEFT I OF NEST IN MOTHER DOMAIN
>  NESTJ  =    1,   17,   25,   65,   55,  50,  ; LOWER LEFT J OF NEST IN MOTHER DOMAIN
>  RID    =  1.5,  1.5,  1.5,  3.1,  2.3,  2.3, ; RADIUS OF INFLUENCE IN GRID UNITS (IFANAL=T)
>  NTYPE  =    2,    3,    4,    6,    6,   6,  ; INPUT DATA RESOLUTION
134c85,86
<  ;      5; 30 sec ( ~.9 km) global terrain and landuse
---
>  ;      5;  2 min (  ~4 km) global terrain and landuse
>  ;      6; 30 sec ( ~.9 km) global terrain and landuse
136c88
<  NSTTYP=   1,   2,  2,  2,   2,    ;  1 -- ONE WAY NEST, 2 -- TWO WAY NEST
---
>  NSTTYP=     1,    2,    2,    2,    2,   2,  ;  1 -- ONE WAY NEST, 2 -- TWO WAY NEST
139c91
<  IFTER   = .${TerPlt}.,  ; .T.-- TERRAIN,  .F.-- PLOT DOMAIN MAPS ONLY
---
>  IFTER   = .TRUE.,    ; .T.-- TERRAIN,  .F.-- PLOT DOMAIN MAPS ONLY
151,153c103,105
<  IPRTHT  = .F.,       ; PRINT OUT TERRAIN HEIGHT ON THE MESH
<  IPRTLU  = .F.,       ; PRINT OUT LANDUSE ON THE MESH
<  FIN     = 100., 100., 100., 100., 100.,  ; CONTOUR INTERVAL (meter) FOR TERRAIN HEIGHT PLOT
---
>  IPRTHT  = .F.,       ; PRINT OUT ALL PROCESSING FIELDS ON THE MESH
>  IPRINT  =  0,        ; = 1: A LOT MORE PRINT OUTPUT IN terrain.print.out
>  FIN     = 100., 100., 100., 100., 100., 100., ; CONTOUR INTERVAL (meter) FOR TERRAIN HEIGHT PLOT
156,160c108,112
<  IFILL    = .${FillCo}.,        ; .TRUE. --- color filled plots
<  VegeSoil = .${LandSurface}.,   ; .TRUE. --- Create the Vegetation-Soil files
<   VegOnly = .${NewLandUseOnly}.,    ; .TRUE. --- Vegetation files only
<    VSplot = .TRUE.,             ; .TRUE. --- plot Vege., Soil, Vege. Frc. percentages.
<  G30sD    = .${GLOBAL30S}.,     ; .TRUE. --- Use global 30 sec elevation data
---
>  IFILL   = .TRUE.,    ; .TRUE. --- color filled plots
>  LSMDATA = .FALSE.,   ; .TRUE. --- Create the data for LSM
>  VEGTYPE = 1,         ; LANDUSE DATA TYPE: =0: old 13 cat; =1: 24 cat USGS; =2: 16 cat SiB
>  VSPLOT  = .TRUE.,    ; .TRUE. --- plot Vege., Soil, Vege. Frc. percentages.
>  IEXTRA  = .FALSE.,   ; .TRUE. --- Create extra data for Pleim-Xiu LSM
212,302d163
< #   The following file names represent files obtained from NCAR's ftp site
< #       under mesouser/MM5V3/DATA. 
< #
< #   If you are using the files from mesouser, no need to modify anything below.
< #
< #   Note: If you choose the tiled USGS global 30 sec data, the files are
< #       obtained separately from the namelist below. If you want to use
< #       the single USGS global 30 sec data file (1.9 Gb), comment out
< #       'Data/TER.30s', and uncomment 'Data/DEM_30S_GLOBAL'. This single
< #       global 30 sec data is not provided on NCAR's ftp site.
< #         
< #       Currently we do not support the old TER.30s for continental US.
< #       One must use the global 30 sec data instead. Set GLOBAL30S=TRUE
< #       near the top of this deck.
< #
< if ( $VegType == USGS ) then
< 
< if ( -e data.namelist ) rm data.namelist
< cat > data.namelist << EOF
<  &DATANAME
<  TERNAME = 'Data/TER.60         ',
<            'Data/TER.30         ',
<            'Data/TER.10         ',
<            'Data/TER.05         ',
<            'Data/TER.30s        ',
<  ;         'Data/DEM_30S_GLOBAL ',
<  LNDNAME = 'Data/LANDUSE.60     ',
<            'Data/LANDUSE.30     ',
<            'Data/LANDUSE.10     ',
<            '                    ',
<            '                    ',
<  LWNAME  = 'Data/LWMASK-USGS.60 ',
<            'Data/LWMASK-USGS.30 ',
<            'Data/LWMASK-USGS.10 ',
<            'Data/LWMASK-USGS.05 ',
<            'Data/LWMASK-USGS.30s',
<  VGNAME  = 'Data/VEG-USGS.60    ',
<            'Data/VEG-USGS.30    ',
<            'Data/VEG-USGS.10    ',
<            'Data/VEG-USGS.05    ',
<            'Data/VEG-USGS.30s   ',
<  SONAME  = 'Data/SOILCAT.60     ',
<            'Data/SOILCAT.30     ',
<            'Data/SOILCAT.10     ',
<            'Data/SOILCAT.05     ',
<            'Data/SOILCAT.30s    ',
<  VFNAME  = 'Data/VEG-FRACTION.10',
<  TSNAME  = 'Data/SOILTEMP.60    ',
<  &END
< EOF
< 
< else if ( $VegType == SiB ) then
< 
< if ( -e data.namelist ) rm data.namelist
< cat > data.namelist << EOF
<  &DATANAME
<  TERNAME = 'Data/TER.60         ',
<            'Data/TER.30         ',
<            'Data/TER.10         ',
<            'Data/TER.05         ',
<            'Data/TER.30s        ',
<  ;         'Data/DEM_30S_GLOBAL ',
<  LNDNAME = 'Data/LANDUSE.60     ',
<            'Data/LANDUSE.30     ',
<            'Data/LANDUSE.10     ',
<            '                    ',
<            '                    ',
<  LWNAME  = 'Data/LWMASK-SIB.60  ',
<            'Data/LWMASK-SIB.30  ',
<            'Data/LWMASK-SIB.10  ',
<            'Data/LWMASK-SIB.05  ',
<            'Data/LWMASK-SIB.30s ',
<  VGNAME  = 'Data/VEG-SIB.60     ',
<            'Data/VEG-SIB.30     ',
<            'Data/VEG-SIB.10     ',
<            'Data/VEG-SIB.05     ',
<            'Data/VEG-SIB.30s    ',
<  SONAME  = 'Data/SOILCAT.60     ',
<            'Data/SOILCAT.30     ',
<            'Data/SOILCAT.10     ',
<            'Data/SOILCAT.05     ',
<            'Data/SOILCAT.30s    ',
<  VFNAME  = 'Data/VEG-FRACTION.10',
<  TSNAME  = 'Data/SOILTEMP.60    ',
<  &END
< EOF
< 
< endif
< #
< cat data.namelist >> terrain.namelist
< #
309c170,171
< #      Create a namelist without comments
---
> #     Check to see if recompilation is needed
> #       Need to make here so that rdnml may be used
311,312c173,177
< sed -f Templates/no_comment.sed terrain.namelist | grep "[A-Z,a-z]" > terlif.tmp
< mv terlif.tmp terrain.namelist
---
> cd src
> ../Templates/incldiff.sh parame.incl.tmp parame.incl
> ../Templates/incldiff.sh paramed.incl.tmp paramed.incl
> cd ..
> make >& make.terrain.out
314c179
< # ------------------------------------------------------------------------------
---
> #     Create a namelist without comments
316c181,182
< #      Get low-resolution terrain/landuse source data
---
> sed -f Templates/no_comment.sed terrain.namelist | grep "[A-Z,a-z]" > terlif.tmp
> mv terlif.tmp terrain.namelist
318,335c184
< cd Data
<   if ( (! -e TER.30) && ($TerPlt == TRUE) ) then
<      set dhost=ftp.ucar.edu
<      echo "About to contact $dhost ..."
<      cat >! ftp.tmp << EOF
<      user anonymous ${USER}@
<      bi
<      cd mesouser/MM5V3/DATA
<      mget TERLN.TAR.gz
<      quit
< EOF
<      echo "ftping ..."
<      ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<      rm -rf ftp.tmp ftp.output
<      echo "untarring and decompressing..."
<      gunzip -c TERLN.TAR.gz | tar xvf -
<      rm -rf TERLN.TAR.gz
<   endif
---
> #     Set default script variables
337c186
< #      Get land-water mask data 
---
> set LandUse = OLD
339,375c188,189
<   if ( ($VegType == USGS) && ($TerPlt == TRUE) ) then
< 
<      if ( ! -e LWMASK-USGS.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget LANDWATERMASK-USGS.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c LANDWATERMASK-USGS.TAR.gz | tar xvf -
<         rm -rf LANDWATERMASK-USGS.TAR.gz
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e LWMASK-USGS.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get LWMASK-USGS.30s.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip LWMASK-USGS.30s.gz 
<      endif
< 
<   else if ( ($VegType == SiB) && ($TerPlt == TRUE) ) then
---
> set DataType = `src/rdnml < terrain.namelist`
> echo $DataType
377,411c191,195
<      if ( ! -e LWMASK-SIB.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget LANDWATERMASK-SIB.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c LANDWATERMASK-SIB.TAR.gz | tar xf -
<         rm -rf LANDWATERMASK-SIB.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e LWMASK-SIB.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get LWMASK-SIB.30s.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip LWMASK-SIB.30s.gz 
<      endif
< 
<   endif
---
> if ( $DataType[4] == 1 ) set IfProcData
> if ( $DataType[4] == 0 ) set ftpdata = false
> if ( $DataType[5] == 1 ) set LandUse = USGS
> if ( $DataType[5] == 2 ) set LandUse = SiB
> if ( $DataType[3] == 1 ) set IfUsgsTopo
413c197
< #      Get vegetation data 
---
> #      link to Fortran units
415,453c199,200
< if ( $NewLandUseOnly == TRUE || $LandSurface == TRUE ) then
< 
<   if ( $VegType == USGS ) then
< 
<      if ( ! -e VEG-USGS.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget VEGETATION-USGS.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c VEGETATION-USGS.TAR.gz    | tar xvf -
<         rm -rf VEGETATION-USGS.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e VEG-USGS.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get VEG-USGS.30s.gz 
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip VEG-USGS.30s.gz
<      endif
< 
<   else if ( $VegType == SiB ) then
---
> set ForUnit = fort.
> rm ${ForUnit}1* ${ForUnit}2* ${ForUnit}4*
455,481c202,205
<      if ( ! -e VEG-SIB.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget VEGETATION-SIB.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c VEGETATION-SIB.TAR.gz | tar xf -
<         rm -rf VEGETATION-SIB.TAR.gz
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e VEG-SIB.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get VEG-SIB.30s.gz 
<         quit
---
> if ( $LandUse != SiB ) cat Data/namelist.usgsdata >> terrain.namelist
> if ( $LandUse == SiB ) cat Data/namelist.sibdata  >> terrain.namelist
> cat > endnml << EOF
>  &END
483,490c207,208
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip VEG-SIB.30s.gz
<      endif
< 
<   endif
< endif
---
> cat endnml >> terrain.namelist
> rm endnml
492,534c210,213
< #      get vegetation fraction, soil type, and annual mean deep soil temp data
< #
< if ( ($LandSurface == TRUE) && ($NewLandUseOnly == FALSE) ) then
< 
<      if ( ! -e SOILCAT.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget SOILCAT.TAR.gz
<         mget SOILTEMP.60
<         mget VEG-FRACTION.10.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c SOILCAT.TAR.gz | tar xvf -
<         gunzip    VEG-FRACTION.10.gz
<         rm -rf SOILCAT.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e SOILCAT.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget SOILCAT.30s.gz 
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip SOILCAT.30s.gz 
<      endif
< 
< endif
< cd ..
---
>    ln -s  terrain.namelist      ${ForUnit}15
>    ln -s  ezids                 ${ForUnit}18
>    ln -s  raobsta.ieee          ${ForUnit}16
> # ----------------------------------------------------------------------
536c215,216
< #      update parameter statements for vegetation dataset
---
> #     Update parameter statements for vegetation dataset
> #       (may require partial recompilation)
538,545c218
< if ( ($VegType == USGS) && ($TerPlt == TRUE) ) then
< 
<    cp src/paramesv1.incl src/paramesv.incl.tmp
<    ./Templates/incldiff.sh src/paramesv.incl.tmp src/paramesv.incl
<    cp src/vs_data2.incl  src/vs_data.incl.tmp
<    ./Templates/incldiff.sh src/vs_data.incl.tmp src/vs_data.incl
< 
< else if ( ($VegType == SiB) && ($TerPlt == TRUE) ) then
---
> if ( $LandUse == SiB ) then
550a224
>    make >& make2.print.out
552a227
> # ----------------------------------------------------------------------
554,557c229
< #      link to Fortran units
< #
< set ForUnit = fort.
< rm ${ForUnit}9 ${ForUnit}1* ${ForUnit}2* ${ForUnit}4*
---
> #     should I ftp the data?
559,699c231,236
<    ln -s  namelist              ${ForUnit}9
<    ln -s  terrain.namelist      ${ForUnit}15
<    ln -s  ezids                 ${ForUnit}18
<    ln -s  raobsta.ieee          ${ForUnit}16
< #
< # --------------------------------------------------------------------------
< #
< unlimit
< #
< #     Check to see if recompilation is needed
< #
< cd src
< ../Templates/incldiff.sh parame.incl.tmp parame.incl
< ../Templates/incldiff.sh paramed.incl.tmp paramed.incl
< cd ..
< make
< #
< #     Obtain 30 sec global elevation data, and preprocess the data
< #
< if ( $GLOBAL30S == TRUE ) then
< #
< # (1) Generate the "dem_read" for getting the 30s data:
< #
<       src/data_area.exe >! data_area.out
<       set toast = $status
<       if ( $toast != 0 ) then
<          echo "error in running data_area, stopping"
<          exit(1)
<       endif
< #      rm data_area.out
< 
< # if file dem_read is not created, no need to do the following
< 
<   if ( -e dem_read ) then
< 
<       echo "---------------------------------------------------"
<       echo "Global 30-sec data files needed"
<       echo "   FileName     MSS_file      FTP_file    FortranUnit"
<       cat dem_read
<       echo "---------------------------------------------------"
< #
< # (2) Get the data from MSS or ftp site or "ln" to the specified directory:
< #
<       mkdir -p Data30s
<       cd Data30s ; mv ../dem_read .
<         set File30s = `cat dem_read`
<         set Nfiles = ${#File30s}
<         echo $Nfiles $File30s
< #
<         set Num0 = 1
<         while ( $Num0 <= $Nfiles )
<           @ Num1 = $Num0 + 1
<           @ Num2 = $Num0 + 2
<           @ Num3 = $Num0 + 3
< 
<           if ( $Data_Dir == ftp ) then
< 
< #  ----- Data from ftp edcftp.cr.usgs.gov:
< 
<             if ( ! -e $File30s[$Num0] ) then
< 
<                if ( $users == MMM ) then
<                   set dhost=gate.ucar.edu
<                   echo "About to contact $dhost ..."
<                   cat >! ftp.tmp << EOF
<                   user anonymous@edcftp.cr.usgs.gov ${USER}@
<                   bi
<                   cd /pub/data/gtopo30/global
<                   mget ${File30s[$Num2]}.gz
<                   quit
< EOF
<                else
<                   set dhost=edcftp.cr.usgs.gov
<                   echo "About to contact $dhost ..."
<                   cat >! ftp.tmp << EOF
<                   user anonymous ${USER}@
<                   cd /pub/data/gtopo30/global
<                   mget ${File30s[$Num2]}.gz
<                   quit
< EOF
<                endif
< 
<                echo "ftping ..."
<                ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<                rm -rf ftp.tmp ftp.output
< 
<                if ( ! -e ${File30s[$Num2]}.gz ) then
<                   echo "ftp is failed"
<                   exit (1)
<                endif
<                echo "untarring and decompressing..."
<                gunzip -c ${File30s[$Num2]}.gz | tar xvf -
<                rm *.tar.gz *.DMW *.GIF *.HDR *.PRJ *.SCH *.SRC *.STX
< 
<             endif
< 
<             if ( -e ${ForUnit}$File30s[$Num3] ) rm ${ForUnit}$File30s[$Num3]
<             ln -s $File30s[$Num0]  ${ForUnit}$File30s[$Num3]
< 
<           else 
< 
< #  ----- access data file in directory ${Data_Dir}:
< 
<             echo "accessing data from specified directory"
<             if ( -e ${Data_Dir}/$File30s[$Num0] ) then
< 
<                if ( -e ${ForUnit}$File30s[$Num3] ) rm ${ForUnit}$File30s[$Num3]
<                ln -s ${Data_Dir}/$File30s[$Num0]  ${ForUnit}$File30s[$Num3]
< 
<             else
<                echo "File ${Data_Dir}/$File30s[$Num0] does not exist"
<                exit(1)
<             endif
< 
<           endif
<           @ Num0 = $Num0 + 4
<         end
<       cd ..
< #
< # (3) To reconstruct the data for use of TERRAIN:
< #  .. mv some files to directory: Data30s
< #
<       echo "beginning reconstruct data"
<       mv data30sID  Data30s/.
<       mv src/rdem.exe Data30s/.
<       cd Data30s
<         rm new_*
<         rdem.exe > rdem.out
<         set toast = $status
<         if ( $toast != 0 ) then
<            echo "error in running rdem, stopping"
<            exit(3)
<         endif
<         mv new_* ../Data/.
<         rm gmeta rdem.exe data30sID ${ForUnit}79 ${ForUnit}8*
<       cd ..
<   else
<      echo "30 SEC ELEVATION DATA WERE NOT REQUESTED. CHECK NTYPE IN NAMELIST"
<      set GLOBAL30S = FALSE
<   endif
< 
---
> if ( $ftpdata == true ) then
>    echo 'about to start ftping'
>    cp Data/ftp.csh .
>    chmod +x ftp.csh
>    ftp.csh >& ftp.out
>    rm ftp.csh ftp.out
702c239,246
< # -----------------------------------------------------------------------
---
> if ( $?IfUsgsTopo && $ftpdata == true ) then
>    echo 'about to start ftping 30 sec tiled elevation data from USGS'
>    cp Data/ftp30s.csh .
>    chmod +x ftp30s.csh
>    ftp30s.csh $Where30sTer $users >& ftp30s.out
>    rm ftp30s.csh ftp30s.out
> endif
> # ----------------------------------------------------------------------
705a250
> unlimit
707c252
< timex terrain.exe >&! terrain.print.out
---
> terrain.exe >&! terrain.print.out
709c254
< rm ${ForUnit}* namelist
---
> rm ${ForUnit}* 
===================================================================
Templates/terrain.deck.hp
diff -r3.7 -r3.10
1c1
< #!/bin/csh
---
> #!/bin/csh -f
6c6
< unalias rm cd
---
> #   Set this if you would like to ftp terrain data
8c8,9
< # SET THE FOLLOWING SCRIPT VARIABLES
---
> set ftpdata = true
> #set ftpdata = false
10c11
< # set GLOBAL30S = TRUE, if you want to use global 30 sec. elevation data:
---
> #   Set the following for ftp'ing 30 sec elevation data from USGS ftp site
12,13c13,15
< #   set GLOBAL30S = TRUE
<     set GLOBAL30S = FALSE
---
> set Where30sTer = ftp
> #set Where30sTer = /your-data-directory
> if ( $Where30sTer == ftp) then
15c17
< if ( $GLOBAL30S == TRUE ) then
---
> #    Use this if you are ftping from other places
17,19c19
< # (1) .. Specify the directory in which the 30s data was stored:
< #        This assumes you have ftp'ed the data down yourself and
< #          uncompressed and untared the data.
---
> #    set users = Others
21c21
< #   set Data_Dir = /usr/tmp/username
---
> #    Use this if you are ftping from MMM/NCAR
23,28c23
< # (2) .. Use the data from ftp:
< #        Leave users blank if you are not using machines from MMM/NCAR
< #
<     set Data_Dir = ftp
<     set users    = MMM
< #   set users    =
---
>      set users = MMM
30,74c25
<     set Data_Dir =  
< endif
< #
< #  set TerPlt = FALSE to create domain maps only
< #  set TerPlt = TRUE  to create terrain/landuse output
< #
<    set TerPlt = TRUE
< #  set TerPlt = FALSE
< #
< #   whether to create color-filled terrain/landuse plots
< #
<    set FillCo = TRUE
< #  set FillCo = FALSE
< #
< #  set NewLandUseOnly = TRUE if you want to use a better landuse dataset
< #      derived from 30 sec vegetation data
< #
< #  set NewLandUseOnly = TRUE
<    set NewLandUseOnly = FALSE
< #
< #  set LandSurface = TRUE if you want to use the land-surface model
< #      in MM5. This will output additional fields.
< #  Note: if you choose LandSurface = TRUE, set NewLandUseOnly = FALSE. 
< #      New landuse data is a default when LandSurface = TRUE
< #
< #  set LandSurface = TRUE
<    set LandSurface = FALSE
< #
< #  Select VegType if NewLandUseOnly = TRUE, or LandSurface = TRUE, 
< #     USGS = Global coverage, 24 catagories
< #      SiB = 0 - 90N, 60W - 180W, 16 catagories (same as used in Eta)
< #  
< #  OR Select VegType if you want to use new land-water mask data
< #     to define coast instead of NCAR Graphics
< #
<    set VegType = USGS
< #  set VegType = SiB
< #
< if ( $LandSurface    == TRUE ) set NewLandUseOnly = FALSE
< if ( $NewLandUseOnly == TRUE ) set LandSurface    = TRUE
< #
< if ( $TerPlt == FALSE ) then
<    set      GLOBAL30S = FALSE
<    set NewLandUseOnly = FALSE
<    set    LandSurface = FALSE
---
>      set users = 
107,108c58,59
< cat > terrain.namelist << 'EOF'
<  $MAPBG
---
> cat > terrain.namelist << EOF
>  &MAPBG
111c62
<  IEXP  =    .T.,      ; .T. EXPANDED COARSE DOMAIN, .F. NOT EXPANDED.
---
>  IEXP  =    .F.,      ; .T. EXPANDED COARSE DOMAIN, .F. NOT EXPANDED.
117,118c68,69
<  $END
<  $DOMAINS
---
>  /
>  &DOMAINS
121,128c72,79
<  NESTIX =   35,   49,  136,  271,  271,   ; GRID DIMENSIONS IN Y DIRECTION
<  NESTJX =   41,   52,  181,  295,  295,   ; GRID DIMENSIONS IN X DIRECTION
<  DIS    =  90.,  30.,6.667,  3.0,  1.0,   ; GRID DISTANCE 
<  NUMNC  =    1,    1,    2,    3,    4,   ; MOTHER DOMAIN ID
<  NESTI  =    1,   10,   28,   45,   80,   ; LOWER LEFT I OF NEST IN MOTHER DOMAIN
<  NESTJ  =    1,   17,   25,  123,  120,   ; LOWER LEFT J OF NEST IN MOTHER DOMAIN
<  RID    =  1.5,  1.5,  1.5,  3.1,  2.3,   ; RADIUS OF INFLUENCE IN GRID UNITS (IFANAL=T)
<  NTYPE  =    2,    3,    4,    4,    5,   ; INPUT DATA RESOLUTION
---
>  NESTIX =   35,   49,  136,  181,  211, 221,  ; GRID DIMENSIONS IN Y DIRECTION
>  NESTJX =   41,   52,  181,  196,  211, 221,  ; GRID DIMENSIONS IN X DIRECTION
>  DIS    =  90.,  30.,   9.,  3.0,  1.0, 1.0,  ; GRID DISTANCE 
>  NUMNC  =    1,    1,    2,    3,    4,   5,  ; MOTHER DOMAIN ID
>  NESTI  =    1,   10,   28,   35,   45,  50,  ; LOWER LEFT I OF NEST IN MOTHER DOMAIN
>  NESTJ  =    1,   17,   25,   65,   55,  50,  ; LOWER LEFT J OF NEST IN MOTHER DOMAIN
>  RID    =  1.5,  1.5,  1.5,  3.1,  2.3,  2.3, ; RADIUS OF INFLUENCE IN GRID UNITS (IFANAL=T)
>  NTYPE  =    2,    3,    4,    6,    6,   6,  ; INPUT DATA RESOLUTION
134c85,86
<  ;      5; 30 sec ( ~.9 km) global terrain and landuse
---
>  ;      5;  2 min (  ~4 km) global terrain and landuse
>  ;      6; 30 sec ( ~.9 km) global terrain and landuse
136,139c88,91
<  NSTTYP=   1,   2,  2,  2,   2,    ;  1 -- ONE WAY NEST, 2 -- TWO WAY NEST
<  $END
<  $OPTN
<  IFTER   = .${TerPlt}.,  ; .T.-- TERRAIN,  .F.-- PLOT DOMAIN MAPS ONLY
---
>  NSTTYP=     1,    2,    2,    2,    2,   2,  ;  1 -- ONE WAY NEST, 2 -- TWO WAY NEST
>  /
>  &OPTN
>  IFTER   = .TRUE.,    ; .T.-- TERRAIN,  .F.-- PLOT DOMAIN MAPS ONLY
151,153c103,105
<  IPRTHT  = .F.,       ; PRINT OUT TERRAIN HEIGHT ON THE MESH
<  IPRTLU  = .F.,       ; PRINT OUT LANDUSE ON THE MESH
<  FIN     = 100., 100., 100., 100., 100.,  ; CONTOUR INTERVAL (meter) FOR TERRAIN HEIGHT PLOT
---
>  IPRTHT  = .F.,       ; PRINT OUT ALL PROCESSING FIELDS ON THE MESH
>  IPRINT  =  0,        ; = 1: A LOT MORE PRINT OUTPUT IN terrain.print.out
>  FIN     = 100., 100., 100., 100., 100., 100., ; CONTOUR INTERVAL (meter) FOR TERRAIN HEIGHT PLOT
156,162c108,114
<  IFILL    = .${FillCo}.,        ; .TRUE. --- color filled plots
<  VegeSoil = .${LandSurface}.,   ; .TRUE. --- Create the Vegetation-Soil files
<   VegOnly = .${NewLandUseOnly}.,    ; .TRUE. --- Vegetation files only
<    VSplot = .TRUE.,             ; .TRUE. --- plot Vege., Soil, Vege. Frc. percentages.
<  G30sD    = .${GLOBAL30S}.,     ; .TRUE. --- Use global 30 sec elevation data
<  $END
<  $FUDGE
---
>  IFILL   = .TRUE.,    ; .TRUE. --- color filled plots
>  LSMDATA = .FALSE.,   ; .TRUE. --- Create the data for LSM
>  VEGTYPE = 1,         ; LANDUSE DATA TYPE: =0: old 13 cat; =1: 24 cat USGS; =2: 16 cat SiB
>  VSPLOT  = .TRUE.,    ; .TRUE. --- plot Vege., Soil, Vege. Frc. percentages.
>  IEXTRA  = .FALSE.,   ; .TRUE. --- Create extra data for Pleim-Xiu LSM
>  /
>  &FUDGE
181,182c133,134
<  $END
<  $FUDGET
---
>  /
>  &FUDGET
194,195c146,147
<  $END
<  $EZFUDGE
---
>  /
>  &EZFUDGE
209,301c161,162
<  $END
< 'EOF'
< #
< #   The following file names represent files obtained from NCAR's ftp site
< #       under mesouser/MM5V3/DATA. 
< #
< #   If you are using the files from mesouser, no need to modify anything below.
< #
< #   Note: If you choose the tiled USGS global 30 sec data, the files are
< #       obtained separately from the namelist below. If you want to use
< #       the single USGS global 30 sec data file (1.9 Gb), comment out
< #       'Data/TER.30s', and uncomment 'Data/DEM_30S_GLOBAL'. This single
< #       global 30 sec data is not provided on NCAR's ftp site.
< #         
< #       Currently we do not support the old TER.30s for continental US.
< #       One must use the global 30 sec data instead. Set GLOBAL30S=TRUE
< #       near the top of this deck.
< #
< if ( $VegType == USGS ) then
< 
< if ( -e data.namelist ) rm data.namelist
< cat > data.namelist << 'EOF'
<  $DATANAME
<  TERNAME = 'Data/TER.60         ',
<            'Data/TER.30         ',
<            'Data/TER.10         ',
<            'Data/TER.05         ',
<            'Data/TER.30s        ',
<  ;         'Data/DEM_30S_GLOBAL ',
<  LNDNAME = 'Data/LANDUSE.60     ',
<            'Data/LANDUSE.30     ',
<            'Data/LANDUSE.10     ',
<            '                    ',
<            '                    ',
<  LWNAME  = 'Data/LWMASK-USGS.60 ',
<            'Data/LWMASK-USGS.30 ',
<            'Data/LWMASK-USGS.10 ',
<            'Data/LWMASK-USGS.05 ',
<            'Data/LWMASK-USGS.30s',
<  VGNAME  = 'Data/VEG-USGS.60    ',
<            'Data/VEG-USGS.30    ',
<            'Data/VEG-USGS.10    ',
<            'Data/VEG-USGS.05    ',
<            'Data/VEG-USGS.30s   ',
<  SONAME  = 'Data/SOILCAT.60     ',
<            'Data/SOILCAT.30     ',
<            'Data/SOILCAT.10     ',
<            'Data/SOILCAT.05     ',
<            'Data/SOILCAT.30s    ',
<  VFNAME  = 'Data/VEG-FRACTION.10',
<  TSNAME  = 'Data/SOILTEMP.60    ',
<  $END
< 'EOF'
< 
< else if ( $VegType == SiB ) then
< 
< if ( -e data.namelist ) rm data.namelist
< cat > data.namelist << 'EOF'
<  $DATANAME
<  TERNAME = 'Data/TER.60         ',
<            'Data/TER.30         ',
<            'Data/TER.10         ',
<            'Data/TER.05         ',
<            'Data/TER.30s        ',
<  ;         'Data/DEM_30S_GLOBAL ',
<  LNDNAME = 'Data/LANDUSE.60     ',
<            'Data/LANDUSE.30     ',
<            'Data/LANDUSE.10     ',
<            '                    ',
<            '                    ',
<  LWNAME  = 'Data/LWMASK-SIB.60  ',
<            'Data/LWMASK-SIB.30  ',
<            'Data/LWMASK-SIB.10  ',
<            'Data/LWMASK-SIB.05  ',
<            'Data/LWMASK-SIB.30s ',
<  VGNAME  = 'Data/VEG-SIB.60     ',
<            'Data/VEG-SIB.30     ',
<            'Data/VEG-SIB.10     ',
<            'Data/VEG-SIB.05     ',
<            'Data/VEG-SIB.30s    ',
<  SONAME  = 'Data/SOILCAT.60     ',
<            'Data/SOILCAT.30     ',
<            'Data/SOILCAT.10     ',
<            'Data/SOILCAT.05     ',
<            'Data/SOILCAT.30s    ',
<  VFNAME  = 'Data/VEG-FRACTION.10',
<  TSNAME  = 'Data/SOILTEMP.60    ',
<  $END
< 'EOF'
< 
< endif
< #
< cat data.namelist >> terrain.namelist
---
>  /
> EOF
309c170,171
< #      Create a namelist without comments
---
> #     Check to see if recompilation is needed
> #       Need to make here so that rdnml may be used
311,312c173,177
< sed -f Templates/no_comment.sed terrain.namelist | grep "[A-Z,a-z]" > terlif.tmp
< mv terlif.tmp terrain.namelist
---
> cd src
> ../Templates/incldiff.sh parame.incl.tmp parame.incl
> ../Templates/incldiff.sh paramed.incl.tmp paramed.incl
> cd ..
> make >& make.terrain.out
314c179
< # ------------------------------------------------------------------------------
---
> #     Create a namelist without comments
316c181,182
< #      Get low-resolution terrain/landuse source data
---
> sed -f Templates/no_comment.sed terrain.namelist | grep "[A-Z,a-z,/]" > terlif.tmp
> mv terlif.tmp terrain.namelist
318,335c184
< cd Data
<   if ( (! -e TER.30) && ($TerPlt == TRUE) ) then
<      set dhost=ftp.ucar.edu
<      echo "About to contact $dhost ..."
<      cat >! ftp.tmp << EOF
<      user anonymous ${USER}@
<      bi
<      cd mesouser/MM5V3/DATA
<      mget TERLN.TAR.gz
<      quit
< EOF
<      echo "ftping ..."
<      ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<      rm -rf ftp.tmp ftp.output
<      echo "untarring and decompressing..."
<      gunzip -c TERLN.TAR.gz | tar xvf -
<      rm -rf TERLN.TAR.gz
<   endif
---
> #     Set default script variables
337c186
< #      Get land-water mask data 
---
> set LandUse = OLD
339,375c188,189
<   if ( ($VegType == USGS) && ($TerPlt == TRUE) ) then
< 
<      if ( ! -e LWMASK-USGS.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget LANDWATERMASK-USGS.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c LANDWATERMASK-USGS.TAR.gz | tar xvf -
<         rm -rf LANDWATERMASK-USGS.TAR.gz
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e LWMASK-USGS.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get LWMASK-USGS.30s.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip LWMASK-USGS.30s.gz 
<      endif
< 
<   else if ( ($VegType == SiB) && ($TerPlt == TRUE) ) then
---
> set DataType = `src/rdnml < terrain.namelist`
> echo $DataType
377,411c191,195
<      if ( ! -e LWMASK-SIB.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget LANDWATERMASK-SIB.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c LANDWATERMASK-SIB.TAR.gz | tar xf -
<         rm -rf LANDWATERMASK-SIB.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e LWMASK-SIB.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get LWMASK-SIB.30s.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip LWMASK-SIB.30s.gz 
<      endif
< 
<   endif
---
> if ( $DataType[4] == 1 ) set IfProcData
> if ( $DataType[4] == 0 ) set ftpdata = false
> if ( $DataType[5] == 1 ) set LandUse = USGS
> if ( $DataType[5] == 2 ) set LandUse = SiB
> if ( $DataType[3] == 1 ) set IfUsgsTopo
413c197
< #      Get vegetation data 
---
> #      link to Fortran units
415,453c199,200
< if ( $NewLandUseOnly == TRUE || $LandSurface == TRUE ) then
< 
<   if ( $VegType == USGS ) then
< 
<      if ( ! -e VEG-USGS.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget VEGETATION-USGS.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c VEGETATION-USGS.TAR.gz    | tar xvf -
<         rm -rf VEGETATION-USGS.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e VEG-USGS.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get VEG-USGS.30s.gz 
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip VEG-USGS.30s.gz
<      endif
< 
<   else if ( $VegType == SiB ) then
---
> set ForUnit = fort.
> rm ${ForUnit}1* ${ForUnit}2* ${ForUnit}4*
455,481c202,205
<      if ( ! -e VEG-SIB.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget VEGETATION-SIB.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c VEGETATION-SIB.TAR.gz | tar xf -
<         rm -rf VEGETATION-SIB.TAR.gz
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e VEG-SIB.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get VEG-SIB.30s.gz 
<         quit
---
> if ( $LandUse != SiB ) cat Data/namelist.usgsdata >> terrain.namelist
> if ( $LandUse == SiB ) cat Data/namelist.sibdata  >> terrain.namelist
> cat > endnml << EOF
>  /
483,492c207,208
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip VEG-SIB.30s.gz
<      endif
< 
<   endif
< endif
< #
< #      get vegetation fraction, soil type, and annual mean deep soil temp data
---
> cat endnml >> terrain.namelist
> rm endnml
494,534c210,213
< if ( ($LandSurface == TRUE) && ($NewLandUseOnly == FALSE) ) then
< 
<      if ( ! -e SOILCAT.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget SOILCAT.TAR.gz
<         mget SOILTEMP.60
<         mget VEG-FRACTION.10.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c SOILCAT.TAR.gz | tar xvf -
<         gunzip    VEG-FRACTION.10.gz
<         rm -rf SOILCAT.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e SOILCAT.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget SOILCAT.30s.gz 
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip SOILCAT.30s.gz 
<      endif
< 
< endif
< cd ..
---
>    ln -s  terrain.namelist      ${ForUnit}15
>    ln -s  ezids                 ${ForUnit}18
>    ln -s  raobsta.ieee          ${ForUnit}16
> # ----------------------------------------------------------------------
536c215,216
< #      update parameter statements for vegetation dataset
---
> #     Update parameter statements for vegetation dataset
> #       (may require partial recompilation)
538,545c218
< if ( ($VegType == USGS) && ($TerPlt == TRUE) ) then
< 
<    cp src/paramesv1.incl src/paramesv.incl.tmp
<    ./Templates/incldiff.sh src/paramesv.incl.tmp src/paramesv.incl
<    cp src/vs_data2.incl  src/vs_data.incl.tmp
<    ./Templates/incldiff.sh src/vs_data.incl.tmp src/vs_data.incl
< 
< else if ( ($VegType == SiB) && ($TerPlt == TRUE) ) then
---
> if ( $LandUse == SiB ) then
550a224
>    make >& make2.print.out
552a227
> # ----------------------------------------------------------------------
554,564c229
< #      link to Fortran units
< #
< set ForUnit = ftn
< rm ${ForUnit}9 ${ForUnit}1* ${ForUnit}2* ${ForUnit}4*
< #
<    ln -s  namelist              ${ForUnit}9
<    ln -s  terrain.namelist      ${ForUnit}15
<    ln -s  ezids                 ${ForUnit}18
<    ln -s  raobsta.ieee          ${ForUnit}16
< #
< # --------------------------------------------------------------------------
---
> #     should I ftp the data?
566,699c231,236
< unlimit
< #
< #     Check to see if recompilation is needed
< #
< cd src
< ../Templates/incldiff.sh parame.incl.tmp parame.incl
< ../Templates/incldiff.sh paramed.incl.tmp paramed.incl
< cd ..
< make
< #
< #     Obtain 30 sec global elevation data, and preprocess the data
< #
< if ( $GLOBAL30S == TRUE ) then
< #
< # (1) Generate the "dem_read" for getting the 30s data:
< #
<       src/data_area.exe >! data_area.out
<       set toast = $status
<       if ( $toast != 0 ) then
<          echo "error in running data_area, stopping"
<          exit(1)
<       endif
< #      rm data_area.out
< 
< # if file dem_read is not created, no need to do the following
< 
<   if ( -e dem_read ) then
< 
<       echo "---------------------------------------------------"
<       echo "Global 30-sec data files needed"
<       echo "   FileName     MSS_file      FTP_file    FortranUnit"
<       cat dem_read
<       echo "---------------------------------------------------"
< #
< # (2) Get the data from MSS or ftp site or "ln" to the specified directory:
< #
<       mkdir -p Data30s
<       cd Data30s ; mv ../dem_read .
<         set File30s = `cat dem_read`
<         set Nfiles = ${#File30s}
<         echo $Nfiles $File30s
< #
<         set Num0 = 1
<         while ( $Num0 <= $Nfiles )
<           @ Num1 = $Num0 + 1
<           @ Num2 = $Num0 + 2
<           @ Num3 = $Num0 + 3
< 
<           if ( $Data_Dir == ftp ) then
< 
< #  ----- Data from ftp edcftp.cr.usgs.gov:
< 
<             if ( ! -e $File30s[$Num0] ) then
< 
<                if ( $users == MMM ) then
<                   set dhost=gate.ucar.edu
<                   echo "About to contact $dhost ..."
<                   cat >! ftp.tmp << EOF
<                   user anonymous@edcftp.cr.usgs.gov ${USER}@
<                   bi
<                   cd /pub/data/gtopo30/global
<                   mget ${File30s[$Num2]}.gz
<                   quit
< EOF
<                else
<                   set dhost=edcftp.cr.usgs.gov
<                   echo "About to contact $dhost ..."
<                   cat >! ftp.tmp << EOF
<                   user anonymous ${USER}@
<                   cd /pub/data/gtopo30/global
<                   mget ${File30s[$Num2]}.gz
<                   quit
< EOF
<                endif
< 
<                echo "ftping ..."
<                ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<                rm -rf ftp.tmp ftp.output
< 
<                if ( ! -e ${File30s[$Num2]}.gz ) then
<                   echo "ftp is failed"
<                   exit (1)
<                endif
<                echo "untarring and decompressing..."
<                gunzip -c ${File30s[$Num2]}.gz | tar xvf -
<                rm *.tar.gz *.DMW *.GIF *.HDR *.PRJ *.SCH *.SRC *.STX
< 
<             endif
< 
<             if ( -e ${ForUnit}$File30s[$Num3] ) rm ${ForUnit}$File30s[$Num3]
<             ln -s $File30s[$Num0]  ${ForUnit}$File30s[$Num3]
< 
<           else 
< 
< #  ----- access data file in directory ${Data_Dir}:
< 
<             echo "accessing data from specified directory"
<             if ( -e ${Data_Dir}/$File30s[$Num0] ) then
< 
<                if ( -e ${ForUnit}$File30s[$Num3] ) rm ${ForUnit}$File30s[$Num3]
<                ln -s ${Data_Dir}/$File30s[$Num0]  ${ForUnit}$File30s[$Num3]
< 
<             else
<                echo "File ${Data_Dir}/$File30s[$Num0] does not exist"
<                exit(1)
<             endif
< 
<           endif
<           @ Num0 = $Num0 + 4
<         end
<       cd ..
< #
< # (3) To reconstruct the data for use of TERRAIN:
< #  .. mv some files to directory: Data30s
< #
<       echo "beginning reconstruct data"
<       mv data30sID  Data30s/.
<       mv src/rdem.exe Data30s/.
<       cd Data30s
<         rm new_*
<         rdem.exe > rdem.out
<         set toast = $status
<         if ( $toast != 0 ) then
<            echo "error in running rdem, stopping"
<            exit(3)
<         endif
<         mv new_* ../Data/.
<         rm gmeta rdem.exe data30sID ${ForUnit}79 ${ForUnit}8*
<       cd ..
<   else
<      echo "30 SEC ELEVATION DATA WERE NOT REQUESTED. CHECK NTYPE IN NAMELIST"
<      set GLOBAL30S = FALSE
<   endif
< 
---
> if ( $ftpdata == true ) then
>    echo 'about to start ftping'
>    cp Data/ftp.csh .
>    chmod +x ftp.csh
>    ftp.csh >& ftp.out
>    rm ftp.csh ftp.out
702c239,246
< # -----------------------------------------------------------------------
---
> if ( $?IfUsgsTopo && $ftpdata == true ) then
>    echo 'about to start ftping 30 sec tiled elevation data from USGS'
>    cp Data/ftp30s.csh .
>    chmod +x ftp30s.csh
>    ftp30s.csh $Where30sTer $users >& ftp30s.out
>    rm ftp30s.csh ftp30s.out
> endif
> # ----------------------------------------------------------------------
705a250
> unlimit
707c252
< timex terrain.exe >&! terrain.print.out
---
> terrain.exe >&! terrain.print.out
709c254
< rm ${ForUnit}* namelist
---
> rm ${ForUnit}* 
===================================================================
Templates/terrain.deck.ibm
diff -r3.7 -r3.10
1c1
< #!/bin/csh
---
> #!/bin/csh -f
6c6
< unalias rm cd
---
> #   Set this if you would like to ftp terrain data
8c8,9
< # SET THE FOLLOWING SCRIPT VARIABLES
---
> set ftpdata = true
> #set ftpdata = false
10c11
< # set GLOBAL30S = TRUE, if you want to use global 30 sec. elevation data:
---
> #   Set the following for ftp'ing 30 sec elevation data from USGS ftp site
12,13c13,15
< #   set GLOBAL30S = TRUE
<     set GLOBAL30S = FALSE
---
> set Where30sTer = ftp
> #set Where30sTer = /your-data-directory
> if ( $Where30sTer == ftp) then
15c17
< if ( $GLOBAL30S == TRUE ) then
---
> #    Use this if you are ftping from other places
17,19c19
< # (1) .. Specify the directory in which the 30s data was stored:
< #        This assumes you have ftp'ed the data down yourself and
< #          uncompressed and untared the data.
---
> #    set users = Others
21c21
< #   set Data_Dir = /usr/tmp/username
---
> #    Use this if you are ftping from MMM/NCAR
23,28c23
< # (2) .. Use the data from ftp:
< #        Leave users blank if you are not using machines from MMM/NCAR
< #
<     set Data_Dir = ftp
<     set users    = MMM
< #   set users    =
---
>      set users = MMM
30,74c25
<     set Data_Dir =  
< endif
< #
< #  set TerPlt = FALSE to create domain maps only
< #  set TerPlt = TRUE  to create terrain/landuse output
< #
<    set TerPlt = TRUE
< #  set TerPlt = FALSE
< #
< #   whether to create color-filled terrain/landuse plots
< #
<    set FillCo = TRUE
< #  set FillCo = FALSE
< #
< #  set NewLandUseOnly = TRUE if you want to use a better landuse dataset
< #      derived from 30 sec vegetation data
< #
< #  set NewLandUseOnly = TRUE
<    set NewLandUseOnly = FALSE
< #
< #  set LandSurface = TRUE if you want to use the land-surface model
< #      in MM5. This will output additional fields.
< #  Note: if you choose LandSurface = TRUE, set NewLandUseOnly = FALSE. 
< #      New landuse data is a default when LandSurface = TRUE
< #
< #  set LandSurface = TRUE
<    set LandSurface = FALSE
< #
< #  Select VegType if NewLandUseOnly = TRUE, or LandSurface = TRUE, 
< #     USGS = Global coverage, 24 catagories
< #      SiB = 0 - 90N, 60W - 180W, 16 catagories (same as used in Eta)
< #  
< #  OR Select VegType if you want to use new land-water mask data
< #     to define coast instead of NCAR Graphics
< #
<    set VegType = USGS
< #  set VegType = SiB
< #
< if ( $LandSurface    == TRUE ) set NewLandUseOnly = FALSE
< if ( $NewLandUseOnly == TRUE ) set LandSurface    = TRUE
< #
< if ( $TerPlt == FALSE ) then
<    set      GLOBAL30S = FALSE
<    set NewLandUseOnly = FALSE
<    set    LandSurface = FALSE
---
>      set users = 
111c62
<  IEXP  =    .T.,      ; .T. EXPANDED COARSE DOMAIN, .F. NOT EXPANDED.
---
>  IEXP  =    .F.,      ; .T. EXPANDED COARSE DOMAIN, .F. NOT EXPANDED.
121,128c72,79
<  NESTIX =   35,   49,  136,  271,  271,   ; GRID DIMENSIONS IN Y DIRECTION
<  NESTJX =   41,   52,  181,  295,  295,   ; GRID DIMENSIONS IN X DIRECTION
<  DIS    =  90.,  30.,6.667,  3.0,  1.0,   ; GRID DISTANCE 
<  NUMNC  =    1,    1,    2,    3,    4,   ; MOTHER DOMAIN ID
<  NESTI  =    1,   10,   28,   45,   80,   ; LOWER LEFT I OF NEST IN MOTHER DOMAIN
<  NESTJ  =    1,   17,   25,  123,  120,   ; LOWER LEFT J OF NEST IN MOTHER DOMAIN
<  RID    =  1.5,  1.5,  1.5,  3.1,  2.3,   ; RADIUS OF INFLUENCE IN GRID UNITS (IFANAL=T)
<  NTYPE  =    2,    3,    4,    4,    5,   ; INPUT DATA RESOLUTION
---
>  NESTIX =   35,   49,  136,  181,  211, 221,  ; GRID DIMENSIONS IN Y DIRECTION
>  NESTJX =   41,   52,  181,  196,  211, 221,  ; GRID DIMENSIONS IN X DIRECTION
>  DIS    =  90.,  30.,   9.,  3.0,  1.0, 1.0,  ; GRID DISTANCE 
>  NUMNC  =    1,    1,    2,    3,    4,   5,  ; MOTHER DOMAIN ID
>  NESTI  =    1,   10,   28,   35,   45,  50,  ; LOWER LEFT I OF NEST IN MOTHER DOMAIN
>  NESTJ  =    1,   17,   25,   65,   55,  50,  ; LOWER LEFT J OF NEST IN MOTHER DOMAIN
>  RID    =  1.5,  1.5,  1.5,  3.1,  2.3,  2.3, ; RADIUS OF INFLUENCE IN GRID UNITS (IFANAL=T)
>  NTYPE  =    2,    3,    4,    6,    6,   6,  ; INPUT DATA RESOLUTION
134c85,86
<  ;      5; 30 sec ( ~.9 km) global terrain and landuse
---
>  ;      5;  2 min (  ~4 km) global terrain and landuse
>  ;      6; 30 sec ( ~.9 km) global terrain and landuse
136c88
<  NSTTYP=   1,   2,  2,  2,   2,    ;  1 -- ONE WAY NEST, 2 -- TWO WAY NEST
---
>  NSTTYP=     1,    2,    2,    2,    2,   2,  ;  1 -- ONE WAY NEST, 2 -- TWO WAY NEST
139c91
<  IFTER   = .${TerPlt}.,  ; .T.-- TERRAIN,  .F.-- PLOT DOMAIN MAPS ONLY
---
>  IFTER   = .TRUE.,    ; .T.-- TERRAIN,  .F.-- PLOT DOMAIN MAPS ONLY
151,153c103,105
<  IPRTHT  = .F.,       ; PRINT OUT TERRAIN HEIGHT ON THE MESH
<  IPRTLU  = .F.,       ; PRINT OUT LANDUSE ON THE MESH
<  FIN     = 100., 100., 100., 100., 100.,  ; CONTOUR INTERVAL (meter) FOR TERRAIN HEIGHT PLOT
---
>  IPRTHT  = .F.,       ; PRINT OUT ALL PROCESSING FIELDS ON THE MESH
>  IPRINT  =  0,        ; = 1: A LOT MORE PRINT OUTPUT IN terrain.print.out
>  FIN     = 100., 100., 100., 100., 100., 100., ; CONTOUR INTERVAL (meter) FOR TERRAIN HEIGHT PLOT
156,160c108,112
<  IFILL    = .${FillCo}.,        ; .TRUE. --- color filled plots
<  VegeSoil = .${LandSurface}.,   ; .TRUE. --- Create the Vegetation-Soil files
<   VegOnly = .${NewLandUseOnly}.,    ; .TRUE. --- Vegetation files only
<    VSplot = .TRUE.,             ; .TRUE. --- plot Vege., Soil, Vege. Frc. percentages.
<  G30sD    = .${GLOBAL30S}.,     ; .TRUE. --- Use global 30 sec elevation data
---
>  IFILL   = .TRUE.,    ; .TRUE. --- color filled plots
>  LSMDATA = .FALSE.,   ; .TRUE. --- Create the data for LSM
>  VEGTYPE = 1,         ; LANDUSE DATA TYPE: =0: old 13 cat; =1: 24 cat USGS; =2: 16 cat SiB
>  VSPLOT  = .TRUE.,    ; .TRUE. --- plot Vege., Soil, Vege. Frc. percentages.
>  IEXTRA  = .FALSE.,   ; .TRUE. --- Create extra data for Pleim-Xiu LSM
212,302d163
< #   The following file names represent files obtained from NCAR's ftp site
< #       under mesouser/MM5V3/DATA. 
< #
< #   If you are using the files from mesouser, no need to modify anything below.
< #
< #   Note: If you choose the tiled USGS global 30 sec data, the files are
< #       obtained separately from the namelist below. If you want to use
< #       the single USGS global 30 sec data file (1.9 Gb), comment out
< #       'Data/TER.30s', and uncomment 'Data/DEM_30S_GLOBAL'. This single
< #       global 30 sec data is not provided on NCAR's ftp site.
< #         
< #       Currently we do not support the old TER.30s for continental US.
< #       One must use the global 30 sec data instead. Set GLOBAL30S=TRUE
< #       near the top of this deck.
< #
< if ( $VegType == USGS ) then
< 
< if ( -e data.namelist ) rm data.namelist
< cat > data.namelist << EOF
<  &DATANAME
<  TERNAME = 'Data/TER.60         ',
<            'Data/TER.30         ',
<            'Data/TER.10         ',
<            'Data/TER.05         ',
<            'Data/TER.30s        ',
<  ;         'Data/DEM_30S_GLOBAL ',
<  LNDNAME = 'Data/LANDUSE.60     ',
<            'Data/LANDUSE.30     ',
<            'Data/LANDUSE.10     ',
<            '                    ',
<            '                    ',
<  LWNAME  = 'Data/LWMASK-USGS.60 ',
<            'Data/LWMASK-USGS.30 ',
<            'Data/LWMASK-USGS.10 ',
<            'Data/LWMASK-USGS.05 ',
<            'Data/LWMASK-USGS.30s',
<  VGNAME  = 'Data/VEG-USGS.60    ',
<            'Data/VEG-USGS.30    ',
<            'Data/VEG-USGS.10    ',
<            'Data/VEG-USGS.05    ',
<            'Data/VEG-USGS.30s   ',
<  SONAME  = 'Data/SOILCAT.60     ',
<            'Data/SOILCAT.30     ',
<            'Data/SOILCAT.10     ',
<            'Data/SOILCAT.05     ',
<            'Data/SOILCAT.30s    ',
<  VFNAME  = 'Data/VEG-FRACTION.10',
<  TSNAME  = 'Data/SOILTEMP.60    ',
<  /
< EOF
< 
< else if ( $VegType == SiB ) then
< 
< if ( -e data.namelist ) rm data.namelist
< cat > data.namelist << EOF
<  &DATANAME
<  TERNAME = 'Data/TER.60         ',
<            'Data/TER.30         ',
<            'Data/TER.10         ',
<            'Data/TER.05         ',
<            'Data/TER.30s        ',
<  ;         'Data/DEM_30S_GLOBAL ',
<  LNDNAME = 'Data/LANDUSE.60     ',
<            'Data/LANDUSE.30     ',
<            'Data/LANDUSE.10     ',
<            '                    ',
<            '                    ',
<  LWNAME  = 'Data/LWMASK-SIB.60  ',
<            'Data/LWMASK-SIB.30  ',
<            'Data/LWMASK-SIB.10  ',
<            'Data/LWMASK-SIB.05  ',
<            'Data/LWMASK-SIB.30s ',
<  VGNAME  = 'Data/VEG-SIB.60     ',
<            'Data/VEG-SIB.30     ',
<            'Data/VEG-SIB.10     ',
<            'Data/VEG-SIB.05     ',
<            'Data/VEG-SIB.30s    ',
<  SONAME  = 'Data/SOILCAT.60     ',
<            'Data/SOILCAT.30     ',
<            'Data/SOILCAT.10     ',
<            'Data/SOILCAT.05     ',
<            'Data/SOILCAT.30s    ',
<  VFNAME  = 'Data/VEG-FRACTION.10',
<  TSNAME  = 'Data/SOILTEMP.60    ',
<  /
< EOF
< 
< endif
< #
< cat data.namelist >> terrain.namelist
< #
309c170,171
< #      Create a namelist without comments
---
> #     Check to see if recompilation is needed
> #       Need to make here so that rdnml may be used
311,312c173,177
< sed -f Templates/no_comment.sed terrain.namelist | grep "[A-Z,a-z,/]" > terlif.tmp
< mv terlif.tmp terrain.namelist
---
> cd src
> ../Templates/incldiff.sh parame.incl.tmp parame.incl
> ../Templates/incldiff.sh paramed.incl.tmp paramed.incl
> cd ..
> make >& make.terrain.out
314c179
< # ------------------------------------------------------------------------------
---
> #     Create a namelist without comments
316c181,182
< #      Get low-resolution terrain/landuse source data
---
> sed -f Templates/no_comment.sed terrain.namelist | grep "[A-Z,a-z,/]" > terlif.tmp
> mv terlif.tmp terrain.namelist
318,335c184
< cd Data
<   if ( (! -e TER.30) && ($TerPlt == TRUE) ) then
<      set dhost=ftp.ucar.edu
<      echo "About to contact $dhost ..."
<      cat >! ftp.tmp << EOF
<      user anonymous ${USER}@
<      bi
<      cd mesouser/MM5V3/DATA
<      mget TERLN.TAR.gz
<      quit
< EOF
<      echo "ftping ..."
<      ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<      rm -rf ftp.tmp ftp.output
<      echo "untarring and decompressing..."
<      gunzip -c TERLN.TAR.gz | tar xvf -
<      rm -rf TERLN.TAR.gz
<   endif
---
> #     Set default script variables
337c186
< #      Get land-water mask data 
---
> set LandUse = OLD
339,375c188,189
<   if ( ($VegType == USGS) && ($TerPlt == TRUE) ) then
< 
<      if ( ! -e LWMASK-USGS.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget LANDWATERMASK-USGS.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c LANDWATERMASK-USGS.TAR.gz | tar xvf -
<         rm -rf LANDWATERMASK-USGS.TAR.gz
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e LWMASK-USGS.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get LWMASK-USGS.30s.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip LWMASK-USGS.30s.gz 
<      endif
< 
<   else if ( ($VegType == SiB) && ($TerPlt == TRUE) ) then
---
> set DataType = `src/rdnml < terrain.namelist`
> echo $DataType
377,411c191,195
<      if ( ! -e LWMASK-SIB.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget LANDWATERMASK-SIB.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c LANDWATERMASK-SIB.TAR.gz | tar xf -
<         rm -rf LANDWATERMASK-SIB.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e LWMASK-SIB.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get LWMASK-SIB.30s.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip LWMASK-SIB.30s.gz 
<      endif
< 
<   endif
---
> if ( $DataType[4] == 1 ) set IfProcData
> if ( $DataType[4] == 0 ) set ftpdata = false
> if ( $DataType[5] == 1 ) set LandUse = USGS
> if ( $DataType[5] == 2 ) set LandUse = SiB
> if ( $DataType[3] == 1 ) set IfUsgsTopo
413c197
< #      Get vegetation data 
---
> #      link to Fortran units
415,453c199,200
< if ( $NewLandUseOnly == TRUE || $LandSurface == TRUE ) then
< 
<   if ( $VegType == USGS ) then
< 
<      if ( ! -e VEG-USGS.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget VEGETATION-USGS.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c VEGETATION-USGS.TAR.gz    | tar xvf -
<         rm -rf VEGETATION-USGS.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e VEG-USGS.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get VEG-USGS.30s.gz 
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip VEG-USGS.30s.gz
<      endif
< 
<   else if ( $VegType == SiB ) then
---
> set ForUnit = fort.
> rm ${ForUnit}1* ${ForUnit}2* ${ForUnit}4*
455,481c202,205
<      if ( ! -e VEG-SIB.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget VEGETATION-SIB.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c VEGETATION-SIB.TAR.gz | tar xf -
<         rm -rf VEGETATION-SIB.TAR.gz
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e VEG-SIB.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get VEG-SIB.30s.gz 
<         quit
---
> if ( $LandUse != SiB ) cat Data/namelist.usgsdata >> terrain.namelist
> if ( $LandUse == SiB ) cat Data/namelist.sibdata  >> terrain.namelist
> cat > endnml << EOF
>  /
483,490c207,208
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip VEG-SIB.30s.gz
<      endif
< 
<   endif
< endif
---
> cat endnml >> terrain.namelist
> rm endnml
492,534c210,213
< #      get vegetation fraction, soil type, and annual mean deep soil temp data
< #
< if ( ($LandSurface == TRUE) && ($NewLandUseOnly == FALSE) ) then
< 
<      if ( ! -e SOILCAT.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget SOILCAT.TAR.gz
<         mget SOILTEMP.60
<         mget VEG-FRACTION.10.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c SOILCAT.TAR.gz | tar xvf -
<         gunzip    VEG-FRACTION.10.gz
<         rm -rf SOILCAT.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e SOILCAT.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget SOILCAT.30s.gz 
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip SOILCAT.30s.gz 
<      endif
< 
< endif
< cd ..
---
>    ln -s  terrain.namelist      ${ForUnit}15
>    ln -s  ezids                 ${ForUnit}18
>    ln -s  raobsta.ieee          ${ForUnit}16
> # ----------------------------------------------------------------------
536c215,216
< #      update parameter statements for vegetation dataset
---
> #     Update parameter statements for vegetation dataset
> #       (may require partial recompilation)
538,545c218
< if ( ($VegType == USGS) && ($TerPlt == TRUE) ) then
< 
<    cp src/paramesv1.incl src/paramesv.incl.tmp
<    ./Templates/incldiff.sh src/paramesv.incl.tmp src/paramesv.incl
<    cp src/vs_data2.incl  src/vs_data.incl.tmp
<    ./Templates/incldiff.sh src/vs_data.incl.tmp src/vs_data.incl
< 
< else if ( ($VegType == SiB) && ($TerPlt == TRUE) ) then
---
> if ( $LandUse == SiB ) then
550a224
>    make >& make2.print.out
552a227
> # ----------------------------------------------------------------------
554,557c229
< #      link to Fortran units
< #
< set ForUnit = fort.
< rm ${ForUnit}9 ${ForUnit}1* ${ForUnit}2* ${ForUnit}4*
---
> #     should I ftp the data?
559,699c231,236
<    ln -s  namelist              ${ForUnit}9
<    ln -s  terrain.namelist      ${ForUnit}15
<    ln -s  ezids                 ${ForUnit}18
<    ln -s  raobsta.ieee          ${ForUnit}16
< #
< # --------------------------------------------------------------------------
< #
< unlimit
< #
< #     Check to see if recompilation is needed
< #
< cd src
< ../Templates/incldiff.sh parame.incl.tmp parame.incl
< ../Templates/incldiff.sh paramed.incl.tmp paramed.incl
< cd ..
< make
< #
< #     Obtain 30 sec global elevation data, and preprocess the data
< #
< if ( $GLOBAL30S == TRUE ) then
< #
< # (1) Generate the "dem_read" for getting the 30s data:
< #
<       src/data_area.exe >! data_area.out
<       set toast = $status
<       if ( $toast != 0 ) then
<          echo "error in running data_area, stopping"
<          exit(1)
<       endif
< #      rm data_area.out
< 
< # if file dem_read is not created, no need to do the following
< 
<   if ( -e dem_read ) then
< 
<       echo "---------------------------------------------------"
<       echo "Global 30-sec data files needed"
<       echo "   FileName     MSS_file      FTP_file    FortranUnit"
<       cat dem_read
<       echo "---------------------------------------------------"
< #
< # (2) Get the data from MSS or ftp site or "ln" to the specified directory:
< #
<       mkdir -p Data30s
<       cd Data30s ; mv ../dem_read .
<         set File30s = `cat dem_read`
<         set Nfiles = ${#File30s}
<         echo $Nfiles $File30s
< #
<         set Num0 = 1
<         while ( $Num0 <= $Nfiles )
<           @ Num1 = $Num0 + 1
<           @ Num2 = $Num0 + 2
<           @ Num3 = $Num0 + 3
< 
<           if ( $Data_Dir == ftp ) then
< 
< #  ----- Data from ftp edcftp.cr.usgs.gov:
< 
<             if ( ! -e $File30s[$Num0] ) then
< 
<                if ( $users == MMM ) then
<                   set dhost=gate.ucar.edu
<                   echo "About to contact $dhost ..."
<                   cat >! ftp.tmp << EOF
<                   user anonymous@edcftp.cr.usgs.gov ${USER}@
<                   bi
<                   cd /pub/data/gtopo30/global
<                   mget ${File30s[$Num2]}.gz
<                   quit
< EOF
<                else
<                   set dhost=edcftp.cr.usgs.gov
<                   echo "About to contact $dhost ..."
<                   cat >! ftp.tmp << EOF
<                   user anonymous ${USER}@
<                   cd /pub/data/gtopo30/global
<                   mget ${File30s[$Num2]}.gz
<                   quit
< EOF
<                endif
< 
<                echo "ftping ..."
<                ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<                rm -rf ftp.tmp ftp.output
< 
<                if ( ! -e ${File30s[$Num2]}.gz ) then
<                   echo "ftp is failed"
<                   exit (1)
<                endif
<                echo "untarring and decompressing..."
<                gunzip -c ${File30s[$Num2]}.gz | tar xvf -
<                rm *.tar.gz *.DMW *.GIF *.HDR *.PRJ *.SCH *.SRC *.STX
< 
<             endif
< 
<             if ( -e ${ForUnit}$File30s[$Num3] ) rm ${ForUnit}$File30s[$Num3]
<             ln -s $File30s[$Num0]  ${ForUnit}$File30s[$Num3]
< 
<           else 
< 
< #  ----- access data file in directory ${Data_Dir}:
< 
<             echo "accessing data from specified directory"
<             if ( -e ${Data_Dir}/$File30s[$Num0] ) then
< 
<                if ( -e ${ForUnit}$File30s[$Num3] ) rm ${ForUnit}$File30s[$Num3]
<                ln -s ${Data_Dir}/$File30s[$Num0]  ${ForUnit}$File30s[$Num3]
< 
<             else
<                echo "File ${Data_Dir}/$File30s[$Num0] does not exist"
<                exit(1)
<             endif
< 
<           endif
<           @ Num0 = $Num0 + 4
<         end
<       cd ..
< #
< # (3) To reconstruct the data for use of TERRAIN:
< #  .. mv some files to directory: Data30s
< #
<       echo "beginning reconstruct data"
<       mv data30sID  Data30s/.
<       mv src/rdem.exe Data30s/.
<       cd Data30s
<         rm new_*
<         rdem.exe > rdem.out
<         set toast = $status
<         if ( $toast != 0 ) then
<            echo "error in running rdem, stopping"
<            exit(3)
<         endif
<         mv new_* ../Data/.
<         rm gmeta rdem.exe data30sID ${ForUnit}79 ${ForUnit}8*
<       cd ..
<   else
<      echo "30 SEC ELEVATION DATA WERE NOT REQUESTED. CHECK NTYPE IN NAMELIST"
<      set GLOBAL30S = FALSE
<   endif
< 
---
> if ( $ftpdata == true ) then
>    echo 'about to start ftping'
>    cp Data/ftp.csh .
>    chmod +x ftp.csh
>    ftp.csh >& ftp.out
>    rm ftp.csh ftp.out
702c239,246
< # -----------------------------------------------------------------------
---
> if ( $?IfUsgsTopo && $ftpdata == true ) then
>    echo 'about to start ftping 30 sec tiled elevation data from USGS'
>    cp Data/ftp30s.csh .
>    chmod +x ftp30s.csh
>    ftp30s.csh $Where30sTer $users >& ftp30s.out
>    rm ftp30s.csh ftp30s.out
> endif
> # ----------------------------------------------------------------------
705a250
> unlimit
707c252
< timex terrain.exe >&! terrain.print.out
---
> terrain.exe >&! terrain.print.out
709c254
< rm ${ForUnit}* namelist
---
> rm ${ForUnit}* 
===================================================================
Templates/terrain.deck.sgi
diff -r3.7 -r3.12
1c1
< #!/bin/csh
---
> #!/bin/csh -f
6c6
< unalias rm cd
---
> #   Set this if you would like to ftp terrain data
8c8,9
< # SET THE FOLLOWING SCRIPT VARIABLES
---
> set ftpdata = true
> #set ftpdata = false
10c11
< # set GLOBAL30S = TRUE, if you want to use global 30 sec. elevation data:
---
> #   Set the following for ftp'ing 30 sec elevation data from USGS ftp site
12,13c13,15
< #   set GLOBAL30S = TRUE
<     set GLOBAL30S = FALSE
---
> set Where30sTer = ftp
> #set Where30sTer = /your-data-directory
> if ( $Where30sTer == ftp) then
15c17
< if ( $GLOBAL30S == TRUE ) then
---
> #    Use this if you are ftping from other places
17,19c19
< # (1) .. Specify the directory in which the 30s data was stored:
< #        This assumes you have ftp'ed the data down yourself and
< #          uncompressed and untared the data.
---
> #    set users = Others
21c21
< #   set Data_Dir = /usr/tmp/username
---
> #    Use this if you are ftping from MMM/NCAR
23,28c23
< # (2) .. Use the data from ftp:
< #        Leave users blank if you are not using machines from MMM/NCAR
< #
<     set Data_Dir = ftp
<     set users    = MMM
< #   set users    =
---
>      set users = MMM
30,74c25
<     set Data_Dir =  
< endif
< #
< #  set TerPlt = FALSE to create domain maps only
< #  set TerPlt = TRUE  to create terrain/landuse output
< #
<    set TerPlt = TRUE
< #  set TerPlt = FALSE
< #
< #   whether to create color-filled terrain/landuse plots
< #
<    set FillCo = TRUE
< #  set FillCo = FALSE
< #
< #  set NewLandUseOnly = TRUE if you want to use a better landuse dataset
< #      derived from 30 sec vegetation data
< #
< #  set NewLandUseOnly = TRUE
<    set NewLandUseOnly = FALSE
< #
< #  set LandSurface = TRUE if you want to use the land-surface model
< #      in MM5. This will output additional fields.
< #  Note: if you choose LandSurface = TRUE, set NewLandUseOnly = FALSE. 
< #      New landuse data is a default when LandSurface = TRUE
< #
< #  set LandSurface = TRUE
<    set LandSurface = FALSE
< #
< #  Select VegType if NewLandUseOnly = TRUE, or LandSurface = TRUE, 
< #     USGS = Global coverage, 24 catagories
< #      SiB = 0 - 90N, 60W - 180W, 16 catagories (same as used in Eta)
< #  
< #  OR Select VegType if you want to use new land-water mask data
< #     to define coast instead of NCAR Graphics
< #
<    set VegType = USGS
< #  set VegType = SiB
< #
< if ( $LandSurface    == TRUE ) set NewLandUseOnly = FALSE
< if ( $NewLandUseOnly == TRUE ) set LandSurface    = TRUE
< #
< if ( $TerPlt == FALSE ) then
<    set      GLOBAL30S = FALSE
<    set NewLandUseOnly = FALSE
<    set    LandSurface = FALSE
---
>      set users = 
111c62
<  IEXP  =    .T.,      ; .T. EXPANDED COARSE DOMAIN, .F. NOT EXPANDED.
---
>  IEXP  =    .F.,      ; .T. EXPANDED COARSE DOMAIN, .F. NOT EXPANDED.
121,128c72,79
<  NESTIX =   35,   49,  136,  271,  271,   ; GRID DIMENSIONS IN Y DIRECTION
<  NESTJX =   41,   52,  181,  295,  295,   ; GRID DIMENSIONS IN X DIRECTION
<  DIS    =  90.,  30.,6.667,  3.0,  1.0,   ; GRID DISTANCE 
<  NUMNC  =    1,    1,    2,    3,    4,   ; MOTHER DOMAIN ID
<  NESTI  =    1,   10,   28,   45,   80,   ; LOWER LEFT I OF NEST IN MOTHER DOMAIN
<  NESTJ  =    1,   17,   25,  123,  120,   ; LOWER LEFT J OF NEST IN MOTHER DOMAIN
<  RID    =  1.5,  1.5,  1.5,  3.1,  2.3,   ; RADIUS OF INFLUENCE IN GRID UNITS (IFANAL=T)
<  NTYPE  =    2,    3,    4,    4,    5,   ; INPUT DATA RESOLUTION
---
>  NESTIX =   35,   49,  136,  181,  211, 221,  ; GRID DIMENSIONS IN Y DIRECTION
>  NESTJX =   41,   52,  181,  196,  211, 221,  ; GRID DIMENSIONS IN X DIRECTION
>  DIS    =  90.,  30.,   9.,  3.0,  1.0, 1.0,  ; GRID DISTANCE 
>  NUMNC  =    1,    1,    2,    3,    4,   5,  ; MOTHER DOMAIN ID
>  NESTI  =    1,   10,   28,   35,   45,  50,  ; LOWER LEFT I OF NEST IN MOTHER DOMAIN
>  NESTJ  =    1,   17,   25,   65,   55,  50,  ; LOWER LEFT J OF NEST IN MOTHER DOMAIN
>  RID    =  1.5,  1.5,  1.5,  3.1,  2.3,  2.3, ; RADIUS OF INFLUENCE IN GRID UNITS (IFANAL=T)
>  NTYPE  =    2,    3,    4,    6,    6,   6,  ; INPUT DATA RESOLUTION
134c85,86
<  ;      5; 30 sec ( ~.9 km) global terrain and landuse
---
>  ;      5;  2 min (  ~4 km) global terrain and landuse
>  ;      6; 30 sec ( ~.9 km) global terrain and landuse
136c88
<  NSTTYP=   1,   2,  2,  2,   2,    ;  1 -- ONE WAY NEST, 2 -- TWO WAY NEST
---
>  NSTTYP=     1,    2,    2,    2,    2,   2,  ;  1 -- ONE WAY NEST, 2 -- TWO WAY NEST
139c91
<  IFTER   = .${TerPlt}.,  ; .T.-- TERRAIN,  .F.-- PLOT DOMAIN MAPS ONLY
---
>  IFTER   = .TRUE.,    ; .T.-- TERRAIN,  .F.-- PLOT DOMAIN MAPS ONLY
151,153c103,105
<  IPRTHT  = .F.,       ; PRINT OUT TERRAIN HEIGHT ON THE MESH
<  IPRTLU  = .F.,       ; PRINT OUT LANDUSE ON THE MESH
<  FIN     = 100., 100., 100., 100., 100.,  ; CONTOUR INTERVAL (meter) FOR TERRAIN HEIGHT PLOT
---
>  IPRTHT  = .F.,       ; PRINT OUT ALL PROCESSING FIELDS ON THE MESH
>  IPRINT  =  0,        ; = 1: A LOT MORE PRINT OUTPUT IN terrain.print.out
>  FIN     = 100., 100., 100., 100., 100., 100., ; CONTOUR INTERVAL (meter) FOR TERRAIN HEIGHT PLOT
156,160c108,112
<  IFILL    = .${FillCo}.,        ; .TRUE. --- color filled plots
<  VegeSoil = .${LandSurface}.,   ; .TRUE. --- Create the Vegetation-Soil files
<   VegOnly = .${NewLandUseOnly}.,    ; .TRUE. --- Vegetation files only
<    VSplot = .TRUE.,             ; .TRUE. --- plot Vege., Soil, Vege. Frc. percentages.
<  G30sD    = .${GLOBAL30S}.,     ; .TRUE. --- Use global 30 sec elevation data
---
>  IFILL   = .TRUE.,    ; .TRUE. --- color filled plots
>  LSMDATA = .FALSE.,   ; .TRUE. --- Create the data for LSM
>  VEGTYPE = 1,         ; LANDUSE DATA TYPE: =0: old 13 cat; =1: 24 cat USGS; =2: 16 cat SiB
>  VSPLOT  = .TRUE.,    ; .TRUE. --- plot Vege., Soil, Vege. Frc. percentages.
>  IEXTRA  = .FALSE.,   ; .TRUE. --- Create extra data for Pleim-Xiu LSM
212,302d163
< #   The following file names represent files obtained from NCAR's ftp site
< #       under mesouser/MM5V3/DATA. 
< #
< #   If you are using the files from mesouser, no need to modify anything below.
< #
< #   Note: If you choose the tiled USGS global 30 sec data, the files are
< #       obtained separately from the namelist below. If you want to use
< #       the single USGS global 30 sec data file (1.9 Gb), comment out
< #       'Data/TER.30s', and uncomment 'Data/DEM_30S_GLOBAL'. This single
< #       global 30 sec data is not provided on NCAR's ftp site.
< #         
< #       Currently we do not support the old TER.30s for continental US.
< #       One must use the global 30 sec data instead. Set GLOBAL30S=TRUE
< #       near the top of this deck.
< #
< if ( $VegType == USGS ) then
< 
< if ( -e data.namelist ) rm data.namelist
< cat > data.namelist << EOF
<  &DATANAME
<  TERNAME = 'Data/TER.60         ',
<            'Data/TER.30         ',
<            'Data/TER.10         ',
<            'Data/TER.05         ',
<            'Data/TER.30s        ',
<  ;         'Data/DEM_30S_GLOBAL ',
<  LNDNAME = 'Data/LANDUSE.60     ',
<            'Data/LANDUSE.30     ',
<            'Data/LANDUSE.10     ',
<            '                    ',
<            '                    ',
<  LWNAME  = 'Data/LWMASK-USGS.60 ',
<            'Data/LWMASK-USGS.30 ',
<            'Data/LWMASK-USGS.10 ',
<            'Data/LWMASK-USGS.05 ',
<            'Data/LWMASK-USGS.30s',
<  VGNAME  = 'Data/VEG-USGS.60    ',
<            'Data/VEG-USGS.30    ',
<            'Data/VEG-USGS.10    ',
<            'Data/VEG-USGS.05    ',
<            'Data/VEG-USGS.30s   ',
<  SONAME  = 'Data/SOILCAT.60     ',
<            'Data/SOILCAT.30     ',
<            'Data/SOILCAT.10     ',
<            'Data/SOILCAT.05     ',
<            'Data/SOILCAT.30s    ',
<  VFNAME  = 'Data/VEG-FRACTION.10',
<  TSNAME  = 'Data/SOILTEMP.60    ',
<  &END
< EOF
< 
< else if ( $VegType == SiB ) then
< 
< if ( -e data.namelist ) rm data.namelist
< cat > data.namelist << EOF
<  &DATANAME
<  TERNAME = 'Data/TER.60         ',
<            'Data/TER.30         ',
<            'Data/TER.10         ',
<            'Data/TER.05         ',
<            'Data/TER.30s        ',
<  ;         'Data/DEM_30S_GLOBAL ',
<  LNDNAME = 'Data/LANDUSE.60     ',
<            'Data/LANDUSE.30     ',
<            'Data/LANDUSE.10     ',
<            '                    ',
<            '                    ',
<  LWNAME  = 'Data/LWMASK-SIB.60  ',
<            'Data/LWMASK-SIB.30  ',
<            'Data/LWMASK-SIB.10  ',
<            'Data/LWMASK-SIB.05  ',
<            'Data/LWMASK-SIB.30s ',
<  VGNAME  = 'Data/VEG-SIB.60     ',
<            'Data/VEG-SIB.30     ',
<            'Data/VEG-SIB.10     ',
<            'Data/VEG-SIB.05     ',
<            'Data/VEG-SIB.30s    ',
<  SONAME  = 'Data/SOILCAT.60     ',
<            'Data/SOILCAT.30     ',
<            'Data/SOILCAT.10     ',
<            'Data/SOILCAT.05     ',
<            'Data/SOILCAT.30s    ',
<  VFNAME  = 'Data/VEG-FRACTION.10',
<  TSNAME  = 'Data/SOILTEMP.60    ',
<  &END
< EOF
< 
< endif
< #
< cat data.namelist >> terrain.namelist
< #
309c170,171
< #      Create a namelist without comments
---
> #     Check to see if recompilation is needed
> #       Need to make here so that rdnml may be used
311,312c173,177
< sed -f Templates/no_comment.sed terrain.namelist | grep "[A-Z,a-z]" > terlif.tmp
< mv terlif.tmp terrain.namelist
---
> cd src
> ../Templates/incldiff.sh parame.incl.tmp parame.incl
> ../Templates/incldiff.sh paramed.incl.tmp paramed.incl
> cd ..
> make >& make.terrain.out
314c179
< # ------------------------------------------------------------------------------
---
> #     Create a namelist without comments
316c181,182
< #      Get low-resolution terrain/landuse source data
---
> sed -f Templates/no_comment.sed terrain.namelist | grep "[A-Z,a-z]" > terlif.tmp
> mv terlif.tmp terrain.namelist
318,335c184
< cd Data
<   if ( (! -e TER.30) && ($TerPlt == TRUE) ) then
<      set dhost=ftp.ucar.edu
<      echo "About to contact $dhost ..."
<      cat >! ftp.tmp << EOF
<      user anonymous ${USER}@
<      bi
<      cd mesouser/MM5V3/DATA
<      mget TERLN.TAR.gz
<      quit
< EOF
<      echo "ftping ..."
<      ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<      rm -rf ftp.tmp ftp.output
<      echo "untarring and decompressing..."
<      gunzip -c TERLN.TAR.gz | tar xvf -
<      rm -rf TERLN.TAR.gz
<   endif
---
> #     Set default script variables
337c186
< #      Get land-water mask data 
---
> set LandUse = OLD
339,375c188,189
<   if ( ($VegType == USGS) && ($TerPlt == TRUE) ) then
< 
<      if ( ! -e LWMASK-USGS.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget LANDWATERMASK-USGS.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c LANDWATERMASK-USGS.TAR.gz | tar xvf -
<         rm -rf LANDWATERMASK-USGS.TAR.gz
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e LWMASK-USGS.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get LWMASK-USGS.30s.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip LWMASK-USGS.30s.gz 
<      endif
< 
<   else if ( ($VegType == SiB) && ($TerPlt == TRUE) ) then
---
> set DataType = `src/rdnml < terrain.namelist`
> echo $DataType
377,411c191,195
<      if ( ! -e LWMASK-SIB.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget LANDWATERMASK-SIB.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c LANDWATERMASK-SIB.TAR.gz | tar xf -
<         rm -rf LANDWATERMASK-SIB.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e LWMASK-SIB.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get LWMASK-SIB.30s.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip LWMASK-SIB.30s.gz 
<      endif
< 
<   endif
---
> if ( $DataType[4] == 1 ) set IfProcData
> if ( $DataType[4] == 0 ) set ftpdata = false
> if ( $DataType[5] == 1 ) set LandUse = USGS
> if ( $DataType[5] == 2 ) set LandUse = SiB
> if ( $DataType[3] == 1 ) set IfUsgsTopo
413c197
< #      Get vegetation data 
---
> #      link to Fortran units
415,453c199,200
< if ( $NewLandUseOnly == TRUE || $LandSurface == TRUE ) then
< 
<   if ( $VegType == USGS ) then
< 
<      if ( ! -e VEG-USGS.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget VEGETATION-USGS.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c VEGETATION-USGS.TAR.gz    | tar xvf -
<         rm -rf VEGETATION-USGS.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e VEG-USGS.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get VEG-USGS.30s.gz 
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip VEG-USGS.30s.gz
<      endif
< 
<   else if ( $VegType == SiB ) then
---
> set ForUnit = fort.
> rm ${ForUnit}1* ${ForUnit}2* ${ForUnit}4*
455,481c202,205
<      if ( ! -e VEG-SIB.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget VEGETATION-SIB.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c VEGETATION-SIB.TAR.gz | tar xf -
<         rm -rf VEGETATION-SIB.TAR.gz
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e VEG-SIB.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get VEG-SIB.30s.gz 
<         quit
---
> if ( $LandUse != SiB ) cat Data/namelist.usgsdata >> terrain.namelist
> if ( $LandUse == SiB ) cat Data/namelist.sibdata  >> terrain.namelist
> cat > endnml << EOF
>  &END
483,490c207,208
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip VEG-SIB.30s.gz
<      endif
< 
<   endif
< endif
---
> cat endnml >> terrain.namelist
> rm endnml
492,534c210,213
< #      get vegetation fraction, soil type, and annual mean deep soil temp data
< #
< if ( ($LandSurface == TRUE) && ($NewLandUseOnly == FALSE) ) then
< 
<      if ( ! -e SOILCAT.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget SOILCAT.TAR.gz
<         mget SOILTEMP.60
<         mget VEG-FRACTION.10.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c SOILCAT.TAR.gz | tar xvf -
<         gunzip    VEG-FRACTION.10.gz
<         rm -rf SOILCAT.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e SOILCAT.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget SOILCAT.30s.gz 
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip SOILCAT.30s.gz 
<      endif
< 
< endif
< cd ..
---
>    ln -s  terrain.namelist      ${ForUnit}15
>    ln -s  ezids                 ${ForUnit}18
>    ln -s  raobsta.ieee          ${ForUnit}16
> # ----------------------------------------------------------------------
536c215,216
< #      update parameter statements for vegetation dataset
---
> #     Update parameter statements for vegetation dataset
> #       (may require partial recompilation)
538,545c218
< if ( ($VegType == USGS) && ($TerPlt == TRUE) ) then
< 
<    cp src/paramesv1.incl src/paramesv.incl.tmp
<    ./Templates/incldiff.sh src/paramesv.incl.tmp src/paramesv.incl
<    cp src/vs_data2.incl  src/vs_data.incl.tmp
<    ./Templates/incldiff.sh src/vs_data.incl.tmp src/vs_data.incl
< 
< else if ( ($VegType == SiB) && ($TerPlt == TRUE) ) then
---
> if ( $LandUse == SiB ) then
550a224
>    make >& make2.print.out
552a227
> # ----------------------------------------------------------------------
554,557c229
< #      link to Fortran units
< #
< set ForUnit = fort.
< rm ${ForUnit}9 ${ForUnit}1* ${ForUnit}2* ${ForUnit}4*
---
> #     should I ftp the data?
559,699c231,236
<    ln -s  namelist              ${ForUnit}9
<    ln -s  terrain.namelist      ${ForUnit}15
<    ln -s  ezids                 ${ForUnit}18
<    ln -s  raobsta.ieee          ${ForUnit}16
< #
< # --------------------------------------------------------------------------
< #
< unlimit
< #
< #     Check to see if recompilation is needed
< #
< cd src
< ../Templates/incldiff.sh parame.incl.tmp parame.incl
< ../Templates/incldiff.sh paramed.incl.tmp paramed.incl
< cd ..
< make
< #
< #     Obtain 30 sec global elevation data, and preprocess the data
< #
< if ( $GLOBAL30S == TRUE ) then
< #
< # (1) Generate the "dem_read" for getting the 30s data:
< #
<       src/data_area.exe >! data_area.out
<       set toast = $status
<       if ( $toast != 0 ) then
<          echo "error in running data_area, stopping"
<          exit(1)
<       endif
< #      rm data_area.out
< 
< # if file dem_read is not created, no need to do the following
< 
<   if ( -e dem_read ) then
< 
<       echo "---------------------------------------------------"
<       echo "Global 30-sec data files needed"
<       echo "   FileName     MSS_file      FTP_file    FortranUnit"
<       cat dem_read
<       echo "---------------------------------------------------"
< #
< # (2) Get the data from MSS or ftp site or "ln" to the specified directory:
< #
<       mkdir -p Data30s
<       cd Data30s ; mv ../dem_read .
<         set File30s = `cat dem_read`
<         set Nfiles = ${#File30s}
<         echo $Nfiles $File30s
< #
<         set Num0 = 1
<         while ( $Num0 <= $Nfiles )
<           @ Num1 = $Num0 + 1
<           @ Num2 = $Num0 + 2
<           @ Num3 = $Num0 + 3
< 
<           if ( $Data_Dir == ftp ) then
< 
< #  ----- Data from ftp edcftp.cr.usgs.gov:
< 
<             if ( ! -e $File30s[$Num0] ) then
< 
<                if ( $users == MMM ) then
<                   set dhost=gate.ucar.edu
<                   echo "About to contact $dhost ..."
<                   cat >! ftp.tmp << EOF
<                   user anonymous@edcftp.cr.usgs.gov ${USER}@
<                   bi
<                   cd /pub/data/gtopo30/global
<                   mget ${File30s[$Num2]}.gz
<                   quit
< EOF
<                else
<                   set dhost=edcftp.cr.usgs.gov
<                   echo "About to contact $dhost ..."
<                   cat >! ftp.tmp << EOF
<                   user anonymous ${USER}@
<                   cd /pub/data/gtopo30/global
<                   mget ${File30s[$Num2]}.gz
<                   quit
< EOF
<                endif
< 
<                echo "ftping ..."
<                ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<                rm -rf ftp.tmp ftp.output
< 
<                if ( ! -e ${File30s[$Num2]}.gz ) then
<                   echo "ftp is failed"
<                   exit (1)
<                endif
<                echo "untarring and decompressing..."
<                gunzip -c ${File30s[$Num2]}.gz | tar xvf -
<                rm *.tar.gz *.DMW *.GIF *.HDR *.PRJ *.SCH *.SRC *.STX
< 
<             endif
< 
<             if ( -e ${ForUnit}$File30s[$Num3] ) rm ${ForUnit}$File30s[$Num3]
<             ln -s $File30s[$Num0]  ${ForUnit}$File30s[$Num3]
< 
<           else 
< 
< #  ----- access data file in directory ${Data_Dir}:
< 
<             echo "accessing data from specified directory"
<             if ( -e ${Data_Dir}/$File30s[$Num0] ) then
< 
<                if ( -e ${ForUnit}$File30s[$Num3] ) rm ${ForUnit}$File30s[$Num3]
<                ln -s ${Data_Dir}/$File30s[$Num0]  ${ForUnit}$File30s[$Num3]
< 
<             else
<                echo "File ${Data_Dir}/$File30s[$Num0] does not exist"
<                exit(1)
<             endif
< 
<           endif
<           @ Num0 = $Num0 + 4
<         end
<       cd ..
< #
< # (3) To reconstruct the data for use of TERRAIN:
< #  .. mv some files to directory: Data30s
< #
<       echo "beginning reconstruct data"
<       mv data30sID  Data30s/.
<       mv src/rdem.exe Data30s/.
<       cd Data30s
<         rm new_*
<         rdem.exe > rdem.out
<         set toast = $status
<         if ( $toast != 0 ) then
<            echo "error in running rdem, stopping"
<            exit(3)
<         endif
<         mv new_* ../Data/.
<         rm gmeta rdem.exe data30sID ${ForUnit}79 ${ForUnit}8*
<       cd ..
<   else
<      echo "30 SEC ELEVATION DATA WERE NOT REQUESTED. CHECK NTYPE IN NAMELIST"
<      set GLOBAL30S = FALSE
<   endif
< 
---
> if ( $ftpdata == true ) then
>    echo 'about to start ftping'
>    cp Data/ftp.csh .
>    chmod +x ftp.csh
>    ftp.csh >& ftp.out
>    rm ftp.csh ftp.out
702c239,246
< # -----------------------------------------------------------------------
---
> if ( $?IfUsgsTopo && $ftpdata == true ) then
>    echo 'about to start ftping 30 sec tiled elevation data from USGS'
>    cp Data/ftp30s.csh .
>    chmod +x ftp30s.csh
>    ftp30s.csh $Where30sTer $users >& ftp30s.out
>    rm ftp30s.csh ftp30s.out
> endif
> # ----------------------------------------------------------------------
705a250
> unlimit
707c252
< timex terrain.exe >&! terrain.print.out
---
> terrain.exe >&! terrain.print.out
709c254
< rm ${ForUnit}* namelist
---
> rm ${ForUnit}* 
===================================================================
Templates/terrain.deck.sun
diff -r3.7 -r3.10
1c1
< #!/bin/csh
---
> #!/bin/csh -f
6c6
< unalias rm cd
---
> #   Set this if you would like to ftp terrain data
8c8,9
< # SET THE FOLLOWING SCRIPT VARIABLES
---
> set ftpdata = true
> #set ftpdata = false
10c11
< # set GLOBAL30S = TRUE, if you want to use global 30 sec. elevation data:
---
> #   Set the following for ftp'ing 30 sec elevation data from USGS ftp site
12,13c13,15
< #   set GLOBAL30S = TRUE
<     set GLOBAL30S = FALSE
---
> set Where30sTer = ftp
> #set Where30sTer = /your-data-directory
> if ( $Where30sTer == ftp) then
15c17
< if ( $GLOBAL30S == TRUE ) then
---
> #    Use this if you are ftping from other places
17,19c19
< # (1) .. Specify the directory in which the 30s data was stored:
< #        This assumes you have ftp'ed the data down yourself and
< #          uncompressed and untared the data.
---
> #    set users = Others
21c21
< #   set Data_Dir = /usr/tmp/username
---
> #    Use this if you are ftping from MMM/NCAR
23,28c23
< # (2) .. Use the data from ftp:
< #        Leave users blank if you are not using machines from MMM/NCAR
< #
<     set Data_Dir = ftp
<     set users    = MMM
< #   set users    =
---
>      set users = MMM
30,74c25
<     set Data_Dir =  
< endif
< #
< #  set TerPlt = FALSE to create domain maps only
< #  set TerPlt = TRUE  to create terrain/landuse output
< #
<    set TerPlt = TRUE
< #  set TerPlt = FALSE
< #
< #   whether to create color-filled terrain/landuse plots
< #
<    set FillCo = TRUE
< #  set FillCo = FALSE
< #
< #  set NewLandUseOnly = TRUE if you want to use a better landuse dataset
< #      derived from 30 sec vegetation data
< #
< #  set NewLandUseOnly = TRUE
<    set NewLandUseOnly = FALSE
< #
< #  set LandSurface = TRUE if you want to use the land-surface model
< #      in MM5. This will output additional fields.
< #  Note: if you choose LandSurface = TRUE, set NewLandUseOnly = FALSE. 
< #      New landuse data is a default when LandSurface = TRUE
< #
< #  set LandSurface = TRUE
<    set LandSurface = FALSE
< #
< #  Select VegType if NewLandUseOnly = TRUE, or LandSurface = TRUE, 
< #     USGS = Global coverage, 24 catagories
< #      SiB = 0 - 90N, 60W - 180W, 16 catagories (same as used in Eta)
< #  
< #  OR Select VegType if you want to use new land-water mask data
< #     to define coast instead of NCAR Graphics
< #
<    set VegType = USGS
< #  set VegType = SiB
< #
< if ( $LandSurface    == TRUE ) set NewLandUseOnly = FALSE
< if ( $NewLandUseOnly == TRUE ) set LandSurface    = TRUE
< #
< if ( $TerPlt == FALSE ) then
<    set      GLOBAL30S = FALSE
<    set NewLandUseOnly = FALSE
<    set    LandSurface = FALSE
---
>      set users = 
111c62
<  IEXP  =    .T.,      ; .T. EXPANDED COARSE DOMAIN, .F. NOT EXPANDED.
---
>  IEXP  =    .F.,      ; .T. EXPANDED COARSE DOMAIN, .F. NOT EXPANDED.
121,128c72,79
<  NESTIX =   35,   49,  136,  271,  271,   ; GRID DIMENSIONS IN Y DIRECTION
<  NESTJX =   41,   52,  181,  295,  295,   ; GRID DIMENSIONS IN X DIRECTION
<  DIS    =  90.,  30.,6.667,  3.0,  1.0,   ; GRID DISTANCE 
<  NUMNC  =    1,    1,    2,    3,    4,   ; MOTHER DOMAIN ID
<  NESTI  =    1,   10,   28,   45,   80,   ; LOWER LEFT I OF NEST IN MOTHER DOMAIN
<  NESTJ  =    1,   17,   25,  123,  120,   ; LOWER LEFT J OF NEST IN MOTHER DOMAIN
<  RID    =  1.5,  1.5,  1.5,  3.1,  2.3,   ; RADIUS OF INFLUENCE IN GRID UNITS (IFANAL=T)
<  NTYPE  =    2,    3,    4,    4,    5,   ; INPUT DATA RESOLUTION
---
>  NESTIX =   35,   49,  136,  181,  211, 221,  ; GRID DIMENSIONS IN Y DIRECTION
>  NESTJX =   41,   52,  181,  196,  211, 221,  ; GRID DIMENSIONS IN X DIRECTION
>  DIS    =  90.,  30.,   9.,  3.0,  1.0, 1.0,  ; GRID DISTANCE 
>  NUMNC  =    1,    1,    2,    3,    4,   5,  ; MOTHER DOMAIN ID
>  NESTI  =    1,   10,   28,   35,   45,  50,  ; LOWER LEFT I OF NEST IN MOTHER DOMAIN
>  NESTJ  =    1,   17,   25,   65,   55,  50,  ; LOWER LEFT J OF NEST IN MOTHER DOMAIN
>  RID    =  1.5,  1.5,  1.5,  3.1,  2.3,  2.3, ; RADIUS OF INFLUENCE IN GRID UNITS (IFANAL=T)
>  NTYPE  =    2,    3,    4,    6,    6,   6,  ; INPUT DATA RESOLUTION
134c85,86
<  ;      5; 30 sec ( ~.9 km) global terrain and landuse
---
>  ;      5;  2 min (  ~4 km) global terrain and landuse
>  ;      6; 30 sec ( ~.9 km) global terrain and landuse
136c88
<  NSTTYP=   1,   2,  2,  2,   2,    ;  1 -- ONE WAY NEST, 2 -- TWO WAY NEST
---
>  NSTTYP=     1,    2,    2,    2,    2,   2,  ;  1 -- ONE WAY NEST, 2 -- TWO WAY NEST
139c91
<  IFTER   = .${TerPlt}.,  ; .T.-- TERRAIN,  .F.-- PLOT DOMAIN MAPS ONLY
---
>  IFTER   = .TRUE.,    ; .T.-- TERRAIN,  .F.-- PLOT DOMAIN MAPS ONLY
151,153c103,105
<  IPRTHT  = .F.,       ; PRINT OUT TERRAIN HEIGHT ON THE MESH
<  IPRTLU  = .F.,       ; PRINT OUT LANDUSE ON THE MESH
<  FIN     = 100., 100., 100., 100., 100.,  ; CONTOUR INTERVAL (meter) FOR TERRAIN HEIGHT PLOT
---
>  IPRTHT  = .F.,       ; PRINT OUT ALL PROCESSING FIELDS ON THE MESH
>  IPRINT  =  0,        ; = 1: A LOT MORE PRINT OUTPUT IN terrain.print.out
>  FIN     = 100., 100., 100., 100., 100., 100., ; CONTOUR INTERVAL (meter) FOR TERRAIN HEIGHT PLOT
156,160c108,112
<  IFILL    = .${FillCo}.,        ; .TRUE. --- color filled plots
<  VegeSoil = .${LandSurface}.,   ; .TRUE. --- Create the Vegetation-Soil files
<   VegOnly = .${NewLandUseOnly}.,    ; .TRUE. --- Vegetation files only
<    VSplot = .TRUE.,             ; .TRUE. --- plot Vege., Soil, Vege. Frc. percentages.
<  G30sD    = .${GLOBAL30S}.,     ; .TRUE. --- Use global 30 sec elevation data
---
>  IFILL   = .TRUE.,    ; .TRUE. --- color filled plots
>  LSMDATA = .FALSE.,   ; .TRUE. --- Create the data for LSM
>  VEGTYPE = 1,         ; LANDUSE DATA TYPE: =0: old 13 cat; =1: 24 cat USGS; =2: 16 cat SiB
>  VSPLOT  = .TRUE.,    ; .TRUE. --- plot Vege., Soil, Vege. Frc. percentages.
>  IEXTRA  = .FALSE.,   ; .TRUE. --- Create extra data for Pleim-Xiu LSM
212,302d163
< #   The following file names represent files obtained from NCAR's ftp site
< #       under mesouser/MM5V3/DATA. 
< #
< #   If you are using the files from mesouser, no need to modify anything below.
< #
< #   Note: If you choose the tiled USGS global 30 sec data, the files are
< #       obtained separately from the namelist below. If you want to use
< #       the single USGS global 30 sec data file (1.9 Gb), comment out
< #       'Data/TER.30s', and uncomment 'Data/DEM_30S_GLOBAL'. This single
< #       global 30 sec data is not provided on NCAR's ftp site.
< #         
< #       Currently we do not support the old TER.30s for continental US.
< #       One must use the global 30 sec data instead. Set GLOBAL30S=TRUE
< #       near the top of this deck.
< #
< if ( $VegType == USGS ) then
< 
< if ( -e data.namelist ) rm data.namelist
< cat > data.namelist << EOF
<  &DATANAME
<  TERNAME = 'Data/TER.60         ',
<            'Data/TER.30         ',
<            'Data/TER.10         ',
<            'Data/TER.05         ',
<            'Data/TER.30s        ',
<  ;         'Data/DEM_30S_GLOBAL ',
<  LNDNAME = 'Data/LANDUSE.60     ',
<            'Data/LANDUSE.30     ',
<            'Data/LANDUSE.10     ',
<            '                    ',
<            '                    ',
<  LWNAME  = 'Data/LWMASK-USGS.60 ',
<            'Data/LWMASK-USGS.30 ',
<            'Data/LWMASK-USGS.10 ',
<            'Data/LWMASK-USGS.05 ',
<            'Data/LWMASK-USGS.30s',
<  VGNAME  = 'Data/VEG-USGS.60    ',
<            'Data/VEG-USGS.30    ',
<            'Data/VEG-USGS.10    ',
<            'Data/VEG-USGS.05    ',
<            'Data/VEG-USGS.30s   ',
<  SONAME  = 'Data/SOILCAT.60     ',
<            'Data/SOILCAT.30     ',
<            'Data/SOILCAT.10     ',
<            'Data/SOILCAT.05     ',
<            'Data/SOILCAT.30s    ',
<  VFNAME  = 'Data/VEG-FRACTION.10',
<  TSNAME  = 'Data/SOILTEMP.60    ',
<  &END
< EOF
< 
< else if ( $VegType == SiB ) then
< 
< if ( -e data.namelist ) rm data.namelist
< cat > data.namelist << EOF
<  &DATANAME
<  TERNAME = 'Data/TER.60         ',
<            'Data/TER.30         ',
<            'Data/TER.10         ',
<            'Data/TER.05         ',
<            'Data/TER.30s        ',
<  ;         'Data/DEM_30S_GLOBAL ',
<  LNDNAME = 'Data/LANDUSE.60     ',
<            'Data/LANDUSE.30     ',
<            'Data/LANDUSE.10     ',
<            '                    ',
<            '                    ',
<  LWNAME  = 'Data/LWMASK-SIB.60  ',
<            'Data/LWMASK-SIB.30  ',
<            'Data/LWMASK-SIB.10  ',
<            'Data/LWMASK-SIB.05  ',
<            'Data/LWMASK-SIB.30s ',
<  VGNAME  = 'Data/VEG-SIB.60     ',
<            'Data/VEG-SIB.30     ',
<            'Data/VEG-SIB.10     ',
<            'Data/VEG-SIB.05     ',
<            'Data/VEG-SIB.30s    ',
<  SONAME  = 'Data/SOILCAT.60     ',
<            'Data/SOILCAT.30     ',
<            'Data/SOILCAT.10     ',
<            'Data/SOILCAT.05     ',
<            'Data/SOILCAT.30s    ',
<  VFNAME  = 'Data/VEG-FRACTION.10',
<  TSNAME  = 'Data/SOILTEMP.60    ',
<  &END
< EOF
< 
< endif
< #
< cat data.namelist >> terrain.namelist
< #
309c170,171
< #      Create a namelist without comments
---
> #     Check to see if recompilation is needed
> #       Need to make here so that rdnml may be used
311,312c173,177
< sed -f Templates/no_comment.sed terrain.namelist | grep "[A-Z,a-z]" > terlif.tmp
< mv terlif.tmp terrain.namelist
---
> cd src
> ../Templates/incldiff.sh parame.incl.tmp parame.incl
> ../Templates/incldiff.sh paramed.incl.tmp paramed.incl
> cd ..
> make >& make.terrain.out
314c179
< # ------------------------------------------------------------------------------
---
> #     Create a namelist without comments
316c181,182
< #      Get low-resolution terrain/landuse source data
---
> sed -f Templates/no_comment.sed terrain.namelist | grep "[A-Z,a-z]" > terlif.tmp
> mv terlif.tmp terrain.namelist
318,335c184
< cd Data
<   if ( (! -e TER.30) && ($TerPlt == TRUE) ) then
<      set dhost=ftp.ucar.edu
<      echo "About to contact $dhost ..."
<      cat >! ftp.tmp << EOF
<      user anonymous ${USER}@
<      bi
<      cd mesouser/MM5V3/DATA
<      mget TERLN.TAR.gz
<      quit
< EOF
<      echo "ftping ..."
<      ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<      rm -rf ftp.tmp ftp.output
<      echo "untarring and decompressing..."
<      gunzip -c TERLN.TAR.gz | tar xvf -
<      rm -rf TERLN.TAR.gz
<   endif
---
> #     Set default script variables
337c186
< #      Get land-water mask data 
---
> set LandUse = OLD
339,375c188,189
<   if ( ($VegType == USGS) && ($TerPlt == TRUE) ) then
< 
<      if ( ! -e LWMASK-USGS.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget LANDWATERMASK-USGS.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c LANDWATERMASK-USGS.TAR.gz | tar xvf -
<         rm -rf LANDWATERMASK-USGS.TAR.gz
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e LWMASK-USGS.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get LWMASK-USGS.30s.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip LWMASK-USGS.30s.gz 
<      endif
< 
<   else if ( ($VegType == SiB) && ($TerPlt == TRUE) ) then
---
> set DataType = `src/rdnml < terrain.namelist`
> echo $DataType
377,411c191,195
<      if ( ! -e LWMASK-SIB.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget LANDWATERMASK-SIB.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c LANDWATERMASK-SIB.TAR.gz | tar xf -
<         rm -rf LANDWATERMASK-SIB.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e LWMASK-SIB.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get LWMASK-SIB.30s.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip LWMASK-SIB.30s.gz 
<      endif
< 
<   endif
---
> if ( $DataType[4] == 1 ) set IfProcData
> if ( $DataType[4] == 0 ) set ftpdata = false
> if ( $DataType[5] == 1 ) set LandUse = USGS
> if ( $DataType[5] == 2 ) set LandUse = SiB
> if ( $DataType[3] == 1 ) set IfUsgsTopo
413c197
< #      Get vegetation data 
---
> #      link to Fortran units
415,453c199,200
< if ( $NewLandUseOnly == TRUE || $LandSurface == TRUE ) then
< 
<   if ( $VegType == USGS ) then
< 
<      if ( ! -e VEG-USGS.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget VEGETATION-USGS.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c VEGETATION-USGS.TAR.gz    | tar xvf -
<         rm -rf VEGETATION-USGS.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e VEG-USGS.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get VEG-USGS.30s.gz 
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip VEG-USGS.30s.gz
<      endif
< 
<   else if ( $VegType == SiB ) then
---
> set ForUnit = fort.
> rm ${ForUnit}1* ${ForUnit}2* ${ForUnit}4*
455,481c202,205
<      if ( ! -e VEG-SIB.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget VEGETATION-SIB.TAR.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c VEGETATION-SIB.TAR.gz | tar xf -
<         rm -rf VEGETATION-SIB.TAR.gz
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e VEG-SIB.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         get VEG-SIB.30s.gz 
<         quit
---
> if ( $LandUse != SiB ) cat Data/namelist.usgsdata >> terrain.namelist
> if ( $LandUse == SiB ) cat Data/namelist.sibdata  >> terrain.namelist
> cat > endnml << EOF
>  &END
483,490c207,208
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip VEG-SIB.30s.gz
<      endif
< 
<   endif
< endif
---
> cat endnml >> terrain.namelist
> rm endnml
492,534c210,213
< #      get vegetation fraction, soil type, and annual mean deep soil temp data
< #
< if ( ($LandSurface == TRUE) && ($NewLandUseOnly == FALSE) ) then
< 
<      if ( ! -e SOILCAT.30 ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget SOILCAT.TAR.gz
<         mget SOILTEMP.60
<         mget VEG-FRACTION.10.gz
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         echo "untarring and decompressing..."
<         gunzip -c SOILCAT.TAR.gz | tar xvf -
<         gunzip    VEG-FRACTION.10.gz
<         rm -rf SOILCAT.TAR.gz 
<      endif
< 
<      if ( ( $GLOBAL30S == TRUE ) && ( ! -e SOILCAT.30s ) ) then
<         set dhost=ftp.ucar.edu
<         echo "About to contact $dhost ..."
<         cat >! ftp.tmp << EOF
<         user anonymous ${USER}@
<         bi
<         cd mesouser/MM5V3/DATA
<         mget SOILCAT.30s.gz 
<         quit
< EOF
<         echo "ftping ..."
<         ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<         rm -rf ftp.tmp ftp.output
<         gunzip SOILCAT.30s.gz 
<      endif
< 
< endif
< cd ..
---
>    ln -s  terrain.namelist      ${ForUnit}15
>    ln -s  ezids                 ${ForUnit}18
>    ln -s  raobsta.ieee          ${ForUnit}16
> # ----------------------------------------------------------------------
536c215,216
< #      update parameter statements for vegetation dataset
---
> #     Update parameter statements for vegetation dataset
> #       (may require partial recompilation)
538,545c218
< if ( ($VegType == USGS) && ($TerPlt == TRUE) ) then
< 
<    cp src/paramesv1.incl src/paramesv.incl.tmp
<    ./Templates/incldiff.sh src/paramesv.incl.tmp src/paramesv.incl
<    cp src/vs_data2.incl  src/vs_data.incl.tmp
<    ./Templates/incldiff.sh src/vs_data.incl.tmp src/vs_data.incl
< 
< else if ( ($VegType == SiB) && ($TerPlt == TRUE) ) then
---
> if ( $LandUse == SiB ) then
550a224
>    make >& make2.print.out
552a227
> # ----------------------------------------------------------------------
554,557c229
< #      link to Fortran units
< #
< set ForUnit = fort.
< rm ${ForUnit}9 ${ForUnit}1* ${ForUnit}2* ${ForUnit}4*
---
> #     should I ftp the data?
559,699c231,236
<    ln -s  namelist              ${ForUnit}9
<    ln -s  terrain.namelist      ${ForUnit}15
<    ln -s  ezids                 ${ForUnit}18
<    ln -s  raobsta.ieee          ${ForUnit}16
< #
< # --------------------------------------------------------------------------
< #
< unlimit
< #
< #     Check to see if recompilation is needed
< #
< cd src
< ../Templates/incldiff.sh parame.incl.tmp parame.incl
< ../Templates/incldiff.sh paramed.incl.tmp paramed.incl
< cd ..
< make
< #
< #     Obtain 30 sec global elevation data, and preprocess the data
< #
< if ( $GLOBAL30S == TRUE ) then
< #
< # (1) Generate the "dem_read" for getting the 30s data:
< #
<       src/data_area.exe >! data_area.out
<       set toast = $status
<       if ( $toast != 0 ) then
<          echo "error in running data_area, stopping"
<          exit(1)
<       endif
< #      rm data_area.out
< 
< # if file dem_read is not created, no need to do the following
< 
<   if ( -e dem_read ) then
< 
<       echo "---------------------------------------------------"
<       echo "Global 30-sec data files needed"
<       echo "   FileName     MSS_file      FTP_file    FortranUnit"
<       cat dem_read
<       echo "---------------------------------------------------"
< #
< # (2) Get the data from MSS or ftp site or "ln" to the specified directory:
< #
<       mkdir -p Data30s
<       cd Data30s ; mv ../dem_read .
<         set File30s = `cat dem_read`
<         set Nfiles = ${#File30s}
<         echo $Nfiles $File30s
< #
<         set Num0 = 1
<         while ( $Num0 <= $Nfiles )
<           @ Num1 = $Num0 + 1
<           @ Num2 = $Num0 + 2
<           @ Num3 = $Num0 + 3
< 
<           if ( $Data_Dir == ftp ) then
< 
< #  ----- Data from ftp edcftp.cr.usgs.gov:
< 
<             if ( ! -e $File30s[$Num0] ) then
< 
<                if ( $users == MMM ) then
<                   set dhost=gate.ucar.edu
<                   echo "About to contact $dhost ..."
<                   cat >! ftp.tmp << EOF
<                   user anonymous@edcftp.cr.usgs.gov ${USER}@
<                   bi
<                   cd /pub/data/gtopo30/global
<                   mget ${File30s[$Num2]}.gz
<                   quit
< EOF
<                else
<                   set dhost=edcftp.cr.usgs.gov
<                   echo "About to contact $dhost ..."
<                   cat >! ftp.tmp << EOF
<                   user anonymous ${USER}@
<                   cd /pub/data/gtopo30/global
<                   mget ${File30s[$Num2]}.gz
<                   quit
< EOF
<                endif
< 
<                echo "ftping ..."
<                ftp -v -n -i $dhost < ftp.tmp >&! ftp.output
<                rm -rf ftp.tmp ftp.output
< 
<                if ( ! -e ${File30s[$Num2]}.gz ) then
<                   echo "ftp is failed"
<                   exit (1)
<                endif
<                echo "untarring and decompressing..."
<                gunzip -c ${File30s[$Num2]}.gz | tar xvf -
<                rm *.tar.gz *.DMW *.GIF *.HDR *.PRJ *.SCH *.SRC *.STX
< 
<             endif
< 
<             if ( -e ${ForUnit}$File30s[$Num3] ) rm ${ForUnit}$File30s[$Num3]
<             ln -s $File30s[$Num0]  ${ForUnit}$File30s[$Num3]
< 
<           else 
< 
< #  ----- access data file in directory ${Data_Dir}:
< 
<             echo "accessing data from specified directory"
<             if ( -e ${Data_Dir}/$File30s[$Num0] ) then
< 
<                if ( -e ${ForUnit}$File30s[$Num3] ) rm ${ForUnit}$File30s[$Num3]
<                ln -s ${Data_Dir}/$File30s[$Num0]  ${ForUnit}$File30s[$Num3]
< 
<             else
<                echo "File ${Data_Dir}/$File30s[$Num0] does not exist"
<                exit(1)
<             endif
< 
<           endif
<           @ Num0 = $Num0 + 4
<         end
<       cd ..
< #
< # (3) To reconstruct the data for use of TERRAIN:
< #  .. mv some files to directory: Data30s
< #
<       echo "beginning reconstruct data"
<       mv data30sID  Data30s/.
<       mv src/rdem.exe Data30s/.
<       cd Data30s
<         rm new_*
<         rdem.exe > rdem.out
<         set toast = $status
<         if ( $toast != 0 ) then
<            echo "error in running rdem, stopping"
<            exit(3)
<         endif
<         mv new_* ../Data/.
<         rm gmeta rdem.exe data30sID ${ForUnit}79 ${ForUnit}8*
<       cd ..
<   else
<      echo "30 SEC ELEVATION DATA WERE NOT REQUESTED. CHECK NTYPE IN NAMELIST"
<      set GLOBAL30S = FALSE
<   endif
< 
---
> if ( $ftpdata == true ) then
>    echo 'about to start ftping'
>    cp Data/ftp.csh .
>    chmod +x ftp.csh
>    ftp.csh >& ftp.out
>    rm ftp.csh ftp.out
702c239,246
< # -----------------------------------------------------------------------
---
> if ( $?IfUsgsTopo && $ftpdata == true ) then
>    echo 'about to start ftping 30 sec tiled elevation data from USGS'
>    cp Data/ftp30s.csh .
>    chmod +x ftp30s.csh
>    ftp30s.csh $Where30sTer $users >& ftp30s.out
>    rm ftp30s.csh ftp30s.out
> endif
> # ----------------------------------------------------------------------
705a250
> unlimit
707c252
< timex terrain.exe >&! terrain.print.out
---
> terrain.exe >&! terrain.print.out
709c254
< rm ${ForUnit}* namelist
---
> rm ${ForUnit}* 
===================================================================
src/Makefile
diff -r3.3 -r3.6
13,14c13,14
< 		$(RM) $@
< 		$(CPP) $(CPPFLAGS) -D$(MACH) $(FIX01) $*.F > $*.f
---
> 		$(RM) $@ 
> 		cut -c1-72 $*.F | $(CPP) $(CPPFLAGS) -D$(MACH) $(FIX01) > $*.f
19c19,20
< 		$(CPP) $(CPPFLAGS) -D$(MACH) $(FIX01) $*.F > $@
---
> 		$(RM) $@
> 		cut -c1-72 $*.F | $(CPP) $(CPPFLAGS) -D$(MACH) $(FIX01) > $*.f
23a25
> 		$(RM) $*.f
37,46d38
< cray dec hp ibm sgi sun default:
< 		@echo "you need to be up a directory to make terrain.exe"
< 
< all:: 		terrain.exe data_area.exe rdem.exe
< 
< terrain.exe:	$(OBJS) 
< 		$(FC) -o $@ $(LDOPTIONS) $(OBJS) $(LOCAL_LIBRARIES)
< 
< code:		$(SRC) 
< 
56,61d47
< data_area.exe: 	$(OBJS1)
< 		$(RM) $@
< 		$(FC) -o $@ $(OBJS1) $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS)
< 
< code1: 		$(SRC1)
< 
69a56,74
> cray dec hp ibm sgi sun default:
> 		@echo "you need to be up a directory to make terrain.exe"
> 
> all:: 		terrain.exe data_area.exe rdem.exe rdnml
> 
> rdnml:		rdnml.o
> 		$(FC) rdnml.o -o $@
> 
> terrain.exe:	$(OBJS) 
> 		$(FC) -o $@ $(LDOPTIONS) $(OBJS) $(LOCAL_LIBRARIES)
> 
> code:		$(SRC) 
> 
> data_area.exe: 	$(OBJS1)
> 		$(RM) $@
> 		$(FC) -o $@ $(OBJS1) $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS)
> 
> code1: 		$(SRC1)
> 
79c84
< anal2.o: 	parame.incl nestdmn.incl
---
> anal2.o: 	parame.incl nestdmn.incl io.incl
82c87,88
< crlnd.o: 	maps.incl nestdmn.incl trfudge.incl ezwater.incl
---
> crlnd.o: 	maps.incl nestdmn.incl trfudge.incl ezwater.incl ../Makefile
> crlnd.o: 	io.incl 
84,85c90,91
< crlwmsk.o: 	ltdata.incl
< crsoil.o: 	parame.incl paramesv.incl paramed.incl ltdata.incl
---
> crlwmsk.o: 	ltdata.incl io.incl
> crsoil.o: 	parame.incl paramesv.incl paramed.incl ltdata.incl io.incl
87c93,94
< crvst.o: 	parame.incl paramed.incl ltdata.incl
---
> crter.o: 	io.incl
> crvst.o: 	parame.incl paramed.incl ltdata.incl io.incl
89c96,99
< data_area.o: 	parame.incl maps.incl nestdmn.incl ltdata.incl
---
> crvst30s.o: 	io.incl 
> cr30sdata.o: 	../Makefile
> data_area.o: 	parame.incl maps.incl nestdmn.incl ltdata.incl io.incl
> dfclrs.o: 	../Makefile
91,94c101,108
< finprt.o: 	option.incl parame.incl paramesv.incl headerv3.incl
< interp.o: 	option.incl ltdata.incl
< labels.o: 	paramesv.incl vs_cmn2.incl
< labelv.o: 	paramesv.incl vs_cmn2.incl
---
> finprt.o: 	option.incl parame.incl paramesv.incl headerv3.incl ../Makefile
> finprt.o: 	io.incl
> interp.o: 	option.incl ltdata.incl io.incl
> hiresmap.o: 	../Makefile
> ia.o: 		../Makefile
> label.o: 	paramesv.incl vs_cmn2.incl ../Makefile
> labels.o: 	paramesv.incl vs_cmn2.incl ../Makefile
> labelv.o: 	paramesv.incl vs_cmn2.incl ../Makefile
101c115,117
< output.o: 	maps.incl namelist.incl vs_cmn2.incl vs_cmn1.incl
---
> output.o: 	maps.incl namelist.incl vs_cmn2.incl vs_cmn1.incl io.incl
> plotcon.o: 	../Makefile
> plots.o: 	../Makefile
103c119
< pltter.o: 	vs_cmn1.incl vs_cmn2.incl
---
> pltter.o: 	vs_cmn1.incl vs_cmn2.incl ../Makefile
104a121
> rdem.o: 	../Makefile
106c123
< replace.o: 	nestdmn.incl
---
> replace.o: 	nestdmn.incl io.incl
108a126
> search.o: 	io.incl
111c129
< setup.o: 	vs_cmn1.incl vs_cmn2.incl vs_data.incl 
---
> setup.o: 	vs_cmn1.incl vs_cmn2.incl vs_data.incl io.incl ../Makefile
117c135
< terdrv.o: 	vs_cmn2.incl
---
> terdrv.o: 	vs_cmn2.incl io.incl
119c137
< terrain.o: 	ezwater.incl
---
> terrain.o: 	ezwater.incl io.incl ../Makefile
121a140
> tfudge.o: 	io.incl 
===================================================================
src/anal2.F
diff -r3.0 -r3.3
32a33,34
> # include <paramed.incl>                                                         06NOV00.1
> # include <io.incl>                                                              06NOV00.2
84c86
<       IF (NI.EQ.5 .AND. ASTA(KK) .EQ. -99.99) GO TO 80                           ANAL2.84
---
>       IF (NI.EQ.max_type .AND. ASTA(KK) .EQ. -99.99) GO TO 80                    06NOV00.3
143c145
<       ELSE IF (NI.EQ.5) THEN                                                     ANAL2.143
---
>       ELSE IF (NI.EQ.max_type) THEN                                              06NOV00.4
===================================================================
src/check_data.F
diff -r3.0 -r3.2
20a21,22
>          IF (XMAXLN.LT.-180.) XMAXLN = -180.                                     06NOV00.5
>          IF (XMAXLN.GT. 180.) XMAXLN =  180.                                     06NOV00.6
===================================================================
src/crlnd.F
diff -r3.0 -r3.3
60a61
> # include <io.incl>                                                              06NOV00.7
78c79
<       LOGICAL FLAG, IP                                                           CRLND.78
---
>       LOGICAL FLAG                                                               06NOV00.8
===================================================================
src/crlwmsk.F
diff -r3.0 -r3.4
4c4
<      -                  GRDLNMN, GRDLTMN, FORCETER,YYY,NAME)                     CRLWMSK.4
---
>      -                  GRDLNMN, GRDLTMN, FORCETER,YYY,NAME,IP)                  06NOV00.9
8a9
> # include <io.incl>                                                              06NOV00.10
11a13
> C                                                                                06NOV00.11
27c29,30
< C .. FIVE RESOLUTIONS:                                                           CRLWMSK.27
---
> C .. SIX RESOLUTIONS:                                                            06NOV00.12
> C                                                                                06NOV00.13
29,39c32,39
<       IF (IRESO_SEC.EQ.3600) THEN                                                CRLWMSK.29
<         NR = 1                                                                   CRLWMSK.30
<       ELSE IF (IRESO_SEC.EQ.1800) THEN                                           CRLWMSK.31
<         NR = 2                                                                   CRLWMSK.32
<       ELSE IF (IRESO_SEC.EQ.600) THEN                                            CRLWMSK.33
<         NR = 3                                                                   CRLWMSK.34
<       ELSE IF (IRESO_SEC.EQ.300) THEN                                            CRLWMSK.35
<         NR = 4                                                                   CRLWMSK.36
<       ELSE IF (IRESO_SEC.EQ.30) THEN                                             CRLWMSK.37
<         NR = 5                                                                   CRLWMSK.38
<       ENDIF                                                                      CRLWMSK.39
---
>       IRESO_SEC = NINT(60.*(RESOL*60.))                                          06NOV00.14
>       DO II = 1,max_type                                                         06NOV00.15
>         JRESO_SEC = NINT(60.*(CENTER(II)*60.))                                   06NOV00.16
>         IF (IRESO_SEC.EQ.JRESO_SEC) THEN                                         06NOV00.17
>           NR = II                                                                06NOV00.18
>           GO TO 8                                                                06NOV00.19
>         ENDIF                                                                    06NOV00.20
>       END DO                                                                     06NOV00.21
41c41
<       PRINT 10,NAME,RESOL,NR,NUNIT1,N                                            CRLWMSK.41
---
>   8   IF (IP.EQ.1) PRINT 10,NAME,RESOL,NR,NUNIT1,N                               06NOV00.22
55,56c55,56
<      5                          IWORK3_CHR,IWORK4_CHR)                           CRLWMSK.55
<       PRINT 5001,NAME,N,LREC                                                     CRLWMSK.56
---
>      5                          IWORK3_CHR,IWORK4_CHR,IP)                        06NOV00.23
>       IF (IP.EQ.1) PRINT 5001,NAME,N,LREC                                        06NOV00.24
75,76c75,76
<       PRINT 6, RESOL,INCR                                                        CRLWMSK.75
< 6     FORMAT(1X,'CREATE LAND-WATER MASK-RESOLUTION =',F8.5,3X,                   CRLWMSK.76
---
>       IF(IP.EQ.1) PRINT 6, RESOL,INCR                                            06NOV00.25
> 6     FORMAT(/2X,'CREATE LAND-WATER MASK-RESOLUTION =',F8.5,3X,                  06NOV00.26
78,79c78,79
<       PRINT 7, LREC,GRDLNMN, GRDLTMN                                             CRLWMSK.78
< 7     FORMAT(/2X,' NOBS=',I8,4X,' ==< GRDLNMN=',F10.2,                           CRLWMSK.79
---
>       IF(IP.EQ.1) PRINT 7, LREC,GRDLNMN, GRDLTMN                                 06NOV00.27
> 7     FORMAT(2X,' NOBS=',I8,4X,' ==< GRDLNMN=',F10.2,                            06NOV00.28
128c128
<         PRINT 11,N,DIS(N),KK,NBOX                                                CRLWMSK.128
---
>         IF (IP.EQ.1) PRINT 11,N,DIS(N),KK,NBOX                                   06NOV00.29
167c167
<         PRINT *,'THE MAXIMUM DISTANCE =',RMAX                                    CRLWMSK.167
---
>         IF (IP.EQ.1) PRINT *,'THE MAXIMUM DISTANCE =',RMAX                       06NOV00.30
===================================================================
src/crsoil.F
diff -r3.0 -r3.4
5c5
<      -                     N,  LREC, GRDLNMN, GRDLTMN, IDW, NAME)                CRSOIL.5
---
>      -                     N,  LREC, GRDLNMN, GRDLTMN, IDW, NAME, IP)            06NOV00.31
17a18
> # include <io.incl>                                                              06NOV00.32
18a20
> C                                                                                06NOV00.33
35,45c37,43
<       IF (IRESO_SEC.EQ.3600) THEN                                                CRSOIL.35
<         NR = 1                                                                   CRSOIL.36
<       ELSE IF (IRESO_SEC.EQ.1800) THEN                                           CRSOIL.37
<         NR = 2                                                                   CRSOIL.38
<       ELSE IF (IRESO_SEC.EQ.600) THEN                                            CRSOIL.39
<         NR = 3                                                                   CRSOIL.40
<       ELSE IF (IRESO_SEC.EQ.300) THEN                                            CRSOIL.41
<         NR = 4                                                                   CRSOIL.42
<       ELSE IF (IRESO_SEC.EQ.30) THEN                                             CRSOIL.43
<         NR = 5                                                                   CRSOIL.44
<       ENDIF                                                                      CRSOIL.45
---
>       DO II = 1,max_type                                                         06NOV00.34
>         JRESO_SEC = NINT(60.*(CENTER(II)*60.))                                   06NOV00.35
>         IF (IRESO_SEC.EQ.JRESO_SEC) THEN                                         06NOV00.36
>           NR = II                                                                06NOV00.37
>           GO TO 8                                                                06NOV00.38
>         ENDIF                                                                    06NOV00.39
>       END DO                                                                     06NOV00.40
47c45
<       PRINT 10,NAME,NCAT,RESOL,NR,N                                              CRSOIL.47
---
>   8   IF (IP.EQ.1) PRINT 10,NAME,NCAT,RESOL,NR,N                                 06NOV00.41
67,68c65,66
<      5                          IWORK3_CHR,IWORK4_CHR)                           CRSOIL.67
<       PRINT 5001,NAME,N                                                          CRSOIL.68
---
>      5                          IWORK3_CHR,IWORK4_CHR,IP)                        06NOV00.42
>       IF (IP.EQ.1) PRINT 5001,NAME,N                                             06NOV00.43
71c69
<       IF (NR.EQ.5) THEN                                                          CRSOIL.71
---
>       IF (NR.EQ.max_type) THEN                                                   06NOV00.44
73c71
<      1           LREC,GRDLNMN,GRDLTMN,ZLON,ZLAT,VEGECAT30S,RESOL,IDW)            CRSOIL.73
---
>      1           LREC,GRDLNMN,GRDLTMN,ZLON,ZLAT,VEGECAT30S,RESOL,IDW,IP)         06NOV00.45
78c76
<      1           LREC,GRDLNMN,GRDLTMN,ZLON,ZLAT,VEGECAT,RESOL,IDW)               CRSOIL.78
---
>      1           LREC,GRDLNMN,GRDLTMN,ZLON,ZLAT,VEGECAT,RESOL,IDW,IP)            06NOV00.46
83,84d80
<                                                                                  CRSOIL.83
<                                                                                  CRSOIL.84
===================================================================
src/crter.F
diff -r3.0 -r3.3
50a51
> # include <io.incl>                                                              06NOV00.47
131,132c132,133
<          PRINT 24,GRDLTMN,GRDLNMN,ITER,JTER                                      CRTER.131
<          PRINT 23,IIMINLND,IIMAXLND,JIMINLND,JIMAXLND                            CRTER.132
---
>          IF(IPRINT.EQ.1)PRINT 24,GRDLTMN,GRDLNMN,ITER,JTER                       06NOV00.48
>          IF(IPRINT.EQ.1)PRINT 23,IIMINLND,IIMAXLND,JIMINLND,JIMAXLND             06NOV00.49
145c146
<          PRINT 32                                                                CRTER.145
---
>          IF(IPRINT.EQ.1) PRINT 32                                                06NOV00.50
157c158
<         PRINT 70                                                                 CRTER.157
---
>         IF(IPRINT.EQ.1)PRINT 70                                                  06NOV00.51
161c162
<          PRINT 80                                                                CRTER.161
---
>         IF(IPRINT.EQ.1)PRINT 80                                                  06NOV00.52
===================================================================
src/crvst.F
diff -r3.0 -r3.3
2c2
<      1                 NOBS,GRDLNMN,GRDLTMN,ZLON,ZLAT,ZXXX,RESOL,IDW)            CRVST.2
---
>      1                 NOBS,GRDLNMN,GRDLTMN,ZLON,ZLAT,ZXXX,RESOL,IDW,IP)         06NOV00.53
26a27
> # include <io.incl>                                                              06NOV00.54
46c47
<       PRINT 6, VARNAME,RESOL,INCR,IDW, NCAT                                      CRVST.46
---
>       IF(IP.EQ.1) PRINT 6, VARNAME,RESOL,INCR,IDW, NCAT                          06NOV00.55
50c51
<       PRINT 7, NOBS,GRDLNMN, GRDLTMN                                             CRVST.50
---
>       IF(IP.EQ.1) PRINT 7, NOBS,GRDLNMN, GRDLTMN                                 06NOV00.56
116c117
<       IF (ILEV.EQ.1) THEN                                                        CRVST.116
---
>       IF (ILEV.EQ.1 .AND. IP.EQ.1) THEN                                          06NOV00.57
180c181
<         PRINT 33, ILEV, NPP, SPP                                                 CRVST.180
---
>         IF (IP.EQ.1) PRINT 33, ILEV, NPP, SPP                                    06NOV00.58
229c230
<             PRINT 107,JL,IM,JM,INC,ZZZ(IM,JM),LZZ(IM,JM)                         CRVST.229
---
>             IF(IP.EQ.1)PRINT 107,JL,IM,JM,INC,ZZZ(IM,JM),LZZ(IM,JM)              06NOV00.59
259c260
<         PRINT 111,NADJ                                                           CRVST.259
---
>         IF (IP.EQ.1) PRINT 111,NADJ                                              06NOV00.60
===================================================================
src/crvst30s.F
diff -r3.0 -r3.3
2c2
<      1                 NOBS,GRDLNMN,GRDLTMN,ZLON,ZLAT,ZXXX,RESOL,IDW)            CRVST30S.2
---
>      1                 NOBS,GRDLNMN,GRDLTMN,ZLON,ZLAT,ZXXX,RESOL,IDW,IP)         06NOV00.61
26a27
> # include <io.incl>                                                              06NOV00.62
49c50
<       PRINT 6, VARNAME,RESOL,INCR,IDW,NCAT                                       CRVST30S.49
---
>       IF(IP.EQ.1)PRINT 6, VARNAME,RESOL,INCR,IDW,NCAT                            06NOV00.63
53c54
<       PRINT 7, NOBS,GRDLNMN, GRDLTMN                                             CRVST30S.53
---
>       IF(IP.EQ.1)PRINT 7, NOBS,GRDLNMN, GRDLTMN                                  06NOV00.64
106c107
<         PRINT 11,N,DIS(N),KK,NBOX                                                CRVST30S.106
---
>         IF(IP.EQ.1) PRINT 11,N,DIS(N),KK,NBOX                                    06NOV00.65
145c146
<         PRINT *,'THE MAXIMUM DISTANCE =',RMAX                                    CRVST30S.145
---
>         IF(IP.EQ.1) PRINT *,'THE MAXIMUM DISTANCE =',RMAX                        06NOV00.66
===================================================================
src/data_area.F
diff -r3.0 -r3.3
3a4,5
> # include <paramed.incl>                                                         06NOV00.67
> # include <io.incl>                                                              06NOV00.68
35c37
<       IF (NDI.EQ.5) THEN                                                         DATA_AREA.35
---
>       IF (NDI.EQ.max_type .AND. N30S.NE.NDI) THEN                                06NOV00.69
51c53
<       IF (N30S.EQ.5)                                                             DATA_AREA.51
---
>       IF (N30S.EQ.max_type)                                                      06NOV00.70
===================================================================
src/finprt.F
diff -r3.0 -r3.5
26a27
> # include <io.incl>                                                              06NOV00.71
42c43
<       LUNIT=29+NM                                                                FINPRT.42
---
>       LUNIT=IVOL_mdl+NM                                                          06NOV00.72
115,116d115
<         IF (NAME(1:8).EQ.'SOILINDX') PRINT *,'==> ',NAME,' READ IN.'             FINPRT.115
< C                                                                                FINPRT.116
131c130
<         IF(IPRTHT  .AND. NAME.EQ.'TEMPGRD ')                                     FINPRT.131
---
>         IF(IPRTHT)                                                               06NOV00.73
137c136
<         PRINT *, 'REACHING THE END OF FILE'                                      FINPRT.137
---
>         IF(IPRINT.EQ.1)PRINT *, 'REACHING THE END OF FILE'                       06NOV00.74
157c156
<       PRINT *,'IMX,JMX,IMAX,JMAX,NM= ',IMX,JMX,IMAX,JMAX,NM                      FINPRT.157
---
> C     PRINT *,'IMX,JMX,IMAX,JMAX,NM= ',IMX,JMX,IMAX,JMAX,NM                      06NOV00.75
===================================================================
src/interp.F
diff -r3.0 -r3.3
31c31
< C HEIGHT DATA (NI = 5) IS A LOCAL DATASET, THIS SITUATION MAY OCCUR              INTERP.31
---
> C HEIGHT DATA (NI = max-type) IS A LOCAL DATASET, THIS SITUATION MAY OCCUR       06NOV00.76
32a33,34
> # include <paramed.incl>                                                         06NOV00.77
> # include <io.incl>                                                              06NOV00.78
59c61
<       IF (NI.EQ.5) THEN                                                          INTERP.59
---
>       IF (NI.EQ.max_type) THEN                                                   06NOV00.79
===================================================================
src/lakes.F
diff -r3.0 -r3.2
1c1
<       SUBROUTINE LAKES(IX,JX,HT,FORCETER,XLAT,XLON)                              LAKES.1
---
>       SUBROUTINE LAKES(IX,JX,HT,FORCETER,XLAT,XLON,IP)                           06NOV00.80
31c31
<       PRINT 1                                                                    LAKES.31
---
>       IF(IP.EQ.1)PRINT 1                                                         06NOV00.81
===================================================================
src/ltdata.incl
diff -r3.0 -r3.2
6,11c6,14
<      1        NIOLD, IVOL, XMAXLAT,XMINLAT,XMAXLON,XMINLON,XEXTND,               LTDATA.6
<      2        LNDNAME, TERNAME                                                   LTDATA.7
<       DIMENSION   ID1(5), ID2(5), NREC(5), LND(5), ITR(5),                       LTDATA.8
<      1          XLATI(5), XLONI(5), CENTER(5)                                    LTDATA.9
<       CHARACTER LNDNAME(5)*20, TERNAME(5)*20, VGNAME(5)*20,                      LTDATA.10
<      1          SONAME(5)*20, LWNAME(5)*20, VFNAME*20,  TSNAME*20                LTDATA.11
---
>      1        NIOLD,       XMAXLAT,XMINLAT,XMAXLON,XMINLON,XEXTND,               06NOV00.82
>      2        LNDNAME, TERNAME, IVOL_lw, IVOL_vg, IVOL_so, IVOL_vf,              06NOV00.83
>      3        IVOL_ts,  DISOBS                                                   06NOV00.84
>       DIMENSION   ID1(max_type), ID2(max_type), NREC(max_type),                  06NOV00.85
>      1            LND(max_type), ITR(max_type),XLATI(max_type),                  06NOV00.86
>      2          XLONI(max_type), CENTER(max_type), DISOBS(max_type)              06NOV00.87
>       CHARACTER LNDNAME(max_type)*20, TERNAME(max_type)*20,                      06NOV00.88
>      1           VGNAME(max_type)*20,  SONAME(max_type)*20,                      06NOV00.89
>      2           LWNAME(max_type)*20, VFNAME*20, TSNAME*20                       06NOV00.90
===================================================================
src/maps.incl
diff -r3.0 -r3.2
6,8c6,9
<      1             CONV,       A,      C2,DISOBS(5),    IXEX,   JXEX,            MAPS.6
<      2              XJC,   XCNTR,   YCNTR,   CNTRJ0,  CNTRI0,                    MAPS.7
<      3           IOFFST,  JOFFST,   NPROJ,  PROJECT,    IPROJ                    MAPS.8
---
>      1             CONV,       A,      C2,                                       06NOV00.91
>      2             IXEX,    JXEX,     XJC,   XCNTR,   YCNTR,                     06NOV00.92
>      3           CNTRJ0,  CNTRI0,  IOFFST,  JOFFST,   NPROJ,                     06NOV00.93
>      4          PROJECT,    IPROJ                                                06NOV00.94
9a11,14
>                                                                                  06NOV00.95
>                                                                                  06NOV00.96
>                                                                                  06NOV00.97
>                                                                                  06NOV00.98
===================================================================
src/mxmnll.F
diff -r3.0 -r3.3
219c219
< 100   FORMAT(' ###### DOMAIN CROSSED THE 180 DEG. #####')                        MXMNLL.219
---
> 100   FORMAT(1X,'###### DOMAIN CROSSED THE 180 DEG. ######')                     06NOV00.99
221c221,226
< C                                                                                MXMNLL.221
---
> C                                                                                06NOV00.100
>       IF (XMAXLON.GT.180.) THEN                                                  06NOV00.101
>           XMAXLON = XMAXLON -360.                                                06NOV00.102
>           XMINLON = XMINLON -360.                                                06NOV00.103
>       ENDIF                                                                      06NOV00.104
> C                                                                                06NOV00.105
228c233
< 101   FORMAT(' $$$ THE NORTH POLE IS INSIDE THE DOMAIN=',I3 ' $$$')              MXMNLL.228
---
> 101   FORMAT(1X,'$$$$$$ NORTH POLE IS INSIDE THE DOMAIN=',I3,' $$$$$$')          06NOV00.106
230c235
< 102   FORMAT(' $$$ THE SOUTH POLE IS INSIDE THE DOMAIN=',I3,' $$$')              MXMNLL.230
---
> 102   FORMAT('  $$$$$$ SOUTH POLE IS INSIDE THE DOMAIN=',I3,' $$$$$$')           06NOV00.107
===================================================================
src/namelist.incl
diff -r3.0 -r3.2
19a20
>      5              ,LSMDATA, VEGTYPE                                            06NOV00.108
===================================================================
src/output.F
diff -r3.4 -r3.10
22a23,25
> # include <parame.incl>                                                          06NOV00.109
> # include <paramed.incl>                                                         06NOV00.110
> # include <io.incl>                                                              06NOV00.111
41c44
<       NESTID = IINC - 29                                                         OUTPUT.41
---
>       NESTID = IINC - IVOL_mdl                                                   06NOV00.112
43c46
<       PRINT *,'==> CALL OUTPUT, DOMAIN ID = ',NESTID                             OUTPUT.43
---
>       IF(IPRINT.EQ.1) PRINT *,'==> CALL OUTPUT FOR DOMAIN ',NESTID               06NOV00.113
71c74
<       BHI (3,1) = 1                                                              OUTPUT.71
---
>       BHI (3,1) = 3                                                              06NOV00.114
288,289c291,292
<               WRITE(NAME(1:8),9900) IC                                           OUTPUT.290
<               PRINT *, 'FIELD = ', LLBV(IC)                                      OUTPUT.291
---
>               WRITE(NAME(1:9),9900) IC                                           06NOV00.115
>               IF(IPRINT.EQ.1) PRINT *, 'FIELD = ', LLBV(IC)                      06NOV00.116
296c299
< 9900        FORMAT('VEGCAT',I2.2)                                                OUTPUT.298
---
> 9900        FORMAT('VEGCAT',I2.2,' ')                                            06NOV00.117
302c305
<               WRITE(NAME(1:8),9910) IC                                           OUTPUT.304
---
>               WRITE(NAME(1:9),9910) IC                                           06NOV00.118
309c312
< 9910        FORMAT('SOICAT',I2.2)                                                OUTPUT.311
---
> 9910        FORMAT('SOICAT',I2.2,' ')                                            06NOV00.119
317c320
<               WRITE(NAME(1:8),9920) IC                                           OUTPUT.319
---
>               WRITE(NAME(1:9),9920) IC                                           06NOV00.120
324c327
< 9920        FORMAT('VEGFRC',I2.2)                                                OUTPUT.326
---
> 9920        FORMAT('VEGFRC',I2.2,' ')                                            06NOV00.121
===================================================================
src/plotcon.F
diff -r3.0 -r3.3
2c2
<      -                             GRDOUT,FINC,N,N1,NAME,IFILL)                  PLOTCON.2
---
>      -                             GRDOUT,FINC,N,N1,NAME,IFILL,IP)               06NOV00.122
9c9
<       PRINT 5,IMX,JMX,IYY,JXX,IEX,JEX,NVC,N,N1                                   PLOTCON.9
---
>       IF(IP.EQ.1)PRINT 5,IMX,JMX,IYY,JXX,IEX,JEX,NVC,N,N1                        06NOV00.123
36c36
<           PRINT 19,II                                                            PLOTCON.36
---
>           IF (IP.EQ.1) PRINT 19,II                                               06NOV00.124
43c43
<         CALL PWRITX(50.,95.,TITLE(1:32),32,20,0,0)                               PLOTCON.43
---
>         CALL PLCHHQ(50.,95.,TITLE(1:32),.02,0.,0.)                               06NOV00.125
90,91c90,91
<       PRINT *,'      ===> ',NAME,' PLOTTED'                                      PLOTCON.90
<  12   PRINT 11,TITLE(1:32),XMAXM,XMINM                                           PLOTCON.91
---
>       IF(IP.EQ.1)PRINT *,'      ===> ',NAME,' PLOTTED'                           06NOV00.126
>  12   IF(IP.EQ.1)PRINT 11,TITLE(1:32),XMAXM,XMINM                                06NOV00.127
===================================================================
src/plots.F
diff -r3.2 -r3.7
540c540
<         open (unum,status='UNKNOWN',err=20)
---
>         open (unum,status='SCRATCH',err=20)                                      06NOV00.128
859c859
<         call errhan ('MAPDRV',0,ermes,errsev)                                    PLOTS.859
---
> C       call errhan ('MAPDRV',0,ermes,errsev)                                    06NOV00.129
861c861
<         call gscr (1,0,0.00,0.00,0.00)                                           PLOTS.861
---
> C       call gscr (1,0,0.00,0.00,0.00)                                           06NOV00.130
1462c1462
<           print *, 'MAPDRV - Map Successfully Completed'                         PLOTS.1462
---
> C         print *, 'MAPDRV - Map Successfully Completed'                         06NOV00.131
3093c3093
<         print *, 'MAPDRV - Map Colors Set Up'                                    PLOTS.3093
---
> C       print *, 'MAPDRV - Map Colors Set Up'                                    06NOV00.132
3098c3098
<         print *, 'MAPDRV - Default Map Colors Used'                              PLOTS.3098
---
> C       print *, 'MAPDRV - Default Map Colors Used'                              06NOV00.133
3384c3384
<               call errhan ('MAPDRV',0,ermes,errrsev)                             PLOTS.3384
---
>               call errhan ('MAPDRV',0,ermes,errsev)                              06NOV00.134
4108c4108
<           print *, 'MAPDRV - Defaults Used For Map Details'                      PLOTS.4108
---
> C         print *, 'MAPDRV - Defaults Used For Map Details'                      06NOV00.135
4129c4129
<           print *, 'MAPDRV - Area Map Request Accepted'                          PLOTS.4129
---
> C         print *, 'MAPDRV - Area Map Request Accepted'                          06NOV00.136
4249c4249,4250
< 70    print *, 'MAPDRV - Map Details Set Up'                                     PLOTS.4249
---
> 70    continue                                                                   06NOV00.137
> C     print *, 'MAPDRV - Map Details Set Up'                                     06NOV00.138
4555c4556
<         print *, 'MAPDRV - Map Fill Information Set Up'                          PLOTS.4555
---
> C       print *, 'MAPDRV - Map Fill Information Set Up'                          06NOV00.139
4977c4978
<         print *, 'MAPDRV - Lambert Conformal Projection'                         PLOTS.4977
---
> C       print *, 'MAPDRV - Lambert Conformal Projection'                         06NOV00.140
4989c4990
<         print *, 'MAPDRV - Polar Stereographic Projection'                       PLOTS.4989
---
> C       print *, 'MAPDRV - Polar Stereographic Projection'                       06NOV00.141
4996c4997
<         print *, 'MAPDRV - Cylindrical Equidistant Projection'                   PLOTS.4996
---
> C       print *, 'MAPDRV - Cylindrical Equidistant Projection'                   06NOV00.142
5003c5004
<         print *, 'MAPDRV - Mercator Projection'                                  PLOTS.5003
---
> C       print *, 'MAPDRV - Mercator Projection'                                  06NOV00.143
5707c5708
<         print *, 'CONDRV - Plot Successfully Completed'                          PLOTS.5707
---
> C       print *, 'CONDRV - Plot Successfully Completed'                          06NOV00.144
6775c6776
<         print *, 'CONDRV - Color Ramps Created'                                  PLOTS.6775
---
> C       print *, 'CONDRV - Color Ramps Created'                                  06NOV00.145
7434c7435
<         if (cmeth .ne. 0) print *, 'CONDRV - Contour Colors Set Up'              PLOTS.7434
---
> C       if (cmeth .ne. 0) print *, 'CONDRV - Contour Colors Set Up'              06NOV00.146
7440c7441
<         print *, 'CONDRV - Default Contour Colors Used'                          PLOTS.7440
---
> C       print *, 'CONDRV - Default Contour Colors Used'                          06NOV00.147
8284c8285
<         print *, 'CONDRV - Contour Details Set Up'                               PLOTS.8284
---
> C       print *, 'CONDRV - Contour Details Set Up'                               06NOV00.148
8289c8290
<         print *, 'CONDRV - Default Contour Details Used'                         PLOTS.8289
---
> C       print *, 'CONDRV - Default Contour Details Used'                         06NOV00.149
10164c10165
<             if (found) print *, 'CONDRV - Contour Partitions Set Up'             PLOTS.10164
---
> C           if (found) print *, 'CONDRV - Contour Partitions Set Up'             06NOV00.150
11651c11652
<         call errhan ('CONDRV',0,ermes,errsev)                                    PLOTS.11651
---
> C       call errhan ('CONDRV',0,ermes,errsev)                                    06NOV00.151
11653c11654
<         call gscr (1,0,0.00,0.00,0.00)                                           PLOTS.11653
---
> C       call gscr (1,0,0.00,0.00,0.00)                                           06NOV00.152
14070c14071,14072
< 90      print *, 'RDCOLT - Color Table Set Up'                                   PLOTS.14068
---
> 90      continue                                                                 06NOV00.153
> C       print *, 'RDCOLT - Color Table Set Up'                                   06NOV00.154
14082c14084
<         print *, 'RDCOLT - Default Color Table Set Up'                           PLOTS.14080
---
> C       print *, 'RDCOLT - Default Color Table Set Up'                           06NOV00.155
===================================================================
src/pltter.F
diff -r3.1 -r3.7
47a48,49
> # include <paramed.incl>                                                         06NOV00.156
> # include <io.incl>                                                              06NOV00.157
123a126
>       PRINT *,'*** CALL PLTTER FOR DOMAIN ', N                                   06NOV00.158
129c132
<       WRITE(TITLE(1:9),22) N                                                     PLTTER.129
---
> C     WRITE(TITLE(1:9),22) N                                                     06NOV00.159
131c134
<       WRITE(6,23) TITLE                                                          PLTTER.131
---
> C     WRITE(6,23) TITLE                                                          06NOV00.160
132a136
>                                                                                  06NOV00.161
146a151,164
> C  TITLE                                                                         06NOV00.162
>                                                                                  06NOV00.163
>       CALL GSTXCI (16)                                                           06NOV00.164
>       CALL GSPLCI (16)                                                           06NOV00.165
>                                                                                  06NOV00.166
>       IF (IPRINT.EQ.1) PRINT *, '*** N = ', n                                    06NOV00.167
>       CALL SET (0.0,1.0,0.0,1.0,0.0,100.,0.0,100.,1)                             06NOV00.168
>       TITLE(1:30)='MAP OF DOMAIN 1 (NON-EXPANDED)'                               06NOV00.169
>       IF (N.GE.2) THEN                                                           06NOV00.170
>          WRITE (TITLE(1:30),90) N                                                06NOV00.171
> 90       FORMAT('       MAP OF DOMAIN',I2,'       ')                             06NOV00.172
>       END IF                                                                     06NOV00.173
>       CALL PLCHHQ(50.,95.,TITLE(1:30),.02,0.,0.)                                 06NOV00.174
>                                                                                  06NOV00.175
184a203,216
> C  TITLE                                                                         06NOV00.176
>                                                                                  06NOV00.177
>       CALL GSTXCI (16)                                                           06NOV00.178
>       CALL GSPLCI (16)                                                           06NOV00.179
>                                                                                  06NOV00.180
>       IF (.NOT.IFILL) THEN                                                       06NOV00.181
>       CALL SET (0.0,1.0,0.0,1.0,0.0,100.,0.0,100.,1)                             06NOV00.182
>       TITLE(1:30)='MAP OF DOMAIN 1 (NON-EXPANDED)'                               06NOV00.183
>       IF (N.GE.2) THEN                                                           06NOV00.184
>          WRITE (TITLE(1:30),90) N                                                06NOV00.185
>       END IF                                                                     06NOV00.186
>       CALL PLCHHQ(50.,95.,TITLE(1:30),.02,0.,0.)                                 06NOV00.187
>       END IF                                                                     06NOV00.188
>                                                                                  06NOV00.189
233,240d264
< 
< C Red color for title:
<          CALL GSTXCI (16)                                                        PLTTER.567
<          CALL GSPLCI (16) 
<                                                                                  PLTTER.670
<          TITLE(1:23)='TERRAIN HEIGHT IN COLOR'                                   PLTTER.671
<          CALL SET (0.0,1.0,0.0,1.0,0.0,100.,0.0,100.,1)                          PLTTER.672
<          CALL PWRITX(50.,95.,TITLE(1:23),23,20,0,0)                              PLTTER.673
253a278,283
>          CALL GSTXCI (16)                                                        06NOV00.190
>          CALL GSPLCI (16)                                                        06NOV00.191
>                                                                                  06NOV00.192
>          CALL SET (0.0,1.0,0.0,1.0,0.0,100.,0.0,100.,1)                          06NOV00.193
>          CALL PLCHHQ(50.,95.,'TERRAIN HEIGHT IN COLOR',.02,0.,0.)                06NOV00.194
>                                                                                  06NOV00.195
286,292c316,320
< C Red color for title:
<          CALL GSTXCI (16)                                                        PLTTER.567
<          CALL GSPLCI (16) 
<                                                                                  PLTTER.670
<          TITLE(1:21)='TERRAIN HEIGHT IN B/W'                                     PLTTER.671
<          CALL SET (0.0,1.0,0.0,1.0,0.0,100.,0.0,100.,1)                          PLTTER.672
<          CALL PWRITX(50.,95.,TITLE(1:21),21,20,0,0)                              PLTTER.673
---
>       CALL GSTXCI (16)                                                           06NOV00.196
>       CALL GSPLCI (16)                                                           06NOV00.197
>                                                                                  06NOV00.198
>       CALL SET (0.0,1.0,0.0,1.0,0.0,100.,0.0,100.,1)                             06NOV00.199
>       CALL PLCHHQ(50.,95.,'TERRAIN HEIGHT IN B/W',.02,0.,0.)                     06NOV00.200
346,352c374,379
< C Red color for title:
<          CALL GSTXCI (16)                                                        PLTTER.567
<          CALL GSPLCI (16) 
<                                                                                  PLTTER.670
<          TITLE(1:17)='OLD LAND-USE TYPE'                                         PLTTER.671
<          CALL SET (0.0,1.0,0.0,1.0,0.0,100.,0.0,100.,1)                          PLTTER.672
<          CALL PWRITX(50.,95.,TITLE(1:17),17,20,0,0)                              PLTTER.673
---
> C  TITLE                                                                         06NOV00.201
>       CALL GSTXCI (16)                                                           06NOV00.202
>       CALL GSPLCI (16)                                                           06NOV00.203
>                                                                                  06NOV00.204
>       CALL SET (0.0,1.0,0.0,1.0,0.0,100.,0.0,100.,1)                             06NOV00.205
>       CALL PLCHHQ(50.,95.,'OLD LAND-USE TYPE',.02,0.,0.)                         06NOV00.206
427,433c454,460
< C Red color for title:
<          CALL GSTXCI (16)                                                        PLTTER.567
<          CALL GSPLCI (16) 
<                                                                                  PLTTER.670
<          TITLE(1:34)='DOMINANT VEGECAT/NEW-LAND-USE TYPE'                        PLTTER.671
<          CALL SET (0.0,1.0,0.0,1.0,0.0,100.,0.0,100.,1)                          PLTTER.672
<          CALL PWRITX(40.,95.,TITLE(1:34),34,20,0,0)                              PLTTER.673
---
> C  TITLE                                                                         06NOV00.207
>       CALL GSTXCI (16)                                                           06NOV00.208
>       CALL GSPLCI (16)                                                           06NOV00.209
>                                                                                  06NOV00.210
>       CALL SET (0.0,1.0,0.0,1.0,0.0,100.,0.0,100.,1)                             06NOV00.211
>       CALL PLCHHQ(50.,95.,'DOMINANT VEGECAT/NEW LANDUSE TYPE',                   06NOV00.212
>      *           .02,0.,0.)                                                      06NOV00.213
569,571c596,598
<          IF(SSTA.EQ.'72270')                                                     PLTTER.537
<      *    PRINT *,'XX,YY,IEND,JEND,XA,YA= ',                                     PLTTER.538
<      *    XX,YY,IEND,JEND,XA,YA                                                  PLTTER.539
---
> C        IF(SSTA.EQ.'72270')                                                     06NOV00.214
> C    *    PRINT *,'XX,YY,IEND,JEND,XA,YA= ',                                     06NOV00.215
> C    *    XX,YY,IEND,JEND,XA,YA                                                  06NOV00.216
587a615
>       IF(IPRINT.EQ.1) THEN                                                       06NOV00.217
591a620
>       ENDIF                                                                      06NOV00.218
611c640
<         PRINT *,  XWEST(NN),XEAST(NN),XSOUTH(NN),XNORTH(NN)                      PLTTER.579
---
>         IF(IPRINT.EQ.1)PRINT *,XWEST(NN),XEAST(NN),XSOUTH(NN),XNORTH(NN)         06NOV00.219
623c652,653
<         PRINT *,'SOUTH,WEST,NORTH,EAST= ',SOUTH,WEST,NORTH,EAST                  PLTTER.591
---
>         IF(IPRINT.EQ.1)                                                          06NOV00.220
>      -     PRINT *,'SOUTH,WEST,NORTH,EAST= ',SOUTH,WEST,NORTH,EAST               06NOV00.221
671,672c701,702
<       PRINT *,'MINMUM GROUND TEMPERATURE(',IMIN,JMIN,') =',TMPMIN                PLTTER.639
<       PRINT *,'MINMAX GROUND TEMPERATURE(',IMAX,JMAX,') =',TMPMAX                PLTTER.640
---
>       IF(IPRINT.EQ.1)PRINT *,'MIN GROUND TEMP (',IMIN,JMIN,') =',TMPMIN          06NOV00.222
>       IF(IPRINT.EQ.1)PRINT *,'MAX GROUND TEMP (',IMAX,JMAX,') =',TMPMAX          06NOV00.223
675c705
<       PRINT *,'TMPDIFF =',TMPDIFF                                                PLTTER.643
---
>       IF(IPRINT.EQ.1)PRINT *,'TMPDIFF =',TMPDIFF                                 06NOV00.224
703,704c733
< C Red color for title:
<          CALL GSTXCI (16)                                                        PLTTER.567
---
>          CALL GSTXCI (16)                                                        06NOV00.225
706,709c735,737
<                                                                                  PLTTER.670
<          TITLE(1:28)='DEEP SOIL TEMP (ANNUAL MEAN)'                              PLTTER.671
<          CALL SET (0.0,1.0,0.0,1.0,0.0,100.,0.0,100.,1)                          PLTTER.672
<          CALL PWRITX(50.,95.,TITLE(1:28),28,20,0,0)                              PLTTER.673
---
>                                                                                  06NOV00.226
>          CALL SET (0.0,1.0,0.0,1.0,0.0,100.,0.0,100.,1)                          06NOV00.227
>          CALL PLCHHQ(50.,95.,'DEEP SOIL TEMP (ANNUAL MEAN)',.02,0.,0.)           06NOV00.228
778c806,807
<       PRINT *,'VEGETATION CATEGORY:'                                             PLTTER.742
---
>       IF(IPRINT.EQ.1) THEN                                                       06NOV00.229
>       PRINT *,'VEGETATION CATEGORY:'                                             06NOV00.230
781a811
>       END IF                                                                     06NOV00.231
785c815
<      -                           GRDOUT, 20.,N,N1,'VEGECAT ',IFILL)              PLTTER.749
---
>      -                      GRDOUT, 20.,N,N1,'VEGECAT ',IFILL,IPRINT)            06NOV00.232
805a836
>       IF (IPRINT.EQ.1) THEN                                                      06NOV00.233
809a841
>       END IF                                                                     06NOV00.234
813c845
<      -                           GRDOUT, 20.,N,N1,'SOILCAT ',IFILL)              PLTTER.777
---
>      -                      GRDOUT, 20.,N,N1,'SOILCAT ',IFILL,IPRINT)            06NOV00.235
833,835c865,867
< C Red color for title:
<          CALL GSTXCI (16)                                                        PLTTER.567
<          CALL GSPLCI (16) 
---
> C  TITLE                                                                         06NOV00.236
>       CALL GSTXCI (16)                                                           06NOV00.237
>       CALL GSPLCI (16)                                                           06NOV00.238
837,839c869,870
<       TITLE(1:18)='DOMINANT SOIL TYPE'                                           PLTTER.797
<       CALL SET (0.0,1.0,0.0,1.0,0.0,100.,0.0,100.,1)                             PLTTER.798
<       CALL PWRITX(50.,95.,TITLE(1:18),18,20,0,0)                                 PLTTER.799
---
>       CALL SET (0.0,1.0,0.0,1.0,0.0,100.,0.0,100.,1)                             06NOV00.239
>       CALL PLCHHQ(50.,95.,'DOMINANT SOIL TYPE',.02,0.,0.)                        06NOV00.240
913c944
<      -                           GRDOUT,10.0,N,N1,'VEGEFRC ',IFILL)              PLTTER.873
---
>      -                      GRDOUT,10.0,N,N1,'VEGEFRC ',IFILL,IPRINT)            06NOV00.241
933,935c964,966
< C Red color for title:
<          CALL GSTXCI (16)                                                        PLTTER.567
<          CALL GSPLCI (16) 
---
> C  TITLE                                                                         06NOV00.242
>       CALL GSTXCI (16)                                                           06NOV00.243
>       CALL GSPLCI (16)                                                           06NOV00.244
937,939c968,969
<       TITLE(1:15)='LAND-WATER MASK'                                              PLTTER.797
<       CALL SET (0.0,1.0,0.0,1.0,0.0,100.,0.0,100.,1)                             PLTTER.798
<       CALL PWRITX(50.,95.,TITLE(1:15),15,20,0,0)                                 PLTTER.799
---
>       CALL SET (0.0,1.0,0.0,1.0,0.0,100.,0.0,100.,1)                             06NOV00.245
>       CALL PLCHHQ(50.,95.,'LAND-WATER MASK',.02,0.,0.)                           06NOV00.246
===================================================================
src/rdldtr.F
diff -r3.0 -r3.5
5c5
<      4             LANDIN_CHR,INTER1_CHR)                                        RDLDTR.5
---
>      4             LANDIN_CHR,INTER1_CHR,IP)                                     06NOV00.247
99,113d98
< C   1 DEGREE GLOBAL                                                              RDLDTR.99
< C           ID1=13, ID2=360, NREC=ID2/2, XLATI=90., XLONI= -180.                 RDLDTR.100
< C                                                                                RDLDTR.101
< C  30 MINUTES GLOBAL                                                             RDLDTR.102
< C           ID1=13, ID2=720, NREC=ID2/2, XLATI=90., XLONI=-180.                  RDLDTR.103
< C                                                                                RDLDTR.104
< C  10 MINUTES GLOBAL                                                             RDLDTR.105
< C           ID1=13, ID2=2160, NREC=ID2/2, XLATI=90., XLONI=-180.                 RDLDTR.106
< C                                                                                RDLDTR.107
< C   5 MINUTES GLOBAL                                                             RDLDTR.108
< C           ID1=1, ID2=4320, NREC=2161, XLATI=90., XLONI=-180.                   RDLDTR.109
< C                                                                                RDLDTR.110
< C  30 SECOND US 48 STATE                                                         RDLDTR.111
< C           ID1=1, ID2=8401, NREC=3361, XLATI=51., XLONI=-130.                   RDLDTR.112
< C                                                                                RDLDTR.113
130,134c115
<       CHARACTER DISKLND(5)*8, DISKTER(5)*7                                       RDLDTR.130
<       DATA DISKLND /'LANDU.60', 'LANDU.30', 'LANDU.10',                          RDLDTR.131
<      1              'LANDU.10', 'LANDU.10'/,                                     RDLDTR.132
<      2     DISKTER /'TER.60 ', 'TER.30 ', 'TER.10 ',                             RDLDTR.133
<      3              'TER.05 ', 'TER.30S'/                                        RDLDTR.134
---
>       CHARACTER ACS*10, NAMEC*24                                                 06NOV00.248
141c122
<       IF (NI.GT.0 .AND. LND.EQ.0) CSHIFT = 0.0                                   RDLDTR.141
---
>       IF (NI.GT.4 .AND. LND.EQ.0) CSHIFT = 0.0                                   06NOV00.249
146c127
<       PRINT 15,ID1,ID2,XLATI,XLONI,CENTER                                        RDLDTR.146
---
>       IF (IP.EQ.1) PRINT 15,ID1,ID2,XLATI,XLONI,CENTER                           06NOV00.250
162c143
<       PRINT 16 , N_START, N_END                                                  RDLDTR.162
---
>       IF (IP.EQ.1) PRINT 16 , N_START, N_END                                     06NOV00.251
164c145,149
< C                                                                                RDLDTR.164
---
> C                                                                                06NOV00.252
>       INQUIRE(UNIT=NUNIT,ACCESS= ACS,NAME=NAMEC,RECL=LENRC)                      06NOV00.253
>  18   FORMAT('<DATA FILE> fort.',I2.2,2X,A24,' ACCESS=',A10,' RECL=',I8)         06NOV00.254
>       IF (IP.EQ.1) PRINT 18, NUNIT,NAMEC,ACS,LENRC                               06NOV00.255
> C                                                                                06NOV00.256
191a177
>                                                                                  06NOV00.257
268c254,255
<       PRINT 401,LND,NUNIT,TER,IUNIT, CENTER, CSHIFT, NI,NIOLD,LREC               RDLDTR.268
---
>       IF(IP.EQ.1)                                                                06NOV00.258
>      >   PRINT 401,LND,NUNIT,TER,IUNIT, CENTER, CSHIFT, NI,NIOLD,LREC            06NOV00.259
===================================================================
src/replace.F
diff -r3.1 -r3.6
36a37,38
> # include <paramed.incl>                                                         06NOV00.260
> # include <io.incl>                                                              06NOV00.261
53c55,59
<       NESTID = IINC - 29                                                         REPLACE.53
---
>       NESTID = IINC - IVOL_mdl                                                   06NOV00.262
>       PRINT *,'==> CALL REPLACE'                                                 06NOV00.263
>       PRINT 910, NESTID,IINF-IVOL_mdl                                            06NOV00.264
> 910   FORMAT(1X,'REPLACE THE OVERLAPPING GRID VALUES IN MOTHER DOMAIN ',         06NOV00.265
>      -       I2,' WITH NEST DOMAIN ',I2,' VALUES')                               06NOV00.266
55d60
<       PRINT *,'==> CALL REPLACE, ID=',NESTID,'  NVW=',NVW,' <=='                 REPLACE.55
99c104
<       NF     = IINF - 29                                                         REPLACE.99
---
>       NF     = IINF - IVOL_mdl                                                   06NOV00.267
174c179
< C  OVER THE OCEAN, SET LANDUSE = 7:                                              REPLACE.172
---
> C  OVER THE OCEAN, SET LANDUSE = WATER CATEGORY NO (7 or NWV):                   06NOV00.268
===================================================================
src/search.F
diff -r3.0 -r3.4
3a4,5
> # include <paramed.incl>                                                         06NOV00.269
> # include <io.incl>                                                              06NOV00.270
20c22
<         DO 10 I = 1,5                                                            SEARCH.20
---
>         DO 10 I = 1,max_type                                                     06NOV00.271
27c29
<       IF (NI.EQ.5) THEN                                                          SEARCH.27
---
>       IF (NI.EQ.max_type) THEN                                                   06NOV00.272
49,55d50
< C                                                                                SEARCH.49
<                                                                                  SEARCH.50
<                                                                                  SEARCH.51
<                                                                                  SEARCH.52
<                                                                                  SEARCH.53
<                                                                                  SEARCH.54
<                                                                                  SEARCH.55
===================================================================
src/setup.F
diff -r3.2 -r3.10
12a13,17
> C                                                                                06NOV00.273
> C  Two new namelist variables:                                                   06NOV00.274
> C                                                                                06NOV00.275
>       LOGICAL LSMDATA                                                            06NOV00.276
>       INTEGER VEGTYPE                                                            06NOV00.277
15a21,22
> # include <paramed.incl>                                                         06NOV00.278
> # include <io.incl>                                                              06NOV00.279
36,42c43,49
<       DATA    ID1/    13,    13,    13,     1,     1/,                           SETUP.36
<      1        ID2/   360,   720,  2160,  4320, 43200/,                           SETUP.37
<      2       NREC/   180,   360,  1080,  2161, 21600/,                           SETUP.38
<      3        LND/     1,     1,     1,     0,     0/,                           SETUP.39
<      4        ITR/     1,     1,     1,     1,     1/                            SETUP.40
<      5      XLATI/   90.,   90.,   90.,   90.,   90./,                           SETUP.41
<      6      XLONI/ -180., -180., -180., -180., -180./,                           SETUP.42
---
>       DATA    ID1/    13,    13,    13,     1,     1,     1/,                    06NOV00.280
>      1        ID2/   360,   720,  2160,  4320, 10800, 43200/,                    06NOV00.281
>      2       NREC/   180,   360,  1080,  2160,  5400, 21600/,                    06NOV00.282
>      3        LND/     1,     1,     1,     0,     0,     0/,                    06NOV00.283
>      4        ITR/     1,     1,     1,     1,     1,     1/,                    06NOV00.284
>      5      XLATI/   90.,   90.,   90.,   90.,   90.,   90./,                    06NOV00.285
>      6      XLONI/ -180., -180., -180., -180., -180., -180./,                    06NOV00.286
49,50c56
< C    IVOL = (THE VOLUME NUMBER OF ONE DEG. TERRAIN DATA FILE - 1)                SETUP.48
<       DATA DISOBS/ 111. ,  55. ,  18.5,  9.25, 0.925/, IVOL/20/                  SETUP.49
---
>       DATA DISOBS/ 111. ,  55. ,  18.5,  9.25, 3.70, 0.925/                      06NOV00.287
55,56c61,62
< C                                                                                SETUP.54
<         PRINT *,' ==> CALL SETUP <=='                                            SETUP.55
---
>       PRINT *,'THIS IS TERRAIN VERSION 3.4'                                      06NOV00.288
>       PRINT *,'==> CALL SETUP <=='                                               06NOV00.289
63c69,70
<       CENTER(5) =   1./120.                                                      SETUP.62
---
>       CENTER(5) =   1./30.                                                       06NOV00.290
>       CENTER(6) =   1./120.                                                      06NOV00.291
73a81,98
> C  The starting unit numbers for land-water mask, vegetation, soil,              06NOV00.292
> C      vegetation fraction, and annual deep soil temperature:                    06NOV00.293
> C                                                                                06NOV00.294
>         IVOL_lw = IVOL    + (max_type-1)*2+1                                     06NOV00.295
>         IVOL_vg = IVOL_lw + max_type                                             06NOV00.296
>         IVOL_so = IVOL_vg + max_type                                             06NOV00.297
>         IVOL_vf = IVOL_so + max_type + 1                                         06NOV00.298
>         IVOL_ts = IVOL_vf + 1                                                    06NOV00.299
>         DO I = 1,max_type                                                        06NOV00.300
>           TERNAME(I) = '                    '                                    06NOV00.301
>           LNDNAME(I) = '                    '                                    06NOV00.302
>           LWNAME(I)  = '                    '                                    06NOV00.303
>           VGNAME(I)  = '                    '                                    06NOV00.304
>           SONAME(I)  = '                    '                                    06NOV00.305
>         END DO                                                                   06NOV00.306
>         VFNAME = '                    '                                          06NOV00.307
>         TSNAME = '                    '                                          06NOV00.308
> C                                                                                06NOV00.309
110a136,137
>       LSMDATA = .FALSE.                                                          06NOV00.310
>       VEGTYPE = 0                                                                06NOV00.311
122d148
<       WRITE(9,MAPBG)                                                             SETUP.120
124d149
<       WRITE(9,DOMAINS)                                                           SETUP.122
126d150
<       WRITE(9,OPTN)                                                              SETUP.124
128d151
<       WRITE(9,FUDGE)                                                             SETUP.126
130d152
<       WRITE(9,FUDGET)                                                            SETUP.128
132d153
<       WRITE(9,EZFUDGE)                                                           SETUP.130
134c155,215
<       WRITE(9,DATANAME)                                                          SETUP.132
---
> C                                                                                06NOV00.312
> C PRINT BASIC NAMELIST NUMBERS                                                   06NOV00.313
> C                                                                                06NOV00.314
>       PRINT 990                                                                  06NOV00.315
> 990   FORMAT(/1X,'INPUT NAMELIST VALUES:')                                       06NOV00.316
>       PRINT 900, PHIC,XLONC                                                      06NOV00.317
> 900   FORMAT(3X,'CENTRAL LAT/LONG = ', 2F8.2)                                    06NOV00.318
>       PRINT 910, IEXP, AEXP                                                      06NOV00.319
> 910   FORMAT(3X,'IEXP, AEXP       = ',L6,2X,F8.1)                                06NOV00.320
>       PRINT 920, IPROJ                                                           06NOV00.321
> 920   FORMAT(3X,'PROJECTION       = ',A8)                                        06NOV00.322
>       PRINT 930, MAXNES                                                          06NOV00.323
> 930   FORMAT(3X,'MAXNES           = ',I2)                                        06NOV00.324
>       PRINT 940                                                                  06NOV00.325
> 940   FORMAT(3X,'DOMAIN NESTIX NEXTJX      DIS NUMNC  NESTI  NESTJ ',            06NOV00.326
>      -          'NTYPE NSTTYP')                                                  06NOV00.327
>       DO NN = 1,MAXNES                                                           06NOV00.328
>          PRINT 950, NN,NESTIX(NN),NESTJX(NN),DIS(NN),NUMNC(NN),                  06NOV00.329
>      -              NESTI(NN),NESTJ(NN),NTYPE(NN),NSTTYP(NN)                     06NOV00.330
>          IF (NTYPE(NN).EQ.6) G30SD = .TRUE.                                      06NOV00.331
>       END DO                                                                     06NOV00.332
>       IF (VEGESOIL .OR. VEGONLY) THEN                                            06NOV00.333
>           PRINT 945                                                              06NOV00.334
>           STOP 945                                                               06NOV00.335
>       ENDIF                                                                      06NOV00.336
> 945   FORMAT(1X,'xxxxx PLEASE RE-GENERATE terrain.deck FOR TERRAIN ',            06NOV00.337
>      -       'VERSION 3.4 OR LATER. YOUR DECK IS OBSOLETE.')                     06NOV00.338
>       IF (VEGTYPE.GT.0 .AND. LSMDATA) THEN                                       06NOV00.339
> C ..... process vegetation and soil data for LSM                                 06NOV00.340
>          VEGESOIL = .TRUE.                                                       06NOV00.341
>           VEGONLY = .FALSE.                                                      06NOV00.342
>       ELSE IF (VEGTYPE.GT.0 .AND. .NOT.LSMDATA) THEN                             06NOV00.343
> C ..... process vegetation for landuse definition only                           06NOV00.344
>          VEGESOIL = .TRUE.                                                       06NOV00.345
>           VEGONLY = .TRUE.                                                       06NOV00.346
>       ELSE IF (VEGTYPE.EQ.0) THEN                                                06NOV00.347
> C ..... use old landuse data                                                     06NOV00.348
>          VEGESOIL = .FALSE.                                                      06NOV00.349
>           VEGONLY = .FALSE.                                                      06NOV00.350
>       END IF                                                                     06NOV00.351
>       IF (VEGTYPE.GT.0) THEN                                                     06NOV00.352
> C ..... if old landuse data are not selected, do not read it                     06NOV00.353
>          DO I = 1,MAX_TYPE                                                       06NOV00.354
>             LND(I) = 0                                                           06NOV00.355
>          END DO                                                                  06NOV00.356
>       END IF                                                                     06NOV00.357
> 950   FORMAT(3X,I6,2I7,1X,F8.3,1X,I5,2I7,1X,I5,1X,I6)                            06NOV00.358
>       PRINT 960, DATASW,IFEZFUG                                                  06NOV00.359
> 960   FORMAT(3X,'DATASW,IFEZFUG           = ',2L6)                               06NOV00.360
>       IF (LSMDATA) PRINT 972                                                     06NOV00.361
> 972   FORMAT(3X,'TERRAIN WILL PROCESS LAND-SURFACE MODEL DATA')                  06NOV00.362
>       IF (VEGTYPE.EQ.0) PRINT 973                                                06NOV00.363
> 973   FORMAT(3X,'TERRAIN WILL USE OLD 13-CATEGORY LANDUSE DATA')                 06NOV00.364
>       IF (VEGTYPE.EQ.1) PRINT 974                                                06NOV00.365
> 974   FORMAT(3X,'TERRAIN WILL USE 24-CATEGORY USGS LANDUSE DATA')                06NOV00.366
>       IF (VEGTYPE.EQ.2) PRINT 975                                                06NOV00.367
> 975   FORMAT(3X,'TERRAIN WILL USE 16-CATEGORY SiB LANDUSE DATA')                 06NOV00.368
>       PRINT 970, VEGESOIL,VEGONLY,IEXTRA                                         06NOV00.369
> 970   FORMAT(3X,'VEGESOIL,VEGONLY,IEXTRA  = ',3L6)                               06NOV00.370
>       PRINT 980, G30SD                                                           06NOV00.371
> 980   FORMAT(3X,'SELECT GLOBAL 30 SEC DATA? ',L6,/)                              06NOV00.372
146c227
<          DO I = 1,5                                                              SETUP.143
---
>          DO I = 1,max_type                                                       06NOV00.373
155c236
<           IF (I.EQ.5 .AND. G30SD) GO TO 6                                        SETUP.152
---
>           IF (I.EQ.max_type .AND. G30SD) GO TO 6                                 06NOV00.374
170c251,252
< C                                                                                SETUP.167
---
>                                                                                  06NOV00.375
> C                                                                                06NOV00.376
173c255
<         IF (LNDNAME(I).NE.'                    ') THEN                           SETUP.170
---
>         IF (LNDNAME(I).NE.'                    '.AND.VEGTYPE.EQ.0) THEN          06NOV00.377
187c269
<         IF (.NOT. IFEZFUG) THEN
---
>         IF (.NOT. IFEZFUG .OR. VEGESOIL) THEN                                    06NOV00.378
194c276
<           IUNIT = I + 39                                                         SETUP.190
---
>           IUNIT = I + IVOL_lw                                                    06NOV00.379
205c287
<           IF (I.LT.5) THEN                                                       SETUP.200
---
>           IF (I.LT.max_type) THEN                                                06NOV00.380
215c297
<           IUNIT = I + 44                                                         SETUP.210
---
>           IUNIT = I + IVOL_vg                                                    06NOV00.381
226c308
<           IF (I.LT.5) THEN                                                       SETUP.221
---
>           IF (I.LT.max_type) THEN                                                06NOV00.382
236c318
<           IUNIT = I + 49                                                         SETUP.231
---
>           IUNIT = I + IVOL_so                                                    06NOV00.383
249,251c331,334
<       INQUIRE (24,OPENED=OPENED)
<       IF (.NOT.OPENED) THEN
<           LENGTH = (ID1(3)*ID2(3))/4
---
>       IF (VEGTYPE.EQ.0) THEN                                                     06NOV00.384
>       INQUIRE (IVOL+4,OPENED=OPENED)                                             06NOV00.385
>       IF (.NOT.OPENED) THEN                                                      06NOV00.386
>           LENGTH = (ID1(3)*ID2(3))/4                                             06NOV00.387
256c339
<           OPEN(24,FILE=LNDNAME(3),ACCESS='DIRECT',RECL=LENGTH,
---
>           OPEN(IVOL+4,FILE=LNDNAME(3),ACCESS='DIRECT',RECL=LENGTH,               06NOV00.388
261a345
>       ENDIF                                                                      06NOV00.389
271,272c355
<         IUNIT = 55                                                               SETUP.250
<         OPEN(IUNIT,FILE=VFNAME,ACCESS='DIRECT',RECL=LENGTH,                      SETUP.251
---
>         OPEN(IVOL_vf,FILE=VFNAME,ACCESS='DIRECT',RECL=LENGTH,                    06NOV00.390
274c357
<         PRINT 5, I, IUNIT, VFNAME, LENGTH                                        SETUP.253
---
>         PRINT 5, I, IVOL_vf, VFNAME, LENGTH                                      06NOV00.391
284,285c367
<         IUNIT = 60                                                               SETUP.263
<         OPEN(IUNIT,FILE=TSNAME,ACCESS='DIRECT',RECL=LENGTH,                      SETUP.264
---
>         OPEN(IVOL_ts,FILE=TSNAME,ACCESS='DIRECT',RECL=LENGTH,                    06NOV00.392
287c369
<         PRINT 5, I, IUNIT, TSNAME, LENGTH                                        SETUP.266
---
>         PRINT 5, I, IVOL_ts, TSNAME, LENGTH                                      06NOV00.393
297c379
<         MUNIT = 29+MD                                                            SETUP.276
---
>         MUNIT = IVOL_mdl+MD                                                      06NOV00.394
388c470
< C     AND CALCULATE THE IRATIOS, INORTHS, ISOUTHS, IWESTS AND IEASTS             SETUP.366
---
> C     AND CALCULATE THE IRATIOS, XNORTHS, XSOUTHS, XWESTS AND XEASTS             06NOV00.395
411,413c493,495
< 20    FORMAT(2X,'$$$$ GRID IS EXPANDED BY ',I3,                                  SETUP.389
<      1                         ' GRID POINTS ON EACH EDGE $$$$')                 SETUP.390
< 22    FORMAT(5X,'EXTENDED IXEX IS ',I3,5X,'EXTENDED JXEX IS ',I3)                SETUP.391
---
> 20    FORMAT(/1X,'$$$$ GRID IS EXPANDED BY ',I4,                                 06NOV00.396
>      1                         ' GRID POINTS ON EACH SIDE $$$$')                 06NOV00.397
> 22    FORMAT(6X,'EXPANDED GRID SIZE IS (',I5,',',I5,')')                         06NOV00.398
418c500
<         PRINT 21,NESTIX(1),NESTJX(1)                                             SETUP.396
---
> C     PRINT 21,NESTIX(1),NESTJX(1)                                               06NOV00.399
429c511
< 24    FORMAT('   ++> THE MAXIMUM DIMENSION = (',2I5,') <++')                     SETUP.407
---
> 24    FORMAT(1X,'THE MAXIMUM DIMENSION IS   (',I5,',',I5,')')                    06NOV00.400
434c516
< 25      FORMAT(//'THE DIMENSIONS DECLARED IN PARAME.INCL:',                      SETUP.412
---
> 25      FORMAT(/1X,'THE DIMENSIONS DECLARED IN PARAME.INCL:',                    06NOV00.401
451c533
< C     B) CALCULATING THE IRATIOS, INORTHS AND IEASTS:                            SETUP.429
---
> C     B) CALCULATING THE IRATIOS, XNORTHS AND XEASTS:                            06NOV00.402
468c550,551
<       MISMATCH = 0                                                               SETUP.446
---
>       MISMATCH1 = 0                                                              06NOV00.403
>       MISMATCH  = 0                                                              06NOV00.404
474c557,565
<       NMC = NUMNC(NM)                                                            SETUP.452
---
>       NMC = NUMNC(NM)                                                            06NOV00.405
>                                                                                  06NOV00.406
>       IF (MISMATCH.GT.0) THEN                                                    06NOV00.407
>         MISMATCH1 = MISMATCH1 + MISMATCH                                         06NOV00.408
>         PRINT 39, MISMATCH1,NM-1,NM-2,MISMATCH                                   06NOV00.409
>  39     FORMAT(/1X,'?? DOMAIN MISMATCH: MISMATCH1(ALL)=',I2,                     06NOV00.410
>      1         ',',2X,'MISMATCH(DOMAINS',I3,' AND ',I3,')=',I2//)                06NOV00.411
>       MISMATCH = 0                                                               06NOV00.412
>       ENDIF                                                                      06NOV00.413
504c595,596
<       PRINT *,'NM=',NM,'  DIS=',DIS(NM)                                          SETUP.482
---
>       IF(IPRINT.EQ.1) PRINT 38, NM, DIS(NM)                                      06NOV00.414
>  38   FORMAT(/1X,'NM=',I3,'  DIS=',F8.2)                                         06NOV00.415
527c619
<       PRINT *, 'NSTTYP, DOMAIN ID = ', NSTTYP(NM),NM                             SETUP.505
---
>       IF(IPRINT.EQ.1)PRINT *, 'NSTTYP, DOMAIN ID = ', NSTTYP(NM),NM              06NOV00.416
539c631
< C        OF EXTENDED COARSE MESH - DOMAIN 1 INDICES) IF USING EXTENDED G         SETUP.517
---
> C        OF EXPANDED COARSE MESH - DOMAIN 1 INDICES) IF USING EXPANDED GRID      06NOV00.417
541,542c633,634
<        PRINT 34,NM,NESTIX(NM),NESTJX(NM),DIS(NM),NESTI(NM),NESTJ(NM)             SETUP.519
<      1, NUMNC(NM),IRATIO(NM),NRATIO(NM),IEXP                                     SETUP.520
---
>        IF(IPRINT.EQ.1)PRINT 34,NM,NESTIX(NM),NESTJX(NM),DIS(NM),                 06NOV00.418
>      1    NESTI(NM),NESTJ(NM),NUMNC(NM),IRATIO(NM),NRATIO(NM),IEXP               06NOV00.419
565a658
>        IF(IPRINT.EQ.1) THEN                                                      06NOV00.420
567a661
>        ENDIF                                                                     06NOV00.421
571a666,686
> C--------CHECK IF NEST IS TOO CLOSE TO MOTHER DOMAIN BOUNDARY                    06NOV00.422
> C                                                                                06NOV00.423
>        INORTH = NESTI(NM)+(NESTIX(NM)-1)/IRATIO(NM)                              06NOV00.424
>        JEAST  = NESTJ(NM)+(NESTJX(NM)-1)/IRATIO(NM)                              06NOV00.425
>        IF (NESTI(NM).LT.6 .OR. INORTH.GE.NESTIX(NMC)-5 .OR.                      06NOV00.426
>      1     NESTJ(NM).LT.6 .OR.  JEAST.GE.NESTJX(NMC)-5) THEN                     06NOV00.427
>          MISMATCH = MISMATCH + 1                                                 06NOV00.428
>          PRINT 901, NM, NMC                                                      06NOV00.429
> 901      FORMAT(1X,'THE NEST ',I2,' IS TOO CLOSE TO THE BOUNDARY OF ',           06NOV00.430
>      1         'THE MOTHER DOMAIN ',I2)                                          06NOV00.431
>          PRINT *,'YOU NEED AT LEAST 5 GRID POINTS AWAY FROM THE ',               06NOV00.432
>      1           'COARSE DOMAIN ON ALL SIDES'                                    06NOV00.433
>          PRINT 902                                                               06NOV00.434
>          PRINT 903, NESTI(NM),(NESTIX(NMC)-NESTI(NM)-6)*IRATIO(NM)+1             06NOV00.435
> 902      FORMAT(1X,'THE NEST MUST START AT LEAST AT NESTI, NESTJ = 6')           06NOV00.436
> 903      FORMAT(1X,'IF YOUR NEST STARTS AT NESTI = ',I3,' YOUR ',                06NOV00.437
>      1         'DIMENSION FOR THE NEST CANNOT EXCEED NESTIX = ',I4)              06NOV00.438
>          PRINT 904, NESTJ(NM),(NESTJX(NMC)-NESTJ(NM)-6)*IRATIO(NM)+1             06NOV00.439
> 904      FORMAT(1X,'IF YOUR NEST STARTS AT NESTJ = ',I3,' YOUR ',                06NOV00.440
>      1         'DIMENSION FOR THE NEST CANNOT EXCEED NESTJX = ',I4)              06NOV00.441
>        ENDIF                                                                     06NOV00.442
574,576c689,692
<        IF (MISMATCH.GT.0) THEN                                                   SETUP.552
<        PRINT *, 'TERRAIN STOP IN SUBROUTINE SETUP DUE TO INCORRECT NEST          SETUP.553
<      1 DOMAIN SET UP'                                                            SETUP.554
---
>        IF (MISMATCH1.GT.0) THEN                                                  06NOV00.443
>        PRINT 49, MISMATCH1                                                       06NOV00.444
>  49    FORMAT(//1X,'??? TERRAIN STOP IN SUBROUTINE SETUP DUE TO',                06NOV00.445
>      1          ' INCORRECT NEST DOMAIN SET UP, MISMATCH1=',I3)                  06NOV00.446
===================================================================
src/smthtr.F
diff -r3.0 -r3.2
1c1
<       SUBROUTINE SMTHTR(SLAB1,IS1,IS2)                                           SMTHTR.1
---
>       SUBROUTINE SMTHTR(SLAB1,IS1,IS2,IP)                                        06NOV00.447
28c28
<       PRINT 15,N                                                                 SMTHTR.28
---
>       IF (IP.EQ.1) PRINT 15,N                                                    06NOV00.448
===================================================================
src/soil_tg.F
diff -r3.0 -r3.2
1c1
<       SUBROUTINE SOIL_TG(IX,JX,XLAT,TEMPG,FORCETER,TSPVAL)                       SOIL_TG.1
---
>       SUBROUTINE SOIL_TG(IX,JX,XLAT,TEMPG,FORCETER,TSPVAL,IP)                    06NOV00.449
12,13c12,13
<       PRINT 10                                                                   SOIL_TG.12
< 10    FORMAT(/3X,'&& CALL SOIL_TG: LATITUDE-DEPENDED SOIL TEMPERATURE')          SOIL_TG.13
---
>       IF(IP.EQ.1) PRINT 10                                                       06NOV00.450
> 10    FORMAT(/2X,'&& CALL SOIL_TG: LATITUDE-DEPENDED SOIL TEMPERATURE')          06NOV00.451
===================================================================
src/terdrv.F
diff -r3.5 -r3.11
27a28
> # include <io.incl>                                                              06NOV00.452
36d36
< C                                                                                TERDRV.35
77c77
<         DO 10 I = 1,5                                                            TERDRV.76
---
>         DO 10 I = 1,max_type                                                     06NOV00.453
96c96
<       PRINT 13,XEXTND,XMAXLAT,XMINLAT,XMAXLON,XMINLON                            TERDRV.95
---
>       IF(IPRINT.EQ.1) PRINT 13,XEXTND,XMAXLAT,XMINLAT,XMAXLON,XMINLON            06NOV00.454
101c101,126
<       PRINT 12,NVOL0,NVOL1,CENTER(NI),N,DSS                                      TERDRV.100
---
>       PRINT 12, CENTER(NI),N                                                     06NOV00.455
> C                                                                                06NOV00.456
> C  CALCULATE THE DIMESION NEEDED (IBLOCK) FOR READING IN THE TERRAIN DAT         06NOV00.457
> C                                                                                06NOV00.458
>         INCR = 1./CENTER(NI)+0.001                                               06NOV00.459
>         IHMAX = (XMAXLAT-XMINLAT)*INCR + 2                                       06NOV00.460
>         JHMAX = (XMAXLON-XMINLON)*INCR + 2                                       06NOV00.461
>         IBLOCK = IHMAX*JHMAX                                                     06NOV00.462
>         LEND1D = IBLOCK                                                          06NOV00.463
>         LEND2D = 13*IBLOCK                                                       06NOV00.464
>         LENTOT=3*LEND1D + LEND2D                                                 06NOV00.465
>         IF (IBLOCK.GT.NOBT) THEN                                                 06NOV00.466
>           PRINT 926,IHMAX,JHMAX,ITRH,JTRH                                        06NOV00.467
> 926       FORMAT(/1X,'THE DIMENSIONS OF DATA IN I AND J ARE ',2I10,              06NOV00.468
>      1           /1X,'THE DECLARED DIMENSIONS ITRH,JTRH IN DECK ARE ',           06NOV00.469
>      2           2I10,/1X,'INCREASE THESE DIMENSIONS AND RERUN')                 06NOV00.470
>           STOP 'DATA DIMENSIONS TOO SMALL'                                       06NOV00.471
>         ENDIF                                                                    06NOV00.472
>                                                                                  06NOV00.473
>         IF(IPRINT.EQ.1) THEN                                                     06NOV00.474
>         PRINT 26, N,NI,IHMAX,JHMAX,IBLOCK,LENTOT                                 06NOV00.475
> 26      FORMAT(1X,'DOMAIN ',I2,' USES NO. ',I3,' TERRAIN FILE, THE ',            06NOV00.476
>      1  'DIMENSIONS FOR READING IN THE TERRAIN DATA ARE: I='                     06NOV00.477
>      2  ,I8,', J=',I8/5X,'THE NUMBER OF DATA POINTS: IBLOCK=',I10,2X,            06NOV00.478
>      3  'TOTAL SIZE OF HOLDING ARRAYS =',I10)                                    06NOV00.479
>         ENDIF                                                                    06NOV00.480
105,106c130,131
<           PRINT *, ' ++ USING LAND-WATER MASK DATA TO SET COASTLINE'             TERDRV.104
<           NU_LWM   = NI + 39                                                     TERDRV.105
---
> C         PRINT *, '  === CREATE LAND-WATER MASK DATA TO SET COASTLINE'          06NOV00.481
>           NU_LWM   = NI + IVOL_lw                                                06NOV00.482
113,126d137
< C        IF (NI.LE.4) THEN                                                       TERDRV.112
< C          NU_LWM = 26                                                           TERDRV.113
< C          NLON   = 1440                                                         TERDRV.114
< C          NLAT   = 1080                                                         TERDRV.115
< C          RESOL = 5./60.                                                        TERDRV.116
< C        ELSE IF (NI.EQ.5) THEN                                                  TERDRV.117
< C          NU_LWM  = 28                                                          TERDRV.118
< C          NLON    = 14400                                                       TERDRV.119
< C          NLAT    = 10800                                                       TERDRV.120
< C          RESOL   = .5/60.                                                      TERDRV.121
< C        ENDIF                                                                   TERDRV.122
< C        XLAT_MSK =   90.                                                        TERDRV.123
< C        XLON_MSK = -180.                                                        TERDRV.124
< C                                                                                TERDRV.125
130c141,142
<      -                  GRDLNMN, GRDLTMN, FORCETER, VEGEC,'LND-WATR')            TERDRV.129
---
>      -                  GRDLNMN, GRDLTMN, FORCETER, VEGEC,'LND-WATR',            06NOV00.483
>      -                   IPRINT)                                                 06NOV00.484
133c145,146
<       IF (NI.EQ.5 .AND. G30SD) THEN                                              TERDRV.132
---
>       IF (NI.EQ.max_type .AND. G30SD) THEN                                       06NOV00.485
>         IF(IPRINT.EQ.1) PRINT *, 'ACCESSING 30 SEC DATA'                         06NOV00.486
138c151,158
<         PRINT 996, XLAT00,XLAT11,XLON00,XLON11,NLATS,NPOINTS                     TERDRV.137
---
> C                                                                                06NOV00.487
>         IF (XMINLON.GT. 0.0 .AND. XLON00.LT.-180.) THEN                          06NOV00.488
>           XLON00 = XLON00 + 360.                                                 06NOV00.489
>           XLON11 = XLON11 + 360.                                                 06NOV00.490
>         ENDIF                                                                    06NOV00.491
> C                                                                                06NOV00.492
>         IF(IPRINT.EQ.1)                                                          06NOV00.493
>      -     PRINT 996, XLAT00,XLAT11,XLON00,XLON11,NLATS,NPOINTS                  06NOV00.494
154c174
<         PRINT 997,NVOL1,LENGTH,ID2(NI)                                           TERDRV.153
---
>         IF(IPRINT.EQ.1)PRINT 997,NVOL1,LENGTH,ID2(NI)                            06NOV00.495
163,187d182
< C                                                                                TERDRV.162
< C  CALCULATE THE DIMESION NEEDED (IBLOCK) FOR READING IN THE TERRAIN DAT         TERDRV.163
< C                                                                                TERDRV.164
<         INCR = 1./CENTER(NI)+0.001                                               TERDRV.165
<         IHMAX = (XMAXLAT-XMINLAT)*INCR + 2                                       TERDRV.166
<         JHMAX = (XMAXLON-XMINLON)*INCR + 2                                       TERDRV.167
<         IBLOCK = IHMAX*JHMAX                                                     TERDRV.168
<         LEND1D = IBLOCK                                                          TERDRV.169
<         LEND2D = 13*IBLOCK                                                       TERDRV.170
<         LENTOT=3*LEND1D + LEND2D                                                 TERDRV.171
<         IF (IBLOCK.GT.NOBT) THEN                                                 TERDRV.172
<           PRINT 926,IHMAX,JHMAX,ITRH,JTRH,IBLOCK,NOBT                            TERDRV.173
< 926       FORMAT(//'THE DIM. OF IHMAX,JHMAX =',2I10,                             TERDRV.174
<      1     '  AND THE DECLARED DIM. IN  PARAMED.INCL IS ITRH,JTRH:',             TERDRV.175
<      2           2I10/5X,'IBLOCK(=IHMAX*JHMAX) ',I10,' > NOBT=',I10)             TERDRV.176
<           STOP 926                                                               TERDRV.177
<         ENDIF                                                                    TERDRV.178
<                                                                                  TERDRV.179
< C        IF(IPRINT.EQ.1) THEN                                                    TERDRV.180
<         PRINT 26, N,NI,IHMAX,JHMAX,IBLOCK,LENTOT                                 TERDRV.181
< 26      FORMAT(1X,'DOMAIN ',I2,' USES NO. ',I3,' TERRAIN FILE, THE ',            TERDRV.182
<      1  'DIMENSIONS FOR READING IN THE TERRAIN DATA ARE: I='                     TERDRV.183
<      2  ,I8,', J=',I8/5X,'THE NUMBER OF DATA POINTS: IBLOCK=',I10,2X,            TERDRV.184
<      3  'TOTAL SIZE OF HOLDING ARRAYS =',I10)                                    TERDRV.185
< C        ENDIF                                                                   TERDRV.186
189,191c184,185
< 12    FORMAT(2X,'++ USING VOLUME:',2I4,' DATASET(',F10.5,                        TERDRV.208
<      1       ' DEG.) TO CREATE THE DOMAIN:',I2,' WITH GRID SIZE=',               TERDRV.209
<      2       F8.2,' KM')                                                         TERDRV.210
---
> 12    FORMAT(3X,'+++ USING DATASETS AT',F10.5,' DEG RES. ',                      06NOV00.496
>      1       ' FOR DOMAIN ',I2)                                                  06NOV00.497
200,201c194,195
<      5                          IWORK3_CHR,IWORK4_CHR)                           TERDRV.219
<       IF (G30SD.AND.NI.EQ.5) CLOSE (NVOL1)                                       TERDRV.220
---
>      5                          IWORK3_CHR,IWORK4_CHR,IPRINT)                    06NOV00.498
>       IF (G30SD.AND.NI.EQ.max_type) CLOSE (NVOL1)                                06NOV00.499
223c217
<         PRINT *,'USING 10 MIN. LANDUSE DATA FILE FOR NTYPE = ',NI                TERDRV.243
---
>         PRINT *,' *** USING 10 MIN. LANDUSE DATA FILE FOR NTYPE = ',NI           06NOV00.500
259c253
<      5                          IWORK3_CHR,IWORK4_CHR)                           TERDRV.280
---
>      5                          IWORK3_CHR,IWORK4_CHR,IPRINT)                    06NOV00.501
273c267
<       IF (NI.LE.4) THEN                                                          TERDRV.293
---
>       IF (NI.LE.(max_type-1)) THEN                                               06NOV00.502
278c272
<       ELSE IF (NI.EQ.5) THEN                                                     TERDRV.298
---
>       ELSE IF (NI.EQ.max_type) THEN                                              06NOV00.503
290c284
<       NU_VG  = NI + 44                                                           TERDRV.310
---
>       NU_VG  = NI + IVOL_vg                                                      06NOV00.504
303c297,298
<      -               N, LREC, GRDLNMN, GRDLTMN, IVWATER, 'VEGE_CAT')             TERDRV.323
---
>      -               N, LREC, GRDLNMN, GRDLTMN, IVWATER, 'VEGE_CAT',             06NOV00.505
>      -                IPRINT)                                                    06NOV00.506
307c302
<       NU_SL  = NI + 49                                                           TERDRV.327
---
>       NU_SL  = NI + IVOL_so                                                      06NOV00.507
321c316,317
<      -               N, LREC, GRDLNMN, GRDLTMN, ISWATER, 'SOIL_CAT')             TERDRV.341
---
>      -               N, LREC, GRDLNMN, GRDLTMN, ISWATER, 'SOIL_CAT',             06NOV00.508
>      -                IPRINT)                                                    06NOV00.509
324c320
<       NU_VF  = 55                                                                TERDRV.344
---
>       NU_VF  = IVOL_vf                                                           06NOV00.510
336c332,333
<      -                     N, LREC, GRDLNMN, GRDLTMN,  0, 'VEGE_FRC')            TERDRV.356
---
>      -                     N, LREC, GRDLNMN, GRDLTMN,  0, 'VEGE_FRC',            06NOV00.511
>      -                IPRINT)                                                    06NOV00.512
341c338
<       NU_TG  = 60                                                                TERDRV.361
---
>       NU_TG  = IVOL_ts                                                           06NOV00.513
353c350,351
<      -                     N, LREC, GRDLNMN, GRDLTMN,  0, 'TEMP_GRD')            TERDRV.373
---
>      -                     N, LREC, GRDLNMN, GRDLTMN,  0, 'TEMP_GRD',            06NOV00.514
>      -                IPRINT)                                                    06NOV00.515
376c374
<          CALL LAKES(IX,JX,HT,FORCETER,XLAT,XLON)                                 TERDRV.396
---
>          CALL LAKES(IX,JX,HT,FORCETER,XLAT,XLON,IPRINT)                          06NOV00.516
380c378,379
<          PRINT *, ' ++ USING LAND-WATER MASK DATA TO SET COASTLINE'
---
>          IF(IHERE.EQ.1)                                                          06NOV00.517
>      -      PRINT *, '  +++ USING LAND-WATER MASK DATA TO SET COASTLINE'         06NOV00.518
408c407
<       CALL SMTHTR(HT,IX,JX)                                                      TERDRV.427
---
>       CALL SMTHTR(HT,IX,JX,IPRINT)                                               06NOV00.519
426c425
<          PRINT *,'RADIUS OF INFLUENCE =',RAD,' KM (',                            TERDRV.445
---
>          IF(IPRINT.EQ.1) PRINT *,'RADIUS OF INFLUENCE =',RAD,' KM (',            06NOV00.520
441c440,441
<         CALL SOIL_TG(IX,JX,XLAT,TEMPG,FORCETER,TSPVAL)                           TERDRV.460
---
> C                                                                                06NOV00.521
>         CALL SOIL_TG(IX,JX,XLAT,TEMPG,FORCETER,TSPVAL,IPRINT)                    06NOV00.522
477c477
<      -   CALL WATER_VFR(IX,JX,12,FORCETER,  VEGEF, 65.0, DIS(N))                 TERDRV.484
---
>      -   CALL WATER_VFR(IX,JX,12,FORCETER,  VEGEF, 65.0, DIS(N),IPRINT)          06NOV00.523
489c489
<       NUOUT = 29 + N                                                             TERDRV.496
---
>       NUOUT = IVOL_mdl + N                                                       06NOV00.524
494,495c494,495
<         PRINT 2060,NUOUT,IX*JX                                                   TERDRV.501
<  2060   FORMAT('===>> WRITE OUT THE TERRAIN HT ON UNIT',I2,                      TERDRV.502
---
>         IF(IPRINT.EQ.1)PRINT 2060,NUOUT,IX*JX                                    06NOV00.525
>  2060   FORMAT(/' ==>> WRITE OUT THE TERRAIN HT ON UNIT',I2,                     06NOV00.526
507,508c507,508
<         PRINT 2061,NUOUT,IX*JX                                                   TERDRV.514
<  2061   FORMAT('===>> WRITE OUT THE LANDUSE    ON UNIT',I2,                      TERDRV.515
---
>         IF(IPRINT.EQ.1)PRINT 2061,NUOUT,IX*JX                                    06NOV00.527
>  2061   FORMAT(' ==>> WRITE OUT THE LANDUSE    ON UNIT',I2,                      06NOV00.528
524c524
<           PRINT 2062,NC,NUOUT,IX*JX                                              TERDRV.531
---
>           IF(IPRINT.EQ.1)PRINT 2062,NC,NUOUT,IX*JX                               06NOV00.529
536c536
<           PRINT 2063,NC,NUOUT,IX*JX                                              TERDRV.543
---
>           IF(IPRINT.EQ.1)PRINT 2063,NC,NUOUT,IX*JX                               06NOV00.530
548c548
<           PRINT 2064,NC,NUOUT,IX*JX                                              TERDRV.555
---
>           IF(IPRINT.EQ.1)PRINT 2064,NC,NUOUT,IX*JX                               06NOV00.531
554,555c554,555
<         PRINT 2065,NUOUT,IX*JX                                                   TERDRV.561
<  2065   FORMAT('===>> WRITE OUT THE GRND TEMP. ON UNIT',I2,                      TERDRV.562
---
>         IF(IPRINT.EQ.1)PRINT 2065,NUOUT,IX*JX                                    06NOV00.532
>  2065   FORMAT(' ==>> WRITE OUT THE GRND TEMP. ON UNIT',I2,                      06NOV00.533
559,560c559,560
<         PRINT 2066,NUOUT,IX*JX                                                   TERDRV.566
<  2066   FORMAT('===>> WRITE OUT THE LAND/WATER MASK ON UNIT',I2,                 TERDRV.567
---
>         IF(IPRINT.EQ.1)PRINT 2066,NUOUT,IX*JX                                    06NOV00.534
>  2066   FORMAT(' ==>> WRITE OUT THE LAND/WATER MASK ON UNIT',I2,                 06NOV00.535
576c576
<  2067   FORMAT('===>> WRITE OUT THE VEGE INDEX ON UNIT',I2,                      TERDRV.583
---
>  2067   FORMAT(' ==>> WRITE OUT THE VEGE INDEX ON UNIT',I2,                      06NOV00.536
586,587c586,587
<         PRINT 2068,NUOUT,IX*JX                                                   TERDRV.593
<  2068   FORMAT('===>> WRITE OUT THE SOIL INDEX ON UNIT',I2,                      TERDRV.594
---
>         IF(IPRINT.EQ.1)PRINT 2068,NUOUT,IX*JX                                    06NOV00.537
>  2068   FORMAT(' ==>> WRITE OUT THE SOIL INDEX ON UNIT',I2,                      06NOV00.538
===================================================================
src/terrain.F
diff -r3.0 -r3.4
20a21
> # include <io.incl>                                                              06NOV00.539
91,92c92,93
< 11    FORMAT(/2X,'========== CREATE TERRAIN AND ',                               TERRAIN.91
<      1           'LANDUSE FOR DOMAIN:'I3,' ============')                        TERRAIN.92
---
> 11    FORMAT(/1X,'========== CREATE TERRESTRIAL DATA ',                          06NOV00.540
>      1           'FOR DOMAIN:'I3,' =========='/)                                 06NOV00.541
109c110
< 12    FORMAT(/20X,'=== DOMAIN ',I2,' TERRAIN AND LANDUSE CREATED ===')           TERRAIN.109
---
> 12    FORMAT(/5X,'****** DOMAIN ',I2,' TERRESTRIAL DATA CREATED ******')         06NOV00.542
120,121d120
< 2     FORMAT(//10X,'++++++++ TWO WAY NESTED ADJUSTMENT ++++++++'//)              TERRAIN.120
< C                                                                                TERRAIN.121
124c123
<         IINF = 29 + MN                                                           TERRAIN.124
---
>         IINF = IVOL_mdl + MN                                                     06NOV00.543
127c126,127
<         IINC = 29 + NUMNC(MN)                                                    TERRAIN.127
---
>         IINC = IVOL_mdl + NUMNC(MN)                                              06NOV00.544
>         PRINT 3, MN                                                              06NOV00.545
141c141
<      2              IPFLAG,MIX,MJX,VEGESOIL,VEGONLY)                             TERRAIN.141
---
>      2              IPFLAG,MIX,MJX,VEGESOIL,VEGONLY,IPRINT)                      06NOV00.546
142a143,144
> 3     FORMAT(/1X,'---------- BOUNDARY BLENDING ',                                06NOV00.547
>      1           'FOR DOMAIN:'I3,' ----------'/)                                 06NOV00.548
150c152
<         IINF = 29 + MN                                                           TERRAIN.150
---
>         IINF = IVOL_mdl + MN                                                     06NOV00.549
153c155
<         IINC = 29 + NUMNC(MN)                                                    TERRAIN.153
---
>         IINC = IVOL_mdl + NUMNC(MN)                                              06NOV00.550
165,166c167
<         PRINT 2                                                                  TERRAIN.165
<         PRINT *,'DOMAIN ',MN                                                     TERRAIN.166
---
>         PRINT 2, MNC                                                             06NOV00.551
174a176,177
> 2     FORMAT(/1X,'++++++++++ TWO-WAY NESTED ADJUSTMENT ',                        06NOV00.552
>      -       'FOR DOMAIN:'I3,' ++++++++++'/)                                     06NOV00.553
185c188
<         IIN = 29 + MN                                                            TERRAIN.185
---
>         IIN = IVOL_mdl + MN                                                      06NOV00.554
202a206,207
>       PRINT *, ' '                                                               06NOV00.555
>       PRINT *, 'PLOT TERRESTIAL FIELDS.'                                         06NOV00.556
204c209
<          PRINT *, 'PLOT TERRESTIAL FIELDS. IX,JX = ',IWD(MN),JWD(MN)             TERRAIN.204
---
> C        PRINT *, 'PLOT TERRESTIAL FIELDS. IX,JX = ',IWD(MN),JWD(MN)             06NOV00.557
===================================================================
src/terrestial_info.F
diff -r3.0 -r3.2
26c26,27
<       OMEGA2=1.454441E-4                                                         TERRESTIAL_INFO.26
---
> C  EOMEG USES THE SIDEREAL DAY (NOT SOLAR DAY) - SAME AS IN MM5                  06NOV00.558
>       OMEGA2=2.*7.2921E-5                                                        06NOV00.559
===================================================================
src/tfudge.F
diff -r3.1 -r3.8
4c4
<      2                  PFLAG,MIXX,MJXX,VEGESOIL,VEGONLY)                        TFUDGE.4
---
>      2                  PFLAG,MIXX,MJXX,VEGESOIL,VEGONLY,IP)                     06NOV00.560
18c18
< C              NUMBERS 29+N FOR THE DOMAIN N.                                    TFUDGE.18
---
> C              NUMBERS IVOL_mdl+N FOR THE DOMAIN N.                              06NOV00.561
29a30,31
> # include <paramed.incl>                                                         06NOV00.562
> # include <io.incl>                                                              06NOV00.563
50c52
<       PRINT *,'==> CALL TFUDGE <=='                                              TFUDGE.50
---
>       PRINT *,'==> CALL TFUDGE <=='                                              06NOV00.564
52,55c54,60
<       NESTID = IINF - 29                                                         TFUDGE.52
<       NVW = IVW(NESTID)                                                          TFUDGE.53
<       NSW = ISW(NESTID)                                                          TFUDGE.54
<       PRINT *,'VEGE. WATER_C = ',NVW,'  SOIL WATER_C = ',NSW                     TFUDGE.55
---
>       NESTID = IINF - IVOL_mdl                                                   06NOV00.565
>       NVW = IVW(NUMNC(NESTID)+1)                                                 06NOV00.566
>       NSW = ISW(NUMNC(NESTID)+1)                                                 06NOV00.567
>       IF(IP.EQ.1)PRINT *,'VEGE. WATER_C = ',NVW,'  SOIL WATER_C = ',NSW          06NOV00.568
>       PRINT 910, NESTID, IINC-IVOL_mdl                                           06NOV00.569
> 910   FORMAT(1X,'RESET BOUNDARY VALUES FOR DOMAIN ',I2,                          06NOV00.570
>      -       ' FROM DOMAIN ',I2)                                                 06NOV00.571
57,58d61
<       PRINT *,'RESET BOUNDARY VALUES FOR DOMAIN ',NESTID,                        TFUDGE.57
<      -        ' FROM DOMAIN ',IINC-29                                            TFUDGE.58
67c70
<       NC     = IINC - 29                                                         TFUDGE.67
---
>       NC     = IINC - IVOL_mdl                                                   06NOV00.572
102c105
<       NFN    = IINF-29                                                           TFUDGE.102
---
>       NFN    = IINF-IVOL_mdl                                                     06NOV00.573
166c169
<       PRINT *,'    $$ TERRAIN HEIGHT ADJUSTED ALONG BOUNDARY'                    TFUDGE.166
---
>       IF(IP.EQ.1)PRINT *,'    $$ TERRAIN HEIGHT ADJUSTED ALONG BOUNDARY'         06NOV00.574
217a221
> C    ALSO DO SAME BOUNDARY REPLACE FOR VEG AND SOIL FRAC ARRAYS ---jp 4/00       06NOV00.575
220,222c224,226
<         II = (I-ISOUTH)*IRATIOF + 2                                              TFUDGE.220
<         DO 200 L = -1,1                                                          TFUDGE.221
<         DO 200 M = 1,IRATIOF-1                                                   TFUDGE.222
---
>         II = (I-ISOUTH)*IRATIOF                                                  06NOV00.576
>         DO 200 L = 1, IRATIOF                                                    06NOV00.577
>         DO 200 M = 1,2                                                           06NOV00.578
225c229,232
<         XLSF(II+L,M) = XLSC(I,JWEST)                                             TFUDGE.225
---
> c                                                                                06NOV00.579
>         IF (VEGESOIL) THEN                                                       06NOV00.580
>         IF (.NOT. VEGONLY) THEN                                                  06NOV00.581
>         XLSF(II+L,M) = XLSC(I,JWEST)                                             06NOV00.582
226a234
>         TGF(II+L,M) = TGC(I,JWEST)                                               06NOV00.583
229a238,246
>         DO IC = 1,NVC                                                            06NOV00.584
>           VF(II+L,M,IC) = VC(I,JWEST,IC)                                         06NOV00.585
>         END DO                                                                   06NOV00.586
>         DO IC = 1,NSC                                                            06NOV00.587
>           SF(II+L,M,IC) = SC(I,JWEST,IC)                                         06NOV00.588
>         END DO                                                                   06NOV00.589
>         ENDIF                                                                    06NOV00.590
>         ENDIF                                                                    06NOV00.591
> c                                                                                06NOV00.592
231a249,251
> c                                                                                06NOV00.593
>         IF (VEGESOIL) THEN                                                       06NOV00.594
>         IF (.NOT. VEGONLY) THEN                                                  06NOV00.595
233a254
>         TGF(II+L,JXXF-M) = TGC(I,JEAST-1)                                        06NOV00.596
236a258,266
>         DO IC = 1,NVC                                                            06NOV00.597
>           VF(II+L,JXXF-M,IC) = VC(I,JEAST-1,IC)                                  06NOV00.598
>         END DO                                                                   06NOV00.599
>         DO IC = 1,NSC                                                            06NOV00.600
>           SF(II+L,JXXF-M,IC) = SC(I,JEAST-1,IC)                                  06NOV00.601
>         END DO                                                                   06NOV00.602
>         ENDIF                                                                    06NOV00.603
>         ENDIF                                                                    06NOV00.604
> c                                                                                06NOV00.605
240,242c270,272
<         JJ = (J-JWEST)*IRATIOF + 2                                               TFUDGE.234
<         DO 210 L = 1,IRATIOF-1                                                   TFUDGE.235
<         DO 210 M = -1,1                                                          TFUDGE.236
---
>         JJ = (J-JWEST)*IRATIOF                                                   06NOV00.606
>         DO 210 L = 1, 2                                                          06NOV00.607
>         DO 210 M = 1, IRATIOF                                                    06NOV00.608
244a275,277
> c                                                                                06NOV00.609
>         IF (VEGESOIL) THEN                                                       06NOV00.610
>         IF (.NOT. VEGONLY) THEN                                                  06NOV00.611
246a280
>         TGF(L,JJ+M) = TGC(ISOUTH,J)                                              06NOV00.612
249a284,292
>         DO IC = 1,NVC                                                            06NOV00.613
>           VF(L,JJ+M,IC) = VC(ISOUTH,J,IC)                                        06NOV00.614
>         END DO                                                                   06NOV00.615
>         DO IC = 1,NSC                                                            06NOV00.616
>           SF(L,JJ+M,IC) = SC(ISOUTH,J,IC)                                        06NOV00.617
>         END DO                                                                   06NOV00.618
>         ENDIF                                                                    06NOV00.619
>         ENDIF                                                                    06NOV00.620
> c                                                                                06NOV00.621
251a295,297
> c                                                                                06NOV00.622
>         IF (VEGESOIL) THEN                                                       06NOV00.623
>         IF (.NOT. VEGONLY) THEN                                                  06NOV00.624
253a300
>         TGF(IYYF-L,JJ+M) = TGC(INORTH-1,J)                                       06NOV00.625
256a304,312
>         DO IC = 1,NVC                                                            06NOV00.626
>           VF(IYYF-L,JJ+M,IC) = VC(INORTH-1,J,IC)                                 06NOV00.627
>         END DO                                                                   06NOV00.628
>         DO IC = 1,NSC                                                            06NOV00.629
>           SF(IYYF-L,JJ+M,IC) = SC(INORTH-1,J,IC)                                 06NOV00.630
>         END DO                                                                   06NOV00.631
>         ENDIF                                                                    06NOV00.632
>         ENDIF                                                                    06NOV00.633
> c                                                                                06NOV00.634
===================================================================
src/vs_cmn1.incl
diff -r3.0 -r3.2
14,17c14,17
<       INTEGER IVW(5), ISW(5),  NLONVEG(5),  NLATVEG(5),                          VS_CMN1.14
<      >                        NLONSOIL(5), NLATSOIL(5)                           VS_CMN1.15
<       REAL XLATV0(5), XLONV0(5), XLATS0(5), XLONS0(5),                           VS_CMN1.16
<      >     RESOLV(5), RESOLS(5)                                                  VS_CMN1.17
---
>       INTEGER IVW(max_type),      ISW(max_type),  NLONVEG(max_type),             06NOV00.635
>      >    NLATVEG(max_type), NLONSOIL(max_type), NLATSOIL(max_type)              06NOV00.636
>       REAL XLATV0(max_type), XLONV0(max_type), XLATS0(max_type),                 06NOV00.637
>      >     XLONS0(max_type), RESOLV(max_type), RESOLS(max_type)                  06NOV00.638
===================================================================
src/vs_data.incl
diff -r3.0 -r3.3
1,132c1,131
< C  VEGETATION DATA      1      2       3       4       5                         VS_DATA.1
<       DATA NCATVEG /25/,                                                         VS_DATA.2
<      >        IVW /    16,    16,     16,     16,     16/,                       VS_DATA.3
<      >     RESOLV /   1.0,   0.5, 0.1667, 0.0833,0.00833/,                       VS_DATA.4
<      >     XLATV0 /  90.0,  90.0,   90.0,   90.0,   90.0/,                       VS_DATA.5
<      >     XLONV0 /-180.0,-180.0, -180.0, -180.0, -180.0/,                       VS_DATA.6
<      >    NLATVEG /   180,   360,   1080,   2160,  21601/,                       VS_DATA.7
<      >    NLONVEG /   361,   721,   2161,   4321,  43201/                        VS_DATA.8
< C                                                                                VS_DATA.9
<       DATA LLBV /'URBAN AND BUILT-UP LAND      ',                                VS_DATA.10
<      *           'DRYLAND CROPLAND AND PASTURE ',                                VS_DATA.11
<      *           'IRRIGATED CROPLAND AND PASTRE',                                VS_DATA.12
<      *           'MIXED DRYLND/IRRGTD CROP&PAST',                                VS_DATA.13
<      *           'CROPLAND/GRASSLAND MOSAIC    ',                                VS_DATA.14
<      *           'CROPLAND/WOODLAND MOSAIC     ',                                VS_DATA.15
<      *           'GRASSLAND                    ',                                VS_DATA.16
<      *           'SHRUBLAND                    ',                                VS_DATA.17
<      *           'MIXED SHRUBLAND/GRASSLAND    ',                                VS_DATA.18
<      *           'SAVANNA                      ',                                VS_DATA.19
<      *           'DECIDUOUS BROADLEAF FOREST   ',                                VS_DATA.20
<      *           'DECIDUOUS NEEDLELEAF FOREST  ',                                VS_DATA.21
<      *           'EVERGREEN BROADLEAF FOREST   ',                                VS_DATA.22
<      *           'EVERGREEN NEEDLELEAF FOREST  ',                                VS_DATA.23
<      *           'MIXED FOREST                 ',                                VS_DATA.24
<      *           'WATER BODIES                 ',                                VS_DATA.25
<      *           'HERBACEOUS WETLAND           ',                                VS_DATA.26
<      *           'WOODED WETLAND               ',                                VS_DATA.27
<      *           'BARREN OR SPARSELY VEGETATED ',                                VS_DATA.28
<      *           'HERBACEOUS TUNDRA            ',                                VS_DATA.29
<      *           'WOODED TUNDRA                ',                                VS_DATA.30
<      *           'MIXED TUNDRA                 ',                                VS_DATA.31
<      *           'BARE GROUND TUNDRA           ',                                VS_DATA.32
<      *           'SNOW OR ICE                  ',                                VS_DATA.33
<      *           'MISSING DATA                 '/                                VS_DATA.34
<       DATA LLBV3 / ' 0 NODAT' ,                                                  VS_DATA.35
<      *            ' 1 URBAN' ,                                                   VS_DATA.36
<      *            ' 2 DRCRP' ,                                                   VS_DATA.37
<      *            ' 3 IRCRP' ,                                                   VS_DATA.38
<      *            ' 4 MIXCP' ,                                                   VS_DATA.39
<      *            ' 5 CRGRM' ,                                                   VS_DATA.40
<      *            ' 6 CRWDM' ,                                                   VS_DATA.41
<      *            ' 7 GRSLD' ,                                                   VS_DATA.42
<      *            ' 8 SHRLD' ,                                                   VS_DATA.43
<      *            ' 9 SHRGR' ,                                                   VS_DATA.44
<      *            '10 SAVAN' ,                                                   VS_DATA.45
<      *            '11 DBFST' ,                                                   VS_DATA.46
<      *            '12 DNFST' ,                                                   VS_DATA.47
<      *            '13 EBFST' ,                                                   VS_DATA.48
<      *            '14 ENFST' ,                                                   VS_DATA.49
<      *            '15 MXFST' ,                                                   VS_DATA.50
<      *            '16 WATER' ,                                                   VS_DATA.51
<      *            '17 HWTLD' ,                                                   VS_DATA.52
<      *            '18 WWTLD' ,                                                   VS_DATA.53
<      *            '19 BARSP' ,                                                   VS_DATA.54
<      *            '20 HRTUN' ,                                                   VS_DATA.55
<      *            '21 WDTUN' ,                                                   VS_DATA.56
<      *            '22 MXTUN' ,                                                   VS_DATA.57
<      *            '23 BGTUN' ,                                                   VS_DATA.58
<      *            '24 SNWIC' /                                                   VS_DATA.59
<       DATA LBVG/18,19,20,21,22,23,24,25,26,27,28,29,30,                          VS_DATA.60
<      *          31,32,33,34,35,36,37,38,39,40,41,42/                             VS_DATA.61
<       DATA LLBV2/' 1',' 2',' 3',' 4',' 5',' 6',' 7',' 8',                        VS_DATA.62
<      *          ' 9','10','11','12','13','14','15','16',                         VS_DATA.63
<      *          '17','18','19','20','21','22','23','24','25'/                    VS_DATA.64
< C                                                                                VS_DATA.65
< C  SOIL DATA            1      2       3       4       5                         VS_DATA.66
<       DATA NCATSOIL /17/,                                                        VS_DATA.67
<      >        ISW /    14,    14,     14,     14,     14/,                       VS_DATA.68
<      >     RESOLS /   1.0,   0.5, 0.1667, 0.0833,0.00833/,                       VS_DATA.69
<      >     XLATS0 /  90.0,  90.0,   90.0,   90.0,   90.0/,                       VS_DATA.70
<      >     XLONS0 /-180.0,-180.0, -180.0, -180.0, -180.0/,                       VS_DATA.71
<      >   NLATSOIL /   180,   360,   1080,   2160,  21600/,                       VS_DATA.72
<      >   NLONSOIL /   360,   720,   2160,   4320,  43200/                        VS_DATA.73
< C                                                                                VS_DATA.74
<       DATA LLBS /'SAND                         ',                                VS_DATA.75
<      *           'LOAMY SAND                   ',                                VS_DATA.76
<      *           'SANDY LOAM                   ',                                VS_DATA.77
<      *           'SILT LOAM                    ',                                VS_DATA.78
<      *           'SILT                         ',                                VS_DATA.79
<      *           'LOAM                         ',                                VS_DATA.80
<      *           'SANDY CLAY LOAM              ',                                VS_DATA.81
<      *           'SILTY CLAY LOAM              ',                                VS_DATA.82
<      *           'CLAY LOAM                    ',                                VS_DATA.83
<      *           'SANDY CLAY                   ',                                VS_DATA.84
<      *           'SILTY CLAY                   ',                                VS_DATA.85
<      *           'CLAY                         ',                                VS_DATA.86
<      *           'ORGANIC MATERIALS            ',                                VS_DATA.87
<      *           'WATER                        ',                                VS_DATA.88
<      *           'BEDROCK                      ',                                VS_DATA.89
<      *           'OTHER                        ',                                VS_DATA.90
<      *           'NO DATA                      '/                                VS_DATA.91
< C                                                                                VS_DATA.92
<       DATA LLBS3 / ' 0 NODAT' ,                                                  VS_DATA.93
<      *            ' 1 SAND ' ,                                                   VS_DATA.94
<      *            ' 2 LMYSD' ,                                                   VS_DATA.95
<      *            ' 3 SDYLM' ,                                                   VS_DATA.96
<      *            ' 4 SLTLM' ,                                                   VS_DATA.97
<      *            ' 5 SILT ' ,                                                   VS_DATA.98
<      *            ' 6 LOAM ' ,                                                   VS_DATA.99
<      *            ' 7 SDYCL' ,                                                   VS_DATA.100
<      *            ' 8 SLYCL' ,                                                   VS_DATA.101
<      *            ' 9 CLYLM' ,                                                   VS_DATA.102
<      *            '10 SDYCL' ,                                                   VS_DATA.103
<      *            '11 SLTCL' ,                                                   VS_DATA.104
<      *            '12 CLAY ' ,                                                   VS_DATA.105
<      *            '13 ORGMT' ,                                                   VS_DATA.106
<      *            '14 WATER' ,                                                   VS_DATA.107
<      *            '15 BDRCK' ,                                                   VS_DATA.108
<      *            '16 OTHER' /                                                   VS_DATA.109
<       DATA LBSL /18,19,20,21,22,23,24,25,26,27,28,29,30,                         VS_DATA.110
<      *                                        31,32,33,34/                       VS_DATA.111
<       DATA LLBS2/' 1',' 2',' 3',' 4',' 5',' 6',' 7',' 8',                        VS_DATA.112
<      *          ' 9','10','11','12','13','14','15','16','17'/                    VS_DATA.113
< C                                                                                VS_DATA.114
< C  ---------------------------------------------------------------------         VS_DATA.115
< C MONTHLY VEGETATION FRACTION:                                                   VS_DATA.116
<       DATA LLBF /'JANUARY                      ',                                VS_DATA.117
<      *           'FEBRUARY                      ',                               VS_DATA.118
<      *           'MARCH                        ',                                VS_DATA.119
<      *           'APRIL                        ',                                VS_DATA.120
<      *           'MAY                          ',                                VS_DATA.121
<      *           'JUNE                         ',                                VS_DATA.122
<      *           'JULY                         ',                                VS_DATA.123
<      *           'AUGUST                       ',                                VS_DATA.124
<      *           'SEPTEMBER                    ',                                VS_DATA.125
<      *           'OCTOBER                      ',                                VS_DATA.126
<      *           'NOVEMBER                     ',                                VS_DATA.127
<      *           'DECEMBER                     '/                                VS_DATA.128
< C                                                                                VS_DATA.129
<       DATA VEGECOFILE /'lvc2.tbl'/, SOILCOFILE /'lsco.tbl'/                      VS_DATA.130
< C                                                                                VS_DATA.131
<                                                                                  VS_DATA.132
---
> C  VEGETATION DATA      1      2       3       4       5        6                06NOV00.639
>       DATA NCATVEG /25/,                                                         06NOV00.640
>      >        IVW /    16,    16,     16,     16,     16,      16/,              06NOV00.641
>      >     RESOLV /   1.0,   0.5, 0.1667, 0.0833, 0.0333, 0.00833/,              06NOV00.642
>      >     XLATV0 /  90.0,  90.0,   90.0,   90.0,   90.0,    90.0/,              06NOV00.643
>      >     XLONV0 /-180.0,-180.0, -180.0, -180.0, -180.0,  -180.0/,              06NOV00.644
>      >    NLATVEG /   180,   360,   1080,   2160,   5400,   21601/,              06NOV00.645
>      >    NLONVEG /   361,   721,   2161,   4321,  10801,   43201/               06NOV00.646
> C                                                                                06NOV00.647
>       DATA LLBV /'URBAN AND BUILT-UP LAND      ',                                06NOV00.648
>      *           'DRYLAND CROPLAND AND PASTURE ',                                06NOV00.649
>      *           'IRRIGATED CROPLAND AND PASTRE',                                06NOV00.650
>      *           'MIXED DRYLND/IRRGTD CROP&PAST',                                06NOV00.651
>      *           'CROPLAND/GRASSLAND MOSAIC    ',                                06NOV00.652
>      *           'CROPLAND/WOODLAND MOSAIC     ',                                06NOV00.653
>      *           'GRASSLAND                    ',                                06NOV00.654
>      *           'SHRUBLAND                    ',                                06NOV00.655
>      *           'MIXED SHRUBLAND/GRASSLAND    ',                                06NOV00.656
>      *           'SAVANNA                      ',                                06NOV00.657
>      *           'DECIDUOUS BROADLEAF FOREST   ',                                06NOV00.658
>      *           'DECIDUOUS NEEDLELEAF FOREST  ',                                06NOV00.659
>      *           'EVERGREEN BROADLEAF FOREST   ',                                06NOV00.660
>      *           'EVERGREEN NEEDLELEAF FOREST  ',                                06NOV00.661
>      *           'MIXED FOREST                 ',                                06NOV00.662
>      *           'WATER BODIES                 ',                                06NOV00.663
>      *           'HERBACEOUS WETLAND           ',                                06NOV00.664
>      *           'WOODED WETLAND               ',                                06NOV00.665
>      *           'BARREN OR SPARSELY VEGETATED ',                                06NOV00.666
>      *           'HERBACEOUS TUNDRA            ',                                06NOV00.667
>      *           'WOODED TUNDRA                ',                                06NOV00.668
>      *           'MIXED TUNDRA                 ',                                06NOV00.669
>      *           'BARE GROUND TUNDRA           ',                                06NOV00.670
>      *           'SNOW OR ICE                  ',                                06NOV00.671
>      *           'MISSING DATA                 '/                                06NOV00.672
>       DATA LLBV3 / ' 0 NODAT' ,                                                  06NOV00.673
>      *            ' 1 URBAN' ,                                                   06NOV00.674
>      *            ' 2 DRCRP' ,                                                   06NOV00.675
>      *            ' 3 IRCRP' ,                                                   06NOV00.676
>      *            ' 4 MIXCP' ,                                                   06NOV00.677
>      *            ' 5 CRGRM' ,                                                   06NOV00.678
>      *            ' 6 CRWDM' ,                                                   06NOV00.679
>      *            ' 7 GRSLD' ,                                                   06NOV00.680
>      *            ' 8 SHRLD' ,                                                   06NOV00.681
>      *            ' 9 SHRGR' ,                                                   06NOV00.682
>      *            '10 SAVAN' ,                                                   06NOV00.683
>      *            '11 DBFST' ,                                                   06NOV00.684
>      *            '12 DNFST' ,                                                   06NOV00.685
>      *            '13 EBFST' ,                                                   06NOV00.686
>      *            '14 ENFST' ,                                                   06NOV00.687
>      *            '15 MXFST' ,                                                   06NOV00.688
>      *            '16 WATER' ,                                                   06NOV00.689
>      *            '17 HWTLD' ,                                                   06NOV00.690
>      *            '18 WWTLD' ,                                                   06NOV00.691
>      *            '19 BARSP' ,                                                   06NOV00.692
>      *            '20 HRTUN' ,                                                   06NOV00.693
>      *            '21 WDTUN' ,                                                   06NOV00.694
>      *            '22 MXTUN' ,                                                   06NOV00.695
>      *            '23 BGTUN' ,                                                   06NOV00.696
>      *            '24 SNWIC' /                                                   06NOV00.697
>       DATA LBVG/18,19,20,21,22,23,24,25,26,27,28,29,30,                          06NOV00.698
>      *          31,32,33,34,35,36,37,38,39,40,41,42/                             06NOV00.699
>       DATA LLBV2/' 1',' 2',' 3',' 4',' 5',' 6',' 7',' 8',                        06NOV00.700
>      *          ' 9','10','11','12','13','14','15','16',                         06NOV00.701
>      *          '17','18','19','20','21','22','23','24','25'/                    06NOV00.702
> C                                                                                06NOV00.703
> C  SOIL DATA            1      2       3       4       5        6                06NOV00.704
>       DATA NCATSOIL /17/,                                                        06NOV00.705
>      >        ISW /    14,    14,     14,     14,     14,      14/,              06NOV00.706
>      >     RESOLS /   1.0,   0.5, 0.1667, 0.0833, 0.0333, 0.00833/,              06NOV00.707
>      >     XLATS0 /  90.0,  90.0,   90.0,   90.0,   90.0,    90.0/,              06NOV00.708
>      >     XLONS0 /-180.0,-180.0, -180.0, -180.0, -180.0,  -180.0/,              06NOV00.709
>      >   NLATSOIL /   180,   360,   1080,   2160,   5400,   21600/,              06NOV00.710
>      >   NLONSOIL /   360,   720,   2160,   4320,  10800,   43200/               06NOV00.711
> C                                                                                06NOV00.712
>       DATA LLBS /'SAND                         ',                                06NOV00.713
>      *           'LOAMY SAND                   ',                                06NOV00.714
>      *           'SANDY LOAM                   ',                                06NOV00.715
>      *           'SILT LOAM                    ',                                06NOV00.716
>      *           'SILT                         ',                                06NOV00.717
>      *           'LOAM                         ',                                06NOV00.718
>      *           'SANDY CLAY LOAM              ',                                06NOV00.719
>      *           'SILTY CLAY LOAM              ',                                06NOV00.720
>      *           'CLAY LOAM                    ',                                06NOV00.721
>      *           'SANDY CLAY                   ',                                06NOV00.722
>      *           'SILTY CLAY                   ',                                06NOV00.723
>      *           'CLAY                         ',                                06NOV00.724
>      *           'ORGANIC MATERIALS            ',                                06NOV00.725
>      *           'WATER                        ',                                06NOV00.726
>      *           'BEDROCK                      ',                                06NOV00.727
>      *           'OTHER                        ',                                06NOV00.728
>      *           'NO DATA                      '/                                06NOV00.729
> C                                                                                06NOV00.730
>       DATA LLBS3 / ' 0 NODAT' ,                                                  06NOV00.731
>      *            ' 1 SAND ' ,                                                   06NOV00.732
>      *            ' 2 LMYSD' ,                                                   06NOV00.733
>      *            ' 3 SDYLM' ,                                                   06NOV00.734
>      *            ' 4 SLTLM' ,                                                   06NOV00.735
>      *            ' 5 SILT ' ,                                                   06NOV00.736
>      *            ' 6 LOAM ' ,                                                   06NOV00.737
>      *            ' 7 SDYCL' ,                                                   06NOV00.738
>      *            ' 8 SLYCL' ,                                                   06NOV00.739
>      *            ' 9 CLYLM' ,                                                   06NOV00.740
>      *            '10 SDYCL' ,                                                   06NOV00.741
>      *            '11 SLTCL' ,                                                   06NOV00.742
>      *            '12 CLAY ' ,                                                   06NOV00.743
>      *            '13 ORGMT' ,                                                   06NOV00.744
>      *            '14 WATER' ,                                                   06NOV00.745
>      *            '15 BDRCK' ,                                                   06NOV00.746
>      *            '16 OTHER' /                                                   06NOV00.747
>       DATA LBSL /18,19,20,21,22,23,24,25,26,27,28,29,30,                         06NOV00.748
>      *                                        31,32,33,34/                       06NOV00.749
>       DATA LLBS2/' 1',' 2',' 3',' 4',' 5',' 6',' 7',' 8',                        06NOV00.750
>      *          ' 9','10','11','12','13','14','15','16','17'/                    06NOV00.751
> C                                                                                06NOV00.752
> C  ---------------------------------------------------------------------         06NOV00.753
> C MONTHLY VEGETATION FRACTION:                                                   06NOV00.754
>       DATA LLBF /'JANUARY                      ',                                06NOV00.755
>      *           'FEBRUARY                      ',                               06NOV00.756
>      *           'MARCH                        ',                                06NOV00.757
>      *           'APRIL                        ',                                06NOV00.758
>      *           'MAY                          ',                                06NOV00.759
>      *           'JUNE                         ',                                06NOV00.760
>      *           'JULY                         ',                                06NOV00.761
>      *           'AUGUST                       ',                                06NOV00.762
>      *           'SEPTEMBER                    ',                                06NOV00.763
>      *           'OCTOBER                      ',                                06NOV00.764
>      *           'NOVEMBER                     ',                                06NOV00.765
>      *           'DECEMBER                     '/                                06NOV00.766
> C                                                                                06NOV00.767
>       DATA VEGECOFILE /'lvc2.tbl'/, SOILCOFILE /'lsco.tbl'/                      06NOV00.768
> C                                                                                06NOV00.769
===================================================================
src/vs_data0.incl
diff -r3.0 -r3.3
1c1
< C  VEGETATION DATA      1      2       3       4       5                         VS_DATA0.1
---
> C  VEGETATION DATA      1      2       3       4       5        6                06NOV00.770
3,8c3,8
<      >        IVW /    15,    15,     15,     15,     15/,                       VS_DATA0.3
<      >     RESOLV /   1.0,   0.5, 0.1667, 0.0833,0.00833/,                       VS_DATA0.4
<      >     XLATV0 /  90.0,  90.0,   90.0,   90.0,   90.0/,                       VS_DATA0.5
<      >     XLONV0 /-180.0,-180.0, -180.0, -180.0, -180.0/,                       VS_DATA0.6
<      >    NLATVEG /    90,   180,    540,   1080,  10800/,                       VS_DATA0.7
<      >    NLONVEG /   120,   240,    720,   1440,  14400/                        VS_DATA0.8
---
>      >        IVW /    15,    15,     15,     15,     15,      15/,              06NOV00.771
>      >     RESOLV /   1.0,   0.5, 0.1667, 0.0833, 0.0333, 0.00833/,              06NOV00.772
>      >     XLATV0 /  90.0,  90.0,   90.0,   90.0,   90.0,    90.0/,              06NOV00.773
>      >     XLONV0 /-180.0,-180.0, -180.0, -180.0, -180.0,  -180.0/,              06NOV00.774
>      >    NLATVEG /    90,   180,    540,   1080,   2700,   10800/,              06NOV00.775
>      >    NLONVEG /   120,   240,    720,   1440,   3600,   14400/               06NOV00.776
52,57c52,57
<      >        ISW /    14,    14,     14,     14,     14/,                       VS_DATA0.52
<      >     RESOLS /   1.0,   0.5, 0.1667, 0.0833,0.00833/,                       VS_DATA0.53
<      >     XLATS0 /  90.0,  90.0,   90.0,   90.0,   90.0/,                       VS_DATA0.54
<      >     XLONS0 /-180.0,-180.0, -180.0, -180.0, -180.0/,                       VS_DATA0.55
<      >   NLATSOIL /   180,   360,   1080,   2160,  21600/,                       VS_DATA0.56
<      >   NLONSOIL /   360,   720,   2160,   4320,  43200/                        VS_DATA0.57
---
>      >        ISW /    14,    14,     14,     14,     14,      14/,              06NOV00.777
>      >     RESOLS /   1.0,   0.5, 0.1667, 0.0833, 0.0333, 0.00833/,              06NOV00.778
>      >     XLATS0 /  90.0,  90.0,   90.0,   90.0,   90.0,    90.0/,              06NOV00.779
>      >     XLONS0 /-180.0,-180.0, -180.0, -180.0, -180.0,  -180.0/,              06NOV00.780
>      >   NLATSOIL /   180,   360,   1080,   2160,   5400,   21600/,              06NOV00.781
>      >   NLONSOIL /   360,   720,   2160,   4320,  10800,   43200/               06NOV00.782
===================================================================
src/vs_data2.incl
diff -r3.0 -r3.3
1c1
< C  VEGETATION DATA      1      2       3       4       5                         VS_DATA2.1
---
> C  VEGETATION DATA      1      2       3       4       5        6                06NOV00.783
3,8c3,8
<      >        IVW /    16,    16,     16,     16,     16/,                       VS_DATA2.3
<      >     RESOLV /   1.0,   0.5, 0.1667, 0.0833,0.00833/,                       VS_DATA2.4
<      >     XLATV0 /  90.0,  90.0,   90.0,   90.0,   90.0/,                       VS_DATA2.5
<      >     XLONV0 /-180.0,-180.0, -180.0, -180.0, -180.0/,                       VS_DATA2.6
<      >    NLATVEG /   180,   360,   1080,   2160,  21601/,                       VS_DATA2.7
<      >    NLONVEG /   361,   721,   2161,   4321,  43201/                        VS_DATA2.8
---
>      >        IVW /    16,    16,     16,     16,     16,      16/,              06NOV00.784
>      >     RESOLV /   1.0,   0.5, 0.1667, 0.0833, 0.0333, 0.00833/,              06NOV00.785
>      >     XLATV0 /  90.0,  90.0,   90.0,   90.0,   90.0,    90.0/,              06NOV00.786
>      >     XLONV0 /-180.0,-180.0, -180.0, -180.0, -180.0,  -180.0/,              06NOV00.787
>      >    NLATVEG /   180,   360,   1080,   2160,   5400,   21601/,              06NOV00.788
>      >    NLONVEG /   361,   721,   2161,   4321,  10801,   43201/               06NOV00.789
66c66
< C  SOIL DATA            1      2       3       4       5                         VS_DATA2.66
---
> C  SOIL DATA            1      2       3       4       5        6                06NOV00.790
68,73c68,73
<      >        ISW /    14,    14,     14,     14,     14/,                       VS_DATA2.68
<      >     RESOLS /   1.0,   0.5, 0.1667, 0.0833,0.00833/,                       VS_DATA2.69
<      >     XLATS0 /  90.0,  90.0,   90.0,   90.0,   90.0/,                       VS_DATA2.70
<      >     XLONS0 /-180.0,-180.0, -180.0, -180.0, -180.0/,                       VS_DATA2.71
<      >   NLATSOIL /   180,   360,   1080,   2160,  21600/,                       VS_DATA2.72
<      >   NLONSOIL /   360,   720,   2160,   4320,  43200/                        VS_DATA2.73
---
>      >        ISW /    14,    14,     14,     14,     14,      14/,              06NOV00.791
>      >     RESOLS /   1.0,   0.5, 0.1667, 0.0833, 0.0333, 0.00833/,              06NOV00.792
>      >     XLATS0 /  90.0,  90.0,   90.0,   90.0,   90.0,    90.0/,              06NOV00.793
>      >     XLONS0 /-180.0,-180.0, -180.0, -180.0, -180.0,  -180.0/,              06NOV00.794
>      >   NLATSOIL /   180,   360,   1080,   2160,   5400,   21600/,              06NOV00.795
>      >   NLONSOIL /   360,   720,   2160,   4320,  10800,   43200/               06NOV00.796
===================================================================
src/water_vfr.F
diff -r3.0 -r3.2
1c1
<       SUBROUTINE WATER_VFR(IX,JX,NVF,FORCETER,  VEGEF, RAD, DS)                  WATER_VFR.1
---
>       SUBROUTINE WATER_VFR(IX,JX,NVF,FORCETER,  VEGEF, RAD, DS,IP)               06NOV00.797
9c9
<       PRINT *,'CALL WATER_VFR:  RAD=',RAD,'  DS=',DS                             WATER_VFR.9
---
>       IF(IP.EQ.1) PRINT *,'CALL WATER_VFR:  RAD=',RAD,'  DS=',DS                 06NOV00.798
===================================================================
src/watercheck.F
diff -r3.0 -r3.2
2c2
<      -                      RAD,DS)                                              WATERCHECK.2
---
>      -                      RAD,DS,IP)                                           06NOV00.799
12c12
<       PRINT *,'CALL WATERCHECK: IW=',IW,' PCNT=',PC,                             WATERCHECK.12
---
>       IF(IP.EQ.1)PRINT *,'CALL WATERCHECK: IW=',IW,' PCNT=',PC,                  06NOV00.800
24,25c24,25
< CC             PRINT *,'ADJUST POINT I,J:',I,J,                                  WATERCHECK.24
< CC     -               '  FORCETER=',FORCETER(I,J),'  LVS=',LVEGE(I,J)           WATERCHECK.25
---
>              IF(IP.EQ.1)PRINT *,'ADJUST POINT I,J:',I,J,                         06NOV00.801
>      -               '  FORCETER=',FORCETER(I,J),'  LVS=',LVEGE(I,J)             06NOV00.802
69c69
<                  PRINT 2083,I,J,NITR,RADXX                                       WATERCHECK.69
---
>                  IF(IP.EQ.1) PRINT 2083,I,J,NITR,RADXX                           06NOV00.803
===================================================================
src/xyobsll.F
diff -r3.1 -r3.3
43c43
<       IF (INEST.EQ.0) PRINT 200, IX,JX,DS                                        XYOBSLL.43
---
>       IF (INEST.EQ.0 .AND. IPRINT.EQ.1) PRINT 200, IX,JX,DS                      06NOV00.804
47c47,48
<       IF (INEST.GT.0) PRINT 201, IX,JX,DS,ICN,JCN,IRATIO                         XYOBSLL.47
---
>       IF (INEST.GT.0 .AND. IPRINT.EQ.1)                                          06NOV00.805
>      1    PRINT 201, IX,JX,DS,ICN,JCN,IRATIO                                     06NOV00.806
