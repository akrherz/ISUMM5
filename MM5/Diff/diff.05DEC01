===================================================================
CHANGES
diff -r3.17 -r3.21
11c11
< The current release is 3.4 (release-3-4, November 7, 2000).
---
> The current release is 3.5 (release-3-5, December 5, 2001).
13a14,336
> 
> Please see Diff/diff.05DEC01 for actual differences.
> 
> 1. Bug fixes:
> 
> - Correct a do loop indexing problem in MPP section of lbdyin.
> 
>   Affected file:
>   domain/boundary/lbdyin.F
> 
> - Correct a problem with overwriting existing MMOUT file when
>   using BUFFRQ at a unintended restart.
> 
>   Affected file:
>   domain/io/outtap.F
> 
> - Correct a problem with landuse value not being updated when
>   using IOVERW = 2 and OSU land-surface model.
> 
>   Affected files:
>   domain/io/rdter.F
>   domain/nest/initnest.F
> 
> - Correct two minor problems with FDDA checks: 
>   1. I4DITOT is not yet defined in line PARAM.1550
>   2. Should use runtime value for I4DTOT to do the check in line PARAM.1647
> 
>   Affected files:
>   domain/initial/param.F
> 
> - Correct an OpenMP bug when coarse domain boundary values are updated.
>   This may cause unrepeated results when OpenMP is used.
>   (Thanks to Winston Hao of New York and Wesley Jones of SGI.)
> 
>   Affected file:
>   domain/utildcpl3dwnd.F
> 
> - Correct a problem with model time (XTIME) drift problem when small
>   time step is used and integration time is long. 
>   (Thanks to Dave Stauffer of PSU and John Nielsen of TAMU for reporting.)
> 
>   Affected file:
>   dynamics/nonhydro/solve.F
> 
> - Correct a bug when dynamic initialization option is used (IDYNIN=1,
>   and DTRAMP > 0).
> 
>   Affected file:
>   fdda/grid/in4dgd.F
>   (Thanks to Dave Stauffer of PSU for reporting the problem.)
> 
> - Correct equivalent potential temperature calculation in Kuo scheme.
>   (Thanks to Charlie Cohen of NASA/Mashall)
> 
>   Affected file:
>   physics/cumulus/kuo/cupara2.F
> 
> - Move DATA statement below array declaration. This prevents an
>   error in compilation on some Linux machines. No effect on results.
>   (Change in MM5.TAR file since 5/17/01)
> 
>   Affected file:
>   physics/cumulus/grell/cup.F
> 
> - Correction to PX LSM if FRAD > 0. (Change in MM5.TAR file since 11/15/00)
> 
>   Affected file:
>   physics/pbl_sfc/pxpbl/pxpbl.F
> 
> - Correct the diagnostic calculation of outgoing short- and long-wave
>   radiation when CCM2 radiation option is used.
>   (Thanks to Edward Vizy of Cornell University)
> 
>   Affected file:
>   dynamics/nonhydro/solve.F
> 
> - Change dimensions in CCM2 routines to allow MPP compilation on PCs.
> 
>   Affected files:
>   physics/radiation/ccm2/wheneq.F, whenfgt.F
> 
> 
> 2. Changes and improvements:
> 
> - All decks are updated to use ./mm5.exe instead of mm5.exe.
> 
>   Affected files:
>   Templates/mm5.deck.*
> 
> - Allow split MMOUT files to have suffix greater than 99.
> 
>   Affected file:
>   domain/io/outtap.F
> 
> - Background diffusion is only a function of grid distance, not time step 
>   any more. This change will not affect results if 3xDX is used as the time 
>   step. If one uses either nxDX where n is greater than 3 or less than 3,
>   then the result will change. A new namelist variable CKH under namelist
>   section PPARAM may be used to obtain the same background diffusion as
>   one uses before this change (default value of CKH=1).
>   (Change based on a study by Xu et al. 2001, MWR)
> 
>   Affected file:
>   domain/initial/param.F
> 
>   old formula:   XKHZ=3.E-3*DXSQ/DT 
>   new formula:   XKHZ=CKH*DX
> 
> - Remove surface FDDA check for nest since it has been done in param.
>   Not affecting results.
> 
>   Affected files:
>   domain/nest/initnest.F
> 
> - Microphysics scheme Reisner 2 (IMPHYS=7) is updated with changes from 
>   Greg Thompson of NCAR/RAP. The detailed change is documented near 
>   the top of the subroutine exmoisg.F.
> 
>   Affected files:
>   include/jrg.incl
>   domain/initial/paramr.F
>   physics/explicit/reisner2/exmoisg.F (replaced)
> 
> - Microphysics scheme Goddard is updated with changes from Scot Braun
>   of NASA/Goddard. The detailed change is documented near 
>   the top of the subroutines godmic.F and satice.F
> 
>   Affected files:
>   physics/explicit/gsfc/godmic.F
>   physics/explicit/gsfc/satice.F (replaced)
>   physics/explicit/shared/consat.F
> 
> - Pleim-Xiu LSM model has been updated with changes from Jon Pleim.
>   This scheme should work with OpenMP now, but no MPP version yet.
> 
>   Affected files:
>   include/comicl.incl (replaced)
>   physics/pbl_sfc/pxpbl/eddymm4.F,radsfc.F,surfpx.F
>   physics/pbl_sfc/pxpbl/pxpbl.F,acm.F,sfcmm4.F,vegeland.F (replaced)
>   dynamics/nonhydro/solve.F 
> 
> - Change stability function calculation in Gayno-Seaman scheme so
>   that change in stability regime 1 and 2 becomes continous.
>   (Thanks to G. Zaengl of University of Munich, Germany.)
> 
>   Affected file:
>   physics/pbl_sfc/gspbl/gspbl.F
> 
> - Moist vertical diffusion (IMVDIF=1) in MRF and Blackadar PBL
>   is modified to reduce light precip over ocean.
> 
>   Affected files:
>   physics/pbl_sfc/hirpbl/hirpbl.F
>   physics/pbl_sfc/mrfpbl/mrfpbl.F
> 
> - Change some constants used in OSU LSM.
> 
>   Affected file:
>   physics/pbl_sfc/osusfc/hrt.F, hrtice.F, prmsoi.F
> 
> - Print-out of RAINK in OSU LSM is now rain in one timestep - 
>   not accumulated. Prints only available if set NOOUT = 0 in surfce.F.
> 
>   Affected file:
>   physics/pbl_sfc/osusfc/surfce.F
> 
> 
> 3. New in 3.5:
> 
> - New Kain-Fritsch scheme (ICUPA=8) is added. The new scheme includes
>   a shallow convection parameterization among other changes.
> 
>   Affected files:
>   configure.user
>   Util/parseconfig.c
>   include/parame, parkfcu2.incl, addrcu.incl, addrcun.incl
>   domain/initial/param.F, init.F
>   domain/io/output.F, outtap.F
>   memory/address/addall.F, addrx1c.F, addrx1n.F
>   physics/cumulus/Makefile
>   physics/cumulus/kf2/cupara8.F, kfdrive.F, kfpara2.F, dtfrz2.F,
>                       lutab.F, tp_cape.F, tpmix2.F, tpmix2dd.F (all new)
> 
>   Also shared files between old and new KF schemes were moved from
>   physics/cumulus/kf directory to physics/cumulus/shared directory.
>   These files are:  condload.F, envirtht.F, prof5.F
> 
> - Couple OSU LSM (ISOIL=2) with Eta PBL (IBLTYP=4). Output 2 m
>   temperature, mixing ratio, and 10 wind. Also FDDA option is added
>   with Eta PBL.
> 
>   Affected files:
>   domain/initial/param.F
>   domain/io/outtap.F, outts.F
>   physics/pbl_sfc/myepbl/myepbl.F, sfcdif.F
>   physics/pbl_sfc/osusfc/surfce.F
> 
> - 2 m temperature, mixing ratio, and 10 winds are output from Blackadar
>   PBL option (IBLTYP=2).
> 
>   Affected files:
>   domain/initial/param.F
>   domain/io/outtap.F, outts.F
>   physics/pbl_sfc/hirpbl/hirpbl.F
> 
> - Two options are added to compute thermal roughness length (Z_0t) for 
>   Blackadar and MRF PBL schemes. This is controlled by a new namelist 
>   variable IZ0TOPT under namelist section LPARAM.
> 
>   IZ0TOPT = 0: old method or Carlson-Boland formula.
>           = 1: Garratt formula
>           = 2: Zilitinkevich formula
> 
>   In contrast to the old method, the new options use same thermal roughness
>   length for temperature and moisture.
> 
>   Affected files:
>   include/param2.incl
>   Templates/lparam
>   domain/initial/param.F
>   domain/io/outtap.F
>   physics/pbl_sfc/hirpbl/hirpbl.F
>   physics/pbl_sfc/mrfpbl/mrfpbl.F
> 
> - A simple snow model is added. This model requires water equivalent of snow
>   depth (or WEASD) in the input, estimates snow depth change during a 
>   model simulation, and output the field SNODPTH. The option is controlled 
>   by IFSNOW = 2 in the namelist.
> 
>   Affected files:
>   domain/initial/param.F, init.F
>   domain/io/outtap.F, rdinit
>   domain/nest/initnest.F, feedbk.F
>   domain/boundary/lbdyin.F
>   dynamics/nonhydro/solve.F
>   physics/explicit/simple/exmoiss.F, lexmoiss.F
>   physics/explicit/reisner1/Makefile, exmoisr.F, lexmoisr.F
>   physics/explicit/reisner2/exmoisg.F
> 
> - Allow snow cover (SNOWC) data to be updated during a simulation if 
>   time-varying SNOWC field is available in LOWBDY file. This is similar
>   to SST update option available in V3.4.
> 
>   Affected files:
>   Run/mm5.F
>   domain/boundary/lbdyin.F
>   domain/initial/init.F
>   domain/nest/initnest.F
> 
> - Allow vegetation fraction data to be updated every 24 hours. Vegetation
>   fraction data are only used in OSU land-surface model. Prior to V3.5,
>   monthly vegetation fraction data were interpolated to the initial time,
>   and kept constant during a simulation. In this release, vegetation
>   fraction is updated every 24 hours by reinterpolating the data to the
>   new date. This is done automatically.
> 
>   Affected files:
>   include/parame, soilp.incl, soilpn.incl, addall.incl, addrx1c.incl, addrx1n.incl
>   domain/nest/initnest.F 
>   domain/io/rdinit.F, rdter.F
>   dynamics/nonhydro/solve.F
>   physics/pbl_sfc/util/Makefile, setvegfr.F (new file)
> 
> - Allow model-predicted cloud information to be used directly in CCM2
>   radiation scheme instead of relative humidity. This is controlled by
>   namelist variable ICLOUD = 1 - this is the default option in V3.5. 
>   If a user wants to use RH instead of predicted cloud in CCM2, 
>   set ICLOUD = 2.
>   (Thanks to John Cassano (now at CU) and Byrd Polar Research Center)
> 
>   Affected files:
>   domain/initial/param.F
>   domain/io/outtap.F
>   domain/nest/initnest.F
>   physics/radiation/ccm2/colmod.F, cldems.F, getdat.F, radcsw.F, radctl.F, radded.F
>   physics/radiation/sfc/sfcrad.F
>   physics/pbl_sfc/pxpbl/radsfc.F
> 
> 
> For complete new features since Version 3.1 release, please visit MM5 Web page:
> http://www.mmm.ucar.edu/mm5/mm5v3/whatisnewv3-now.html
> 
> 
> 4. MPP updates:
> 
> - README.MPP in MM5 directory is updated to reflect current status.
> 
>   Affected file:
>   README.MPP
> 
> - A batch deck for running MPP jobs on NCAR's IBM (blackforest) is
>   available. One can get the deck from ~mesouser/MM5V3 directory 
>   on blackforest, or make one by setting RUNTIME_SYSTEM = sp2
>   in configure.user file.
> 
> - The new KF scheme is ported for MPP.
> 
> - The coupling of Eta PBL and OSU LSM is tested in MPP.
> 
> - The simple snow model is tested for MPP.
> 
> - Use 'Implicit None'.
> 
>   Affected file:
>   fdda/obs/errob.F
> 
> - Bug fix for IOVERW=1 option on a Linux.
> 
> - Bug fix for Burk-Thompson PBL in MPP version.
> 
>   Affected file:
>   physics/pbl_sfc/btpbl/outpb.F 
> 
> - Bug fix for observational nudging in MPP version.
> 
>   Affected file:
>   include/fddaob.incl
> 
> ============================================================
> 
> Bug fixes and changes in V3.4:
> 
> Please see Diff/diff.07NOV00 for actual differences.
===================================================================
Makefile
97c94
< 	(cd MPP/RSL/RSL ; if [ "$(RUNTIME_SYSTEM)" = "alpha" -o "$(RUNTIME_SYSTEM)" = "alphavector" ]  ; then $(MAKE) CC=$(MCC) FC=$(MFC) UNDERSCORE=$(UNDERSCORE) $(MPP_TARGET) ; else if [ "$(RUNTIME_SYSTEM)" = "linux" ] ; then $(MAKE) LINUX_MPIHOME=$(LINUX_MPIHOME) $(MPP_TARGET) ; else $(MAKE) $(MPP_TARGET) ; fi ; fi  )
---
> 	(cd MPP/RSL/RSL ; if [ "$(RUNTIME_SYSTEM)" = "alpha" -o "$(RUNTIME_SYSTEM)" = "alphavector" ]  ; then $(MAKE) CC="$(MCC)" FC="$(MFC)" UNDERSCORE=$(UNDERSCORE) $(MPP_TARGET) ; else if [ "$(RUNTIME_SYSTEM)" = "linux" ] ; then $(MAKE) LINUX_MPIHOME=$(LINUX_MPIHOME) $(MPP_TARGET) ; else $(MAKE) $(MPP_TARGET) ; fi ; fi  )
===================================================================
README
diff -r3.4 -r3.6
3c3
< 
---
>  
86c86
< 5: execute 'mm5.deck' (create mmlif and runs mm5.exe)
---
> 5: execute './mm5.deck' (create mmlif and runs mm5.exe)
109c109
< 4: run 'mm5.deck'
---
> 4: run './mm5.deck'
===================================================================
README.MPP
diff -r3.4 README.MPP
21c21,43
< Last updated: January 10, 2000, JM/AB
---
> ---------------------------------------
> Notes on Version 3-5 release of MPP-MM5
> ---------------------------------------
> 
> I.  Fixes, enhancements for 3-5:
> 
>   A. Includes all bug fixes between the release of 3-4 (Nov. 2000) and the
>      release of 3-5 (December 2001).  See
>               http://www.mmm.ucar.edu/mm5/mpp/helpdesk.
> 
>   B. New KF (ICUPA=8) is included in MPP version.
> 
>   C. The coupling of Eta PBL and OSU LSM is included in MPP version.
> 
>   D. The simple snow model is included in MPP version.
> 
>   E. A batch deck for running MPP MM5 job on NCAR's blackforest is
>      provided. The deck can be created by setting RUNTIME_SYSTEM = sp2.
>      A deck to use OpenMP only is also available (but probably not 
>      recommended on blackforest).
> 
> 
> Last updated: July 26, 2001, JM/AB
29c51
<      Note on Version 3-3 release of MPP-MM5
---
>      Note on Version 3-4 release of MPP-MM5
95c117
< Notes on Version 3-3 release of MPP-MM5
---
> Notes on Version 3-4 release of MPP-MM5
98c120
< I.  Fixes, enhancements for 3-3:
---
> I.  Fixes, enhancements for 3-4:
100,101c122,123
<   A. Includes all bug fixes between the release of 3-2 (Sept. 1999) and
<      the release of 3-3 (Jan. 2000).  See
---
>   A. Includes all bug fixes between the release of 3-3 (Jan. 2000) and the
>      release of 3-4 (November 2000).  See
104,111c126,127
<   B. Port to Fujitsu VPP5000 (see Sec. 7f of configure.user).
< 
<   C. RRTM Radiation Scheme (FRAD=4) has been added to MPP option.
< 
<   D. Gayno-Seaman PBL works in MPP option when running with a single
<      domain.  Not working yet with nesting.
< 
<   E. Bug fix in CCM2 radiation scheme.
---
>   B. The model now allows for time-step change at a restart. Please see 
>      the README file for further details.
113,115c129,139
<   D. IFEED=3 and IFEED=4 nest feedback options both work in MPP option,
<      but IFEED=4 (heavy smoothing) is preferred since it is more
<      efficient.
---
>   C. Allow SST/SEAICE/SNOW COVER to be updated during (long) model 
>      simulations. The model also allows nests to input LOWBDY files if 
>      they are present in the Run directory. Please see the README file 
>      for further details.
> 
>   D. Add capability to output time-series of 14 2-D variables.
> 
>   E. Nest initialization with LSM and IOVERW=2 option. This allows
>      nest initialized at either the beginning or later model times to
>      have the correct land-water masked fields without getting them
>      from MMINPUT files.
129c153
< Partial testing on Winterhawk-I system at NCAR (blackforest) using AFWA
---
> Partial testing on Winterhawk-II system at NCAR (blackforest) using AFWA
139c163,169
<   B.   Test regimen on MMM Compaq Cluster
---
>     4.   SGI Origin
> 
> Tested MPP version (section 7c) on SOC case.
> 
>     5.   Sun
> 
> Tested MPP version (section 7i) on SOC case.
140a171,177
>     6.   Linux cluster with Myrinet 2000 interconnect.
> 
> Tested MPP version (section 7g) over SOC and World-Series Rainout cases on up
> to 60 processors.
> 
> 
>   B.   Test regimen on MMM Compaq Cluster
142c179
< | - All testing was done on MMM Compaq Cluster using the Storm of the
---
> | - All testing was done on MMM Compaq Cluster using the Storm of the 
144,151c181,187
< | - All tests compare non-MPP/single-thread with MPP/2x2/single-thread.
< | - All cases use MAXNES=2
< | - All cases use TIMAX=60. and TAPFRQ = 30.  (except case 1e/INCTAP)
< | - All executables were compiled with option -g for bit-for-bit comparison.
< | 
< | In the "comments" column below, "ok" means we got bit-for-bit
< | agreement between the non-MPP and MPP MMOUT_DOMAIN1 and MMOUT_DOMAIN2
< | files. The "options" column contains brief descriptions of the options
---
> | - All tests compare non-MPP/single-thread with MPP/single-thread.
> | - All cases use MAXNES=2 unless otherwise stated.
> | - All cases use TIMAX=60. and TAPFRQ = 30. unless otherwise stated.
> | - All executables were compiled with option -g for bit-for-bit comparison,
> |   and with -DBIT_FOR_BIT_KLUDGE when IBLTYP=2 or IBLTYP=6 were used. 
> |
> | The "options" column contains brief descriptions of the options
156,172c192,223
< | 
< | Note that (test 2a) Gayno Seaman won't run with a nest. We will work
< | on fixing this ASAP.
< | 
< | test  options                  comments
< | ----  -------                  --------
< | 1a    (Blackadar,AFWA)         01/06/00 ok
< | 
< | 1b    (MRF,AFWA)               01/06/00 ok
< | 
< | 1c    (MRF,ISOIL=2)            01/07/00 ok
< | 
< | 1d    (GS,AFWA)                GS+IMPHYS=5 not yet supported
< | 
< | 1e Incremental output:
< |       (INCTAP)                 01/07/00 ok
< |       (BUFFRQ)                 01/07/00 ok
---
> |
> | The number of MPI processes and threads used is recorded in the "-np" and
> | "omp" columns, respectively. 
> | 
> | In the "date" column is the date (mmyy) that bit-for-bit agreement between
> | the non-MPP and MPP MMOUT_DOMAIN1 and MMOUT_DOMAIN2 was confirmed, unless
> | otherwise stated in the "comments" column.
> | 
> | 
> | test  options            -np omp date comments
> | ----  -------            --- --- ---- --------
> | 1a    (Blackadar,AFWA)    4   4  1020 TIMAX=360.       (-DBIT_FOR_BIT_KLUDGE) 
> | 
> | 1b    (MRF,AFWA)          4   4  1026 TIMAX=180., w&w/o LOWBDY_DOMAIN2
> |                           4   2  1106 -Tested restart with different DT.
> | 
> | 1c    Land Surface Model                  
> |       (MRF,ISOIL=2)       4   2  1025 IOVERW=0, w&w/o LOWBDY_DOMAIN2
> |                                       -Non-MPP v3.4 mods required MPP mods to:
> |                                        mp_stotndt.F,define_comms.F,packdown.incl,
> |                                        mpp_initnest_30.incl,bcast_size.F
> |                                         
> |       (MRF,ISOIL=2)       4   1  1102 IOVERW=2, no MMINPUT_DOMAIN2,LOWBDY_DOMAIN2
> |                                       - required fix to nestlsm.F
> | 
> | 1d    (GS,AFWA)          12   1   "   (-DBIT_FOR_BIT_KLUDGE)
> | 
> | 1e    (PX,AFWA)           -   -  ---- New, not yet working in MPP.
> | 
> | 1e    Incr. output:
> |       (INCTAP,noFDDA)     4   2  1027      
> |       (BUFFRQ,noFDDA)     4   2  1027         
175,179c226,228
< |       (MRF)                    01/07/00 ok
< |       (GS)                     01/06/00 bug w/nesting on: TKETENDADV goes
< |                                         bad after DIFFU.
< |       (GS,MAXNES=1)            01/07/00 ok
< | 
---
> |       (MRF)               6   2  1026 w/o LBDYIN_DOMAIN2
> |       (GS)                6   2  1026 w/o LBDYIN_DOMAIN2  (-DBIT_FOR_BIT_KLUDGE)
> |            
181,185c230,234
< |       (KF,MRF,AFWA)            01/07/00 ok
< |       (BM,MRF,AFWA)            01/07/00 ok
< |       (FC,MRF,AFWA)            01/07/00 ok
< |       (KUO,MRF,AFWA)           01/07/00 ok
< | 
---
> |       (KF,MRF,AFWA)       4   2  1027 ICUPA=6,w/o LOWBDYIN_DOMAIN2  
> |       (BM,MRF,AFWA)       4   2  1027 ICUPA=7,with LOWBDYIN_DOMAIN2 
> |       (FC,MRF,AFWA)       4   2  1027 ICUPA=5,with LOWBDYIN_DOMAIN2 (bugfix)  
> |       (KUO,MRF,AFWA)      4   2  1027 ICUPA=2,w/o LOWBDYIN_DOMAIN2  
> |   
187,188c236,237
< |       (CCM2, 1a)               01/07/00 ok
< |       (RRTM)                   01/06/00 ok (JM)
---
> |       (CCM2, 1a)          4   2  1027 w/o LOWBDYIN_DOMAIN2 (-DBIT_FOR_BIT_KLUDGE)   
> |       (RRTM)              4   3  1027 w/o LOWBDYIN_DOMAIN2 (-DBIT_FOR_BIT_KLUDGE)  
191,192c240,245
< |       (IOVERW=1)               01/07/00 ok
< |       (IOVERW=2)               01/07/00 ok
---
> |       (IOVERW=1)          6   2  1027 w/o LOWBDY_DOMAIN2         
> |       (IOVERW=2)          6   1  1019 TIMAX=780.,ISSTVAR=1 w&w/o LOWBDY_DOMAIN2,
> |                                       -Tested w&w/o restart option (at TIMAX=360).
> |                                       -Non-MPP v3.4 mods required MPP mods to:
> |                                        lbdyin.F,mpp_lbdyin_00.incl,mpp_lbdyin_00.incl, 
> |                                        define_comms.F,rslcom.inc,rsl_bcast.c
194c247
<  
---
> 
206c259
< All land surface options, including the new OSU LSM option (ISOIL=2)
---
> All land surface options, including the OSU LSM option (ISOIL=2)
211,212c264,265
< Gridded nudging (FDDAGD=1) works.  Obs nudging (FDDAOB=1) does not yet
< work.
---
> Gridded nudging (FDDAGD=1) works.  Obs nudging (FDDAOB=1) is not well
> tested.
216,218c269,270
< Blackadar (IBLTYP=2), MRF (IBLTYP=5) options work.  Gayno-Seaman works
< except with 2-way nesting.  Other PBL options should work but have not
< been tested.
---
> Blackadar (IBLTYP=2), MRF (IBLTYP=5), and Gayno-Seaman (IBLTYP=6) options
> work. Other PBL options should work but have not been tested.
431,433c483,486
<   2.  If you are testing with the Blackadar PBL scheme (HIRPBL), edit
<       the file physics/pbl_sfc/hirpbl/hirpbl.F and insert this line
<       into the beginning of the file:
---
>   2.  If you are testing with the Blackadar PBL scheme (HIRPBL), or the
>       Gayno-Seaman PBL scheme (GSPBL), define BIT_FOR_BIT_KLUDGE in the
>       CPP flags. You can either do this directly, by inserting the CPP
>       directive:
435a489,496
> 
>       at the beginning of file physics/pbl_sfc/hirpbl/hirpbl.F or
>       physics/pbl_sfc/gspbl/gspbl.F, respectively. Or you can simply
>       add the CPP flag:
> 
>           -DBIT_FOR_BIT_KLUDGE
> 
>       in your configure.user file.
===================================================================
configure.user
diff -r3.39 -r3.43
305c305
< #                                   - None,Kuo,Grell,AS,FC,KF,BM - 1,2,3,4,5,6,7
---
> #                                   - None,Kuo,Grell,AS,FC,KF,BM,KF2 - 1,2,3,4,5,6,7,8
541c541
< #LDOPTIONS = $(OMP)
---
> #LDOPTIONS = $(SPECIAL_OMP)
===================================================================
configure.user.linux
diff -r3.8 -r3.9
107c107
< #                                   - None,Kuo,Grell,AS,FC,KF,BM - 1,2,3,4,5,6,7
---
> #                                   - None,Kuo,Grell,AS,FC,KF,BM,KF2 - 1,2,3,4,5,6,7,8
===================================================================
Run/mm5.F
diff -r3.6 mm5.F
196c196,197
<           CALL LBDYIN(1,TBDYLBE,BDYLTIM,BDYLFRQ,ISOIL,IACTIV,IL,JL)              07NOV00.3
---
>           CALL LBDYIN(1,TBDYLBE,BDYLTIM,BDYLFRQ,ISOIL,IACTIV,                    05DEC01.1
>      -     IFSNOW,IL,JL)                                                         05DEC01.2
202c203,204
<               CALL LBDYIN(L,TBDYLBE,BDYLTIM,BDYLFRQ,ISOIL,IACTIV,IL,JL)          07NOV00.9
---
>               CALL LBDYIN(L,TBDYLBE,BDYLTIM,BDYLFRQ,ISOIL,IACTIV,                05DEC01.3
>      -          IFSNOW,IL,JL)                                                    05DEC01.4
===================================================================
Templates/lparam
diff -r3.4 -r3.5
25a26,27
>  IZ0TOPT= 0,                            ;thermal roughness option in IBLTYP = 2,5. 
>                                         ;0 - old option, 1 - Garratt, 2 - Zilitinkevich
===================================================================
Templates/mm5.deck.cray
diff -r3.8 -r3.10
247c247
< #                                     6=Gayno-Seaman
---
> #                                     6=Gayno-Seaman,7=Pleim-Xiu
252c252
< #                                     0=none,1=simple,2=cloud,3=ccm2
---
> #                                     0=none,1=simple,2=cloud,3=ccm2,4=rrtm
257a258
> #                                     3=Pleim-Xiu LSM (IBLTYP=7 only)
394,396d394
<    if (( $FDDAsw == Anly ) || ( $FDDAsw == Both )) then
<       cp MMINPUT_DOMAIN$NUMFIL MMINPUT2_DOMAIN$NUMFIL
<    endif
403d400
<          if ( -e MMINPUT2_DOMAIN$NUMFIL ) rm MMINPUT2_DOMAIN$NUMFIL
406a404,406
>    if (( $FDDAsw == Anly ) || ( $FDDAsw == Both ) || ( -e MMINPUT_DOMAIN$NUMFIL )) then
>       cp MMINPUT_DOMAIN$NUMFIL MMINPUT2_DOMAIN$NUMFIL
>    endif
450c450
<    assign -a LOWBDY_DOMAIN1  -Ff77 $Option  u:8
---
>    assign -a LOWBDY_DOMAIN1  -Ff77 $Option  u:21
455a456,459
>       endif
>       if ( $NUMFIL >= 2 ) then
>          if ( -e LOWBDY_DOMAIN$NUMFIL ) assign -a LOWBDY_DOMAIN$NUMFIL -Ff77 $Option  u:2$NUMFIL
>          if ( -e TERRAIN_DOMAIN$NUMFIL ) assign -a TERRAIN_DOMAIN$NUMFIL -Ff77 $Option  u:1$NUMFIL
===================================================================
Templates/mm5.deck.cray-ia-bsh
diff -r3.4 -r3.5
89c89
< (timex mm5.exe) >&! mm5.print.out
---
> (timex ./mm5.exe) >&! mm5.print.out
===================================================================
Templates/mm5.deck.dec
diff -r3.1 -r3.2
85c85
< timex mm5.exe > mm5.print.out 2>&1
---
> timex ./mm5.exe > mm5.print.out 2>&1
===================================================================
Templates/mm5.deck.decmpp
diff -r3.1 -r3.2
85c85
< mpirun mm5.mpp 
---
> mpirun ./mm5.mpp 
===================================================================
Templates/mm5.deck.hp
diff -r3.1 -r3.2
85c85
< timex mm5.exe > mm5.print.out 2>&1
---
> timex ./mm5.exe > mm5.print.out 2>&1
===================================================================
Templates/mm5.deck.hp-batch
diff -r3.1 -r3.2
443c443
< set EXE = mm5.exe
---
> set EXE = ./mm5.exe
===================================================================
Templates/mm5.deck.hp-mpp
diff -r3.1 -r3.2
85,86c85,86
< time mpirun -np 16 mm5.mpp
< #time mpirun -np 32 mm5.mpp
---
> time mpirun -np 16 ./mm5.mpp
> #time mpirun -np 32 ./mm5.mpp
===================================================================
Templates/mm5.deck.ibm
diff -r3.1 -r3.2
85c85
< timex mm5.exe > mm5.print.out 2>&1
---
> timex ./mm5.exe > mm5.print.out 2>&1
===================================================================
Templates/mm5.deck.linuxPGF77
diff -r3.4 -r3.5
102c102
< time mm5.exe > mm5.print.out 2>&1
---
> time ./mm5.exe > mm5.print.out 2>&1
===================================================================
Templates/mm5.deck.sgi
diff -r3.2 -r3.3
102c102
< timex mm5.exe > mm5.print.out 2>&1
---
> timex ./mm5.exe > mm5.print.out 2>&1
===================================================================
Templates/mm5.deck.sun
diff -r3.2 -r3.3
85c85
< time mm5.exe > mm5.print.out 2>&1
---
> time ./mm5.exe > mm5.print.out 2>&1
===================================================================
Templates/mm5.deck.vpp
diff -r3.1 -r3.2
85c85
< timex mm5.mpp > mm5.print.out 2>&1
---
> timex ./mm5.mpp > mm5.print.out 2>&1
===================================================================
Util/makedeck.csh
diff -r3.1 -r3.2
62,63c62,64
<   echo "Making mm5.deck for MPP"
<   set sufx = "sp2"
---
>   echo "Making mm5.deck for IBM MPP"
>   set sufx = "ibm-mpp"
> # set sufx = "ibm-omp"
===================================================================
Util/parseconfig.c
diff -r3.4 -r3.5
193a194,197
> 		} else if (icupa[j] == 8) {
> 		    if (id8++ < 1) 
> 			fprintf(fd, "#define ICUPA8 1\n");
> 		    kffc = 1;
===================================================================
domain/boundary/lbdyin.F
diff -r3.17 lbdyin.F
2c2
<      -     ,IX,JX)                                                               LBDYIN.2
---
>      -     ,IFSNOW,IX,JX)                                                        05DEC01.5
33a34
> #     include <landuse.incl>                                                     05DEC01.6
41,42c42,43
<       INTEGER IACTIV(MAXSES)                                                     LBDYIN.41
<       INTEGER I,J,NC,NN,NIV                                                      LBDYIN.42
---
>       INTEGER IACTIV(MAXSES),IFSNOW(MAXSES)                                      05DEC01.7
>       INTEGER I,J,NC,NN,NIV,IS                                                   05DEC01.8
150c151
<             DO J = J, MJX                                                        LBDYIN.150
---
>             DO J = 1, MJX                                                        05DEC01.9
167c168
<             DO J = J, MJX                                                        LBDYIN.167
---
>             DO J = 1, MJX                                                        05DEC01.10
180c181,182
<           ELSE IF(NDIM.EQ.2.AND.NAME(1:8).EQ.'SNOWCOVR')THEN                     LBDYIN.180
---
>           ELSE IF(NDIM.EQ.2.AND.NAME(1:8).EQ.'SNOWCOVR'                          05DEC01.11
>      +            .AND.ISOIL.NE.2)THEN                                           05DEC01.12
184c186
<             DO J = J, MJX                                                        LBDYIN.184
---
>             DO J = 1, MJX                                                        05DEC01.13
202c204
<             DO J = J, MJXL                                                       LBDYIN.202
---
>             DO J = 1, MJXL                                                       05DEC01.14
282c284
<           IF(IFOUNDSNC.NE.1)THEN                                                 LBDYIN.282
---
>           IF(IFOUNDSNC.NE.1.AND.ISOIL.EQ.2)THEN                                  05DEC01.15
290a293
>         PRINT *, 'UPDATING SST FOR DOMAIN ',INEST                                05DEC01.16
301a305,324
>       IF(IFOUNDSNC.EQ.1.AND.IFSNOW(INEST).EQ.1.AND.ISOIL.NE.2)THEN               05DEC01.17
>         PRINT *, 'UPDATING SNOW COVER FOR DOMAIN ',INEST                         05DEC01.18
> C   SNOW COVER ADJUSTMENT TO LAND-USE PROPERTIES                                 05DEC01.19
>         DO J=1,JLX                                                               05DEC01.20
>           DO I=1,ILX                                                             05DEC01.21
>             IS=INT(SATBRT(I,J)+0.001)                                            05DEC01.22
>             IF(XLAND(I,J).GT.1.5)SNOWC(I,J)=-0.01                                05DEC01.23
>             ALB(I,J)=ALBD(IS,ISN)/100.                                           05DEC01.24
>             THC(I,J)=THERIN(IS,ISN)/100.                                         05DEC01.25
>             EMISS(I,J)=SFEM(IS,ISN)                                              05DEC01.26
>             MAVAIL(I,J)=SLMO(IS,ISN)                                             05DEC01.27
>             IF(SNOWC(I,J).GT.0.)THEN                                             05DEC01.28
>               ALB(I,J)=ALB(I,J)+SCFX(IS)*ALB(I,J)                                05DEC01.29
>               THC(I,J)=THERIN(ISICE,ISN)/100.                                    05DEC01.30
>               EMISS(I,J)=SFEM(ISICE,ISN)                                         05DEC01.31
>               MAVAIL(I,J)=SLMO(ISICE,ISN)                                        05DEC01.32
>             ENDIF                                                                05DEC01.33
>           ENDDO                                                                  05DEC01.34
>         ENDDO                                                                    05DEC01.35
>       ENDIF                                                                      05DEC01.36
328a352
>             PRINT *, 'INTERPOLATING SST FOR DOMAIN ',NN                          05DEC01.37
349a374,393
>             IF(IFSNOW(NN).EQ.1.AND.ISOIL.NE.2)THEN                               05DEC01.38
> C   SNOW COVER ADJUSTMENT TO LAND-USE PROPERTIES. ISOIL=2 WILL IGNORE THIS.      05DEC01.39
>             PRINT *, 'INTERPOLATING SNOW COVER FOR DOMAIN ',NN                   05DEC01.40
>               DO J=1,JNLX                                                        05DEC01.41
>                 DO I=1,INLX                                                      05DEC01.42
>                   IS=INT(SATBRN(I,J)+0.001)                                      05DEC01.43
>                   IF(XLANDN(I,J).GT.1.5)SNOWCN(I,J)=-0.01                        05DEC01.44
>                   ALBN(I,J)=ALBD(IS,ISN)/100.                                    05DEC01.45
>                   THCN(I,J)=THERIN(IS,ISN)/100.                                  05DEC01.46
>                   EMISSN(I,J)=SFEM(IS,ISN)                                       05DEC01.47
>                   MAVAIN(I,J)=SLMO(IS,ISN)                                       05DEC01.48
>                   IF(SNOWCN(I,J).GT.0.)THEN                                      05DEC01.49
>                     ALBN(I,J)=ALBN(I,J)+SCFX(IS)*ALBN(I,J)                       05DEC01.50
>                     THCN(I,J)=THERIN(ISICE,ISN)/100.                             05DEC01.51
>                     EMISSN(I,J)=SFEM(ISICE,ISN)                                  05DEC01.52
>                     MAVAIN(I,J)=SLMO(ISICE,ISN)                                  05DEC01.53
>                   ENDIF                                                          05DEC01.54
>                 ENDDO                                                            05DEC01.55
>               ENDDO                                                              05DEC01.56
>             ENDIF                                                                05DEC01.57
===================================================================
domain/initial/init.F
diff -r3.27 init.F
33a34
> #     include <parkfcu2.incl>                                                    05DEC01.58
611c612,613
<       CALL LBDYIN(1,TBDYLBE,BDYLTIM,BDYLFRQ,ISOIL,IACTIV,IX,JX)                  07NOV00.86
---
>       CALL LBDYIN(1,TBDYLBE,BDYLTIM,BDYLFRQ,ISOIL,IACTIV,                        05DEC01.59
>      -     IFSNOW,IX,JX)                                                         05DEC01.60
632a635,663
> C  CORRECT GROUND TEMPERATURE IN SNOW LAYERS (FACTOR 0.01 CONVERTS TO M)         05DEC01.61
>       IF(IFSNOW(1).EQ.2.AND.ISOIL.EQ.1)THEN                                      05DEC01.62
>       DO J=1,JLX                                                                 05DEC01.63
>         DO I=1,ILX                                                               05DEC01.64
>           IF(SNOWC(I,J)*0.01.GT.ZS(1).AND.TSLA(I,J,1).GT.273.16)THEN             05DEC01.65
>              TSLA(I,J,1)=273.16                                                  05DEC01.66
>              TSLB(I,J,1)=273.16                                                  05DEC01.67
>              TGA(I,J)=273.16                                                     05DEC01.68
>              TGB(I,J)=273.16                                                     05DEC01.69
>           ENDIF                                                                  05DEC01.70
>           IF(SNOWC(I,J)*0.01.GT.ZS(2).AND.TSLA(I,J,2).GT.273.16)THEN             05DEC01.71
>              TSLA(I,J,2)=273.16                                                  05DEC01.72
>              TSLB(I,J,2)=273.16                                                  05DEC01.73
>           ENDIF                                                                  05DEC01.74
>           IF(SNOWC(I,J)*0.01.GT.ZS(3).AND.TSLA(I,J,3).GT.273.16)THEN             05DEC01.75
>              TSLA(I,J,3)=273.16                                                  05DEC01.76
>              TSLB(I,J,3)=273.16                                                  05DEC01.77
>           ENDIF                                                                  05DEC01.78
>           IF(SNOWC(I,J)*0.01.GT.ZS(4).AND.TSLA(I,J,4).GT.273.16)THEN             05DEC01.79
>              TSLA(I,J,4)=273.16                                                  05DEC01.80
>              TSLB(I,J,4)=273.16                                                  05DEC01.81
>           ENDIF                                                                  05DEC01.82
>           IF(SNOWC(I,J)*0.01.GT.ZS(5).AND.TSLA(I,J,5).GT.273.16)THEN             05DEC01.83
>              TSLA(I,J,5)=273.16                                                  05DEC01.84
>              TSLB(I,J,5)=273.16                                                  05DEC01.85
>           ENDIF                                                                  05DEC01.86
>         ENDDO                                                                    05DEC01.87
>       ENDDO                                                                      05DEC01.88
>       ENDIF                                                                      05DEC01.89
641c672,683
<           IF(IKFFC.EQ.1)NCA(I,J)=-100                                            INIT.758
---
>           IF(IKFFC.EQ.1)then                                                     05DEC01.90
>             NCA(I,J)=-100                                                        05DEC01.91
>             NCAD(I,J)=-100                                                       05DEC01.92
>             TNCA(i,j)=0.                                                         05DEC01.93
>             PSRC(I,J)=0.                                                         05DEC01.94
>             PCLB(I,J)=0.                                                         05DEC01.95
>             UMFB(I,J)=0.                                                         05DEC01.96
>             SPSRC(I,J)=0.                                                        05DEC01.97
>             SPCLB(I,J)=0.                                                        05DEC01.98
>             SUMFB(I,J)=0.                                                        05DEC01.99
>             CIN(I,J)=0.                                                          05DEC01.100
>           ENDIF                                                                  05DEC01.101
747a790,797
> c...KF2 mods...                                                                  05DEC01.102
>       TIMKFDIAG =FRQKFDIAG                                                       05DEC01.103
>   725 IF(NINT(TIMKFDIAG/DTMIN).GT.KTAU)GOTO 726                                  05DEC01.104
>       TIMKFDIAG=TIMKFDIAG+FRQKFDIAG                                              05DEC01.105
>       GOTO 725                                                                   05DEC01.106
>   726 CONTINUE                                                                   05DEC01.107
>       TIMKFDIAG=TIMKFDIAG-0.000001                                               05DEC01.108
> c...end of KF2 mods                                                              05DEC01.109
===================================================================
domain/initial/param.F
diff -r3.43 param.F
31a32
> #     include <parkfcu2.incl>                                                    05DEC01.110
72a74
>       REAL CKH                                                                   05DEC01.111
114c116
<      &        ,ISMRD,NUDGE,IFGROW                                                07NOV00.109
---
>      &        ,ISMRD,NUDGE,IFGROW,IZ0TOPT                                        05DEC01.112
125c127
<      5       SOILFAC                                                             07NOV00.111
---
>      5       SOILFAC,CKH,FRQKFDIAG                                               05DEC01.113
221c223,225
< C              CONSIDERED, WHEN ISFFLX=1 AND ITGFLG=1.                           PARAM.206
---
> C              CONSIDERED AT SURFACE, WHEN ISFFLX=1 AND ITGFLG=1.                05DEC01.114
> C              IT IS ALSO USED TO ADD CLOUD EFFECT ON ATMOSPHERIC                05DEC01.115
> C              RADIATION FOR IFRAD = 2,3 AND 4.                                  05DEC01.116
223c227,229
< C              = 1 ; YES.                                                        PARAM.208
---
> C              = 1 ; YES. FOR SFC RAD, RH IS USED. FOR ATMOS RAD,                05DEC01.117
> C                CLOUD WATER/ICE EFFECT IS CONSIDERED.                           05DEC01.118
> C              = 2 ; CLOUD EFFECT USING RH IN CCM2 ONLY.                         05DEC01.119
234a241,245
> C                                                                                05DEC01.120
> C     IZ0TOPT: THERMAL ROUGHNESS LENGTH OPTION                                   05DEC01.121
> C              = 0 ; CARLSON-BOLAND (OLD METHOD: VISCOUS SUB-LAYER FOR Q ONLY)   05DEC01.122
> C              = 1 ; GARRATT FORMULA FOR THERMAL ROUGHNESS (T AND Q)             05DEC01.123
> C              = 2 ; ZILITINKEVICH FORMULA FOR THERMAL ROUGHNESS (T AND Q)       05DEC01.124
239c250,251
< C              = 1 ; YES                                                         PARAM.220
---
> C              = 1 ; YES, SNOWC IS A FIXED FLAG THRU FCST                        05DEC01.125
> C              = 2 ; YES, SNOWC CONTAINS PREDICTED LIQUID AMOUNT IN MM           05DEC01.126
745a758
>       IZ0TOPT=0                                                                  05DEC01.127
913c926,930
<       SOILFAC=1.0                                                                07NOV00.169
---
>       SOILFAC=1.25                                                               05DEC01.128
> C CONSTANT FOR BACKGROUND HORIZONTAL DIFFUSION (M/S)                             05DEC01.129
>       CKH=1.0                                                                    05DEC01.130
> C TIME FREQUENCY IN MINUTES FOR KF2 DIAGNOSTIC OUTPUT                            05DEC01.131
>       FRQKFDIAG=60.                                                              05DEC01.132
1090a1108
>       IMOIAVI = 0                                                                05DEC01.133
1466a1485,1489
> #ifdef ICUPA8                                                                    05DEC01.134
>       I_ICUPA(8)=1                                                               05DEC01.135
> #else                                                                            05DEC01.136
>       I_ICUPA(8)=0                                                               05DEC01.137
> #endif                                                                           05DEC01.138
1627c1650
<       IF(ICUPA(1).GT.7)THEN                                                      PARAM.1481
---
>       IF(ICUPA(1).GT.8)THEN                                                      05DEC01.139
1684,1685c1707,1708
<       IF(IBLTYP(1).NE.5.AND.ISOIL.EQ.2)THEN                                      PARAM.1537
<         PRINT *,'ERROR: ISOIL=2 REQUIRES IBLTYP=5'                               PARAM.1538
---
>       IF(IBLTYP(1).NE.5.AND.IBLTYP(1).NE.4.AND.ISOIL.EQ.2)THEN                   05DEC01.140
>         PRINT *,'ERROR: ISOIL=2 REQUIRES IBLTYP=4 OR 5'                          05DEC01.141
1703a1727,1734
>       IF(IFRAD.EQ.3.AND.(IMOIST(1).NE.2.AND.ICLOUD(1).EQ.1))THEN                 05DEC01.142
>         PRINT *,'ERROR: IFRAD=3 AND ICLOUD=1 REQUIRE IMPHYS>3'                   05DEC01.143
>         IWARN=IWARN+1                                                            05DEC01.144
>       ENDIF                                                                      05DEC01.145
>       IF(IFRAD.NE.3.AND.ICLOUD(1).EQ.2)THEN                                      05DEC01.146
>         PRINT *,'ERROR: ICLOUD=2 ONLY WORKS WITH IFRAD = 3'                      05DEC01.147
>         IWARN=IWARN+1                                                            05DEC01.148
>       ENDIF                                                                      05DEC01.149
1708,1709c1739,1740
<       IF(IBLTYP(1).NE.2.AND.(IBLTYP(1).LT.5.OR.IBLTYP(1).GT.7).AND.(             07NOV00.250
<      +  I4DTOT.GT.0.OR.I4DITOT.GT.0))THEN                                        PARAM.1550
---
>       IF(IBLTYP(1).NE.2.AND.(IBLTYP(1).LT.4.OR.IBLTYP(1).GT.7).AND.              05DEC01.150
>      +  I4DTOT.GT.0)THEN                                                         05DEC01.151
1711c1742
<         PRINT *,'ERROR: FDDA REQUIRES IBLTYP=2, 5, 6,or 7'                       07NOV00.251
---
>         PRINT *,'ERROR: FDDA REQUIRES IBLTYP=2, 4, 5, 6, OR 7'                   05DEC01.152
1712a1744,1748
>       IF(IFSNOW(1).EQ.2.AND.IMPHYS(1).NE.4.AND.IMPHYS(1).NE.5                    05DEC01.153
>      -       .AND.IMPHYS(1).NE.7)THEN                                            05DEC01.154
>         PRINT *,'ERROR: IFSNOW=2 REQUIRES IMPHYS=4,5 OR 7'                       05DEC01.155
>         IWARN=IWARN+1                                                            05DEC01.156
>       ENDIF                                                                      05DEC01.157
1751c1787
<           IF(ICUPA(N).GT.7)THEN                                                  PARAM.1592
---
>           IF(ICUPA(N).GT.8)THEN                                                  05DEC01.158
1787,1788c1823,1824
<           IF(IBLTYP(N).NE.5.AND.ISOIL.EQ.2)THEN                                  PARAM.1627
<             PRINT *,'ERROR: ISOIL=2 REQUIRES IBLTYP=5'                           PARAM.1628
---
>           IF(IBLTYP(N).NE.5.AND.IBLTYP(N).NE.4.AND.ISOIL.EQ.2)THEN               05DEC01.159
>             PRINT *,'ERROR: ISOIL=2 REQUIRES IBLTYP=4 OR 5'                      05DEC01.160
1806a1843,1855
>           IF(IFRAD.EQ.3.AND.(IMOIST(N).NE.2.AND.ICLOUD(N).EQ.1))THEN             05DEC01.161
>             PRINT *,'ERROR: IFRAD=3 AND ICLOUD=1 REQUIRE IMPHYS>3'               05DEC01.162
>             IWARN=IWARN+1                                                        05DEC01.163
>           ENDIF                                                                  05DEC01.164
>           IF(IFRAD.NE.3.AND.ICLOUD(N).EQ.2)THEN                                  05DEC01.165
>             PRINT *,'ERROR: ICLOUD=2 ONLY WORKS WITH IFRAD = 3'                  05DEC01.166
>             IWARN=IWARN+1                                                        05DEC01.167
>           ENDIF                                                                  05DEC01.168
>           IF(IFSNOW(N).EQ.2.AND.IMPHYS(N).NE.4.AND.IMPHYS(N).NE.5                05DEC01.169
>      -           .AND.IMPHYS(N).NE.7)THEN                                        05DEC01.170
>             PRINT *,'ERROR: IFSNOW=2 REQUIRES IMPHYS=4,5 OR 7'                   05DEC01.171
>             IWARN=IWARN+1                                                        05DEC01.172
>           ENDIF                                                                  05DEC01.173
1818,1819c1867,1868
<           IF(IBLTYP(N).NE.2.AND.IBLTYP(N).NE.5.AND.IBLTYP(N).NE.6.AND.           PARAM.1646
<      +      IFDDA.EQ.1)THEN                                                      PARAM.1647
---
>           IF(IBLTYP(N).NE.2.AND.(IBLTYP(N).LT.4.OR.IBLTYP(N).GT.7).AND.          05DEC01.174
>      +      I4DTOT.GT.0)THEN                                                     05DEC01.175
1821c1870
<             PRINT *,'ERROR: FDDA REQUIRES IBLTYP=2, 5, OR 6'                     PARAM.1649
---
>             PRINT *,'ERROR: FDDA REQUIRES IBLTYP=2, 4, 5, 6, OR 7'               05DEC01.176
2091c2140,2143
<       XKHZ=3.E-3*DXSQ/DT                                                         PARAM.1906
---
> C      XKHZ=3.E-3*DXSQ/DT                                                        05DEC01.177
> C     NEW CALCULATION MAKES BACKGROUND DIFFUSION INDEPENDENT OF TIMESTEP         05DEC01.178
> C     (XU ET AL., MWR, 2001, 502-516)                                            05DEC01.179
>       XKHZ=CKH*DX                                                                05DEC01.180
2232c2284
< #if defined(ICUPA6) || defined(ICUPA7)
---
> #if defined(ICUPA6) || defined(ICUPA7) || defined(ICUPA8)
2237a2290,2292
> #ifdef ICUPA8                                                                    05DEC01.182
>       CALL LUTAB                                                                 05DEC01.183
> #endif                                                                           05DEC01.184
2364c2419
<         IF(IFDRY.EQ.1)PRINT1029                                                  PARAM.2160
---
>         IF(IFDRY.EQ.1)PRINT1029,IFDRY                                            05DEC01.185
2376a2432
>       IF(ICUPA(1).EQ.8)PRINT1049,ICUPA(1)                                        05DEC01.186
2413a2470,2474
>       IF(IBLTYP(1).EQ.2.OR.IBLTYP(1).EQ.5)THEN                                   05DEC01.187
>         IF(IZ0TOPT.EQ.0)PRINT 1161                                               05DEC01.188
>         IF(IZ0TOPT.EQ.1)PRINT 1162                                               05DEC01.189
>         IF(IZ0TOPT.EQ.2)PRINT 1163                                               05DEC01.190
>       ENDIF                                                                      05DEC01.191
2416a2478
>       IF(IFSNOW(1).EQ.2)PRINT1175                                                05DEC01.192
2423a2486
>       IF(ICLOUD(1).EQ.2.AND.IFRAD.EQ.3)PRINT1152                                 05DEC01.193
2497a2561,2562
>  1049 FORMAT(/' ICUPA  = ',I3,'  KAIN/FRITSCH 2 CONVECTIVE ',                    05DEC01.194
>      1 'PARAM SCHEME WITH SHALLOW CONVECTION OPTION.')                           05DEC01.195
2544a2610
>  1152 FORMAT(12X,'THE CLOUD EFFECT IN CCM2 IS CONSIDERED THROUGH RH.')           05DEC01.196
2548a2615,2617
>  1161 FORMAT(12X,'VISCOUS SUB-LAYER FOR MOISTURE: CARLSON-BOLAND')               05DEC01.197
>  1162 FORMAT(12X,'THERMAL ROUGHNESS LENGTH FROM GARRATT FORMULA')                05DEC01.198
>  1163 FORMAT(12X,'THERMAL ROUGHNESS LENGTH FROM ZILITINKEVICH FORMULA')          05DEC01.199
2556c2625,2626
<  1171 FORMAT(12X,'SNOW EFFECT IS CONSIDERED.')                                   PARAM.2339
---
>  1171 FORMAT(12X,'IFSNOW=1: SNOW EFFECT IS CONSIDERED.')                         05DEC01.200
>  1175 FORMAT(12X,'IFSNOW=2: SNOW COVER AMOUNT IS PREDICTED.')                    05DEC01.201
===================================================================
domain/initial/paramr.F
diff -r3.0 paramr.F
33a34,35
> C RON2 IS USED IN REISNER GRAUPEL SCHEME INSTEAD OF RON                          05DEC01.202
>       RON2=1.E10                                                                 05DEC01.203
136c138,139
<       GI=3.+BG                                                                   PARAMR.136
---
> C     GI=3.+BG                                                                   05DEC01.204
>       GI=4.+BG                                                                   05DEC01.205
141c144,145
<       GI=3.+BG                                                                   PARAMR.141
---
> C     GI=3.+BG                                                                   05DEC01.206
>       GI=4.+BG                                                                   05DEC01.207
===================================================================
domain/io/output.F
diff -r3.5 output.F
10a11
> #     include <parkfcu2.incl>                                                    05DEC01.208
57c58
<      1       ' MINUTES FOR DOMAIN ',I2,'. IXTIMR = ',I5)                         OUTPUT.58
---
>      1       ' MINUTES FOR DOMAIN ',I2,'. IXTIMR = ',I6)                         05DEC01.209
98a100,114
> C...KF2 mods...zero out KF diagnostics every FRQKFDIAG minutes...                05DEC01.210
>       IF(KTAU.GT.NINT(TIMKFDIAG/DTMIN))THEN                                      05DEC01.211
> c     IF(XTIME.GT.TIMKFDIAG)THEN                                                 05DEC01.212
>         DO 774 J = 1,MJX                                                         05DEC01.213
>         DO 774 I = 1,MIX                                                         05DEC01.214
>           TNCA(I,J) = 0.                                                         05DEC01.215
>           SPSRC(I,J) = 0.                                                        05DEC01.216
>           SPCLB(I,J) = 0.                                                        05DEC01.217
>           SUMFB(I,J) = 0.                                                        05DEC01.218
>           if(nca(i,j).le.0)CIN(I,J) = 0.                                         05DEC01.219
>  774    CONTINUE                                                                 05DEC01.220
>         TIMKFDIAG=TIMKFDIAG+FRQKFDIAG                                            05DEC01.221
> C       print *,'KTAU, XTIME, TIMKFDIAG =',KTAU, XTIME,TIMKFDIAG                 05DEC01.222
>       ENDIF                                                                      05DEC01.223
> C...end of KF2 mods....                                                          05DEC01.224
===================================================================
domain/io/outtap.F
diff -r3.37 outtap.F
44a45
> #     include <addrcu.incl>                                                      05DEC01.225
57c58
<       CHARACTER*16 FILENM                                                        OUTTAP.57
---
>       CHARACTER*17 FILENM                                                        05DEC01.226
75c76
<       LOGICAL OPENED                                                             OUTTAP.75
---
>       LOGICAL OPENED, LEXIST                                                     05DEC01.227
109c110,113
<           IF (BUFFRQ.GE.TAPFRQ) THEN                                             OUTTAP.95
---
>           IF (IFREST) THEN                                                       05DEC01.228
>               ITAPCNT = ITAPCNT+1                                                05DEC01.229
> C             PRINT *,' RESTART OUTPUT FILE SUFFIX = ', ITAPCNT                  05DEC01.230
>           ELSE IF (BUFFRQ.GE.TAPFRQ) THEN                                        05DEC01.231
118,120d121
<           ELSE IF (IFREST) THEN                                                  OUTTAP.102
<               ITAPCNT = ITAPCNT+1                                                OUTTAP.103
< C             PRINT *,' RESTART OUTPUT FILE SUFFIX = ', ITAPCNT                  OUTTAP.104
124a126
>             IF(ITAPCNT.LE.99) THEN                                               05DEC01.232
125a128,130
>             ELSE                                                                 05DEC01.233
>             WRITE (FILENM,91) FILENM2,ITAPCNT                                    05DEC01.234
>             ENDIF                                                                05DEC01.235
126a132,135
> 91          FORMAT(A13,'_',I3.3)                                                 05DEC01.236
>             INQUIRE (FILE=FILENM, EXIST=LEXIST)                                  05DEC01.237
>             IF (LEXIST) ITAPCNT = ITAPCNT+1                                      05DEC01.238
>             WRITE (FILENM,90) FILENM2,ITAPCNT                                    05DEC01.239
277c286
<       JBHI (3,11)=4                                                              07NOV00.410
---
>       JBHI (3,11)=5                                                              05DEC01.240
418,419c427,428
<       JBHIC(2,13)='ICUPA:   1-7/NO/ANTHES-KUO/GRELL/ARAKAWA'                     24SEP99.100
<      *     //     '-SCHUBERT/F-C/KAIN-FRITSCH/BETTS-MILLER '                     24SEP99.101
---
>       JBHIC(2,13)='ICUPA:   1-8/NO/ANTHES-KUO/GRELL/A-S/F-C'                     05DEC01.241
>      *     //     '/KAIN-FRITSCH/BETTS-MILLER/KAIN-FRITSCH2'                     05DEC01.242
472,473c481,482
<       JBHIC(20,13)='ICLOUD:  1=CLOUD EFFECTS ON RADIATION CO'                    OUTTAP.433
<      *      //     'SIDERED; 0=CLOUD EFFECTS NOT CONSIDERED '                    OUTTAP.434
---
>       JBHIC(20,13)='ICLOUD:  0=CLOUD EFFECTS NOT CONSIDERED;'                    05DEC01.243
>      *      //     '1,2=CLOUD EFF THR CLOUD WATER/ICE OR RH '                    05DEC01.244
487,488c496,497
<       JBHIC(25,13)='IMOIAV:  1=MOISTURE AVAILABILITY A FUNCT'                    OUTTAP.448
<      *      //     'ION OF TIME; 0=MOIST. AVAIL. A CONSTANT '                    OUTTAP.449
---
>       JBHIC(25,13)='IMOIAV: 1=USE BUCKET MODEL W/O EXTRA INP'                    05DEC01.245
>      *      //     'UT; 2=USE BUCKET MODEL W SOIL MOIS INPUT'                    05DEC01.246
497a507,509
>       JBHI(28,14)=IZ0TOPT                                                        05DEC01.247
>       JBHIC(28,14)='IZ0TOPT: 0=ORIG THERMAL ROUGHNESS FORM.;'                    05DEC01.248
>      *     //      ' 1=GARRATT; 2=ZILITINKEVICH (IBLTYP=2,5)'                    05DEC01.249
950a963,987
> C                                                                                05DEC01.250
> C  OPTIONAL KF-2 VARIABLES                                                       05DEC01.251
> C                                                                                05DEC01.252
>       IF(ICUPA(NESCOU).EQ.8)THEN                                                 05DEC01.253
>          CALL EQUATO(SUMFB,MIX,MJX,1,HDOTH,IL,JL,1)                              05DEC01.254
>          CALL WRITE_FIELDREC( iutl,D2,nescou,HDOTH,XTIME,                        05DEC01.255
>      +                     'SUMFB',CURRENT_DATE,                                 05DEC01.256
>      +                     'C','YX','m',                                         05DEC01.257
>      +                     'KF MASS FLUX UPDRAFT   MAX VALUE IN PREVIOUS         05DEC01.258
>      & HOUR',                                                                    05DEC01.259
>      +                     IX,JX,1,MIX,MJX,1 )                                   05DEC01.260
>                                                                                  05DEC01.261
>          CALL EQUATO(SPSRC,MIX,MJX,1,HDOTH,IL,JL,1)                              05DEC01.262
>          CALL WRITE_FIELDREC( iutl,D2,nescou,HDOTH,XTIME,                        05DEC01.263
>      +                     'SPSRC',CURRENT_DATE,                                 05DEC01.264
>      +                     'C','YX','m',                                         05DEC01.265
>      +                     'KF SOURCE LYR UPDRAFT  MAX VALUE IN PREVIOUS         05DEC01.266
>      & HOUR',                                                                    05DEC01.267
>      +                     IX,JX,1,MIX,MJX,1 )                                   05DEC01.268
>         DO 773 I = 1,MIX                                                         05DEC01.269
>         DO 773 J = 1,MJX                                                         05DEC01.270
>           SUMFB(I,J) = 0.                                                        05DEC01.271
>           SPSRC(I,J) = 0.                                                        05DEC01.272
>  773    CONTINUE                                                                 05DEC01.273
>       ENDIF                                                                      05DEC01.274
1036,1037c1073,1075
<       CALL EQUATO(SNOWC,MIX,MJX,1,HDOTH,IL,JL,1)                                 24SEP99.162
<       CALL WRITE_FIELDREC( iutl,D2,nescou,HDOTH,XTIME,                           OUTTAP.986
---
>       IF(IFSNOW(NESCOU).EQ.1)THEN                                                05DEC01.275
>         CALL EQUATO(SNOWC,MIX,MJX,1,HDOTH,IL,JL,1)                               05DEC01.276
>         CALL WRITE_FIELDREC( iutl,D2,nescou,HDOTH,XTIME,                         05DEC01.277
1041a1080,1087
>       ELSE IF(IFSNOW(NESCOU).EQ.2)THEN                                           05DEC01.278
>         CALL EQUATO(SNOWC,MIX,MJX,1,HDOTH,IL,JL,1)                               05DEC01.279
>         CALL WRITE_FIELDREC( iutl,D2,nescou,HDOTH,XTIME,                         05DEC01.280
>      +                     'SNODPTH ',CURRENT_DATE,                              05DEC01.281
>      +                     'C','YX','mm',                                        05DEC01.282
>      +                     'SNOW COVER LIQUID EQUIVALENT',                       05DEC01.283
>      +                     IX,JX,1,MIX,MJX,1 )                                   05DEC01.284
>       ENDIF                                                                      05DEC01.285
1241c1287
< C----- EXTRA OUTPUT FOC MRF PBL:  T2, Q2, U10, and V10:                          07NOV00.462
---
> C----- EXTRA OUTPUT FOR PBL:  T2, Q2, U10, and V10:                              05DEC01.286
1243c1289,1290
<       IF (IBLTYP(NESCOU) .EQ. 5) THEN                                            07NOV00.464
---
>       IF (IBLTYP(NESCOU).EQ.2 .OR. IBLTYP(NESCOU).EQ.4 .OR.                      05DEC01.287
>      +     IBLTYP(NESCOU) .EQ. 5) THEN                                           05DEC01.288
===================================================================
domain/io/outts.F
diff -r3.9 outts.F
54c54,55
<             if (ibltyp(inest).ne.5) then                                         OUTTS.54
---
>             if (ibltyp(inest).ne.5.and.ibltyp(inest).ne.2.and.                   05DEC01.289
>      -          ibltyp(inest).ne.4) then                                         05DEC01.290
67c68
<             else if (ibltyp(inest).eq.5) then                                    OUTTS.67
---
>             else                                                                 05DEC01.291
===================================================================
domain/io/rdinit.F
diff -r3.30 rdinit.F
37,39c37,38
< C     NMO=NUMBER OF MONTHS                                                       RDINIT.38
<       INTEGER NVC,NSC,NMO                                                        RDINIT.39
<       PARAMETER (NVC=25, NSC=17, NMO=12)                                         07NOV00.617
---
>       INTEGER NVC,NSC                                                            05DEC01.292
>       PARAMETER (NVC=25, NSC=17)                                                 05DEC01.293
51,52c50
<       REAL VEGCAT(MIXL,MJXL,NVC),SOLCAT(MIXL,MJXL,NSC),                          RDINIT.52
<      -     VEGFMO(MIXL,MJXL,NMO)                                                 RDINIT.53
---
>       REAL VEGCAT(MIXL,MJXL,NVC),SOLCAT(MIXL,MJXL,NSC)                           05DEC01.294
303c301,305
<           IF(.NOT.FNDWEASD)CALL EQUATE(HDOTH,IX,JX,1,SNOWC,MIX,MJX,1)            07NOV00.631
---
>           IF(IFSNOW(INEST).NE.2)THEN                                             05DEC01.295
>             IF(.NOT.FNDWEASD)CALL EQUATE(HDOTH,IX,JX,1,SNOWC,MIX,MJX,1)          05DEC01.296
>           ELSE                                                                   05DEC01.297
>             IF(IFPRT.EQ.1)PRINT *,'FIELD ',NAME8,' SKIPPED'                      05DEC01.298
>           ENDIF                                                                  05DEC01.299
319a322,333
> C_FLIC_BEGIN_NOFLIC                                                              05DEC01.300
>         ELSE IF((NAME8.EQ.'WEASD   ' .OR. NAME8.EQ.'SNODPTH ')                   05DEC01.301
>      -          .AND.IFSNOW(INEST).EQ.2)THEN                                     05DEC01.302
>           FNDWEASD=.TRUE.                                                        05DEC01.303
>           CALL EQUATE(HDOTH,IX,JX,1,SNOWC,MIX,MJX,1)                             05DEC01.304
> C_FLIC_END_NOCFLIC                                                               05DEC01.305
>           DO J=1,JX                                                              05DEC01.306
>           DO I=1,IX                                                              05DEC01.307
>             SNOWC(I,J)=AMAX1(SNOWC(I,J),0.0)                                     05DEC01.308
>           ENDDO                                                                  05DEC01.309
>           ENDDO                                                                  05DEC01.310
>           IF(IFPRT.EQ.1)print *,'weasd found and put in snowc'                   05DEC01.311
462a477,482
>       IF(IFSNOW(INEST).EQ.2.AND.(.NOT.FNDWEASD))THEN                             05DEC01.312
>            PRINT *,                                                              05DEC01.313
>      -     'NO WATER EQUIVALENT SNOW DEPTH FOUND: CHECK REGRID JOB'              05DEC01.314
>            PRINT *,'IFSNOW=2 REQUIRES SNOW DEPTH FIELD IN INPUT FILE'            05DEC01.315
>            ISTOP=ISTOP+1                                                         05DEC01.316
>       ENDIF                                                                      05DEC01.317
596,597c616
< C     READ TERRAIN OUTPUT FOR TM, IVGTYP, ISLTYP, VEGFRC                         RDINIT.506
< C       USE DOMINANT IVGTYP ISLTYP - INTERPOLATE VEGFRC IN TIME                  RDINIT.507
---
> C       INTERPOLATE VEGFRC IN TIME                                               05DEC01.318
599,615c618,622
< C       REALMON=0. AND 12. ON DECEMBER 15TH                                      RDINIT.509
<         call split_date_char ( cdatenew, NY , NM , ND ,                          RDINIT.510
<      -                       MHOUR , MMIN , MSEC )                               RDINIT.511
<         REALMON=FLOAT(NM)+FLOAT(ND-15)/30.                                       RDINIT.512
<                                                                                  RDINIT.513
<         IF(REALMON.GE.12.)REALMON=REALMON-12.                                    RDINIT.514
<         M1=IFIX(REALMON)                                                         RDINIT.515
<         M2=IFIX(REALMON+1)                                                       RDINIT.516
<         IF(M1.EQ.0)M1=12                                                         RDINIT.517
<         FRCMON=REALMON-IFIX(REALMON)                                             RDINIT.518
<         DO J=1,JLX                                                               RDINIT.519
<         DO I=1,ILX                                                               RDINIT.520
< C       LINEAR INTERPOLATION IN TIME FOR VEGFRC                                  RDINIT.521
<           VEGFRC(I,J)=(1.-FRCMON)*VEGFMO(I,J,M1)+FRCMON*VEGFMO(I,J,M2)           RDINIT.522
<           IF(VEGFRC(I,J).LT.1.E-3)VEGFRC(I,J)=0.                                 07NOV00.681
<           PCNTMX=-99.                                                            RDINIT.523
< C SKIP CODE TO DETERMINE DOMINANT TYPE FROM PERCENTAGES                          RDINIT.524
---
>         CALL SETVEGFR(ILX,JLX,XTIME,JULDAY,GMT)                                  05DEC01.319
> C SKIP CODE TO DETERMINE DOMINANT TYPE FROM PERCENTAGES                          05DEC01.320
> C       DO J=1,JLX                                                               05DEC01.321
> C       DO I=1,ILX                                                               05DEC01.322
> C         PCNTMX=-99.                                                            05DEC01.323
640,641c647,648
<         ENDDO                                                                    RDINIT.549
<         ENDDO                                                                    RDINIT.550
---
> C       ENDDO                                                                    05DEC01.324
> C       ENDDO                                                                    05DEC01.325
===================================================================
domain/io/rdter.F
diff -r3.13 rdter.F
2c2
<      -         XLAT,XLONG,MSFD,MSFX,F,ISOIL,VEGFRC)                              07NOV00.746
---
>      -         XLAT,XLONG,MSFD,MSFX,F,ISOIL,VEGFRC,VEGFMO,IVGTYP)                05DEC01.326
15c15
<       INTEGER ISLTYP(MIX,MJX)                                                    RDTER.13
---
>       INTEGER ISLTYP(MIXL,MJXL),IVGTYP(MIXL,MJXL)                                05DEC01.327
148a149,155
>           IF(MIXL.GT.1) THEN                                                     05DEC01.328
>              DO I=1,IX                                                           05DEC01.329
>              DO J=1,JX                                                           05DEC01.330
>                 IVGTYP(I,J)=NINT(SATBRT(I,J))                                    05DEC01.331
>              ENDDO                                                               05DEC01.332
>              ENDDO                                                               05DEC01.333
>           END IF                                                                 05DEC01.334
180,214c187,190
<       IF(ISOIL.EQ.2)THEN                                                         07NOV00.767
< C     READ TERRAIN OUTPUT FOR TM, IVGTYP, ISLTYP, VEGFRC                         07NOV00.768
< C       USE DOMINANT IVGTYP ISLTYP - INTERPOLATE VEGFRC IN TIME                  07NOV00.769
< C                                                                                07NOV00.770
< C       REALMON=0. AND 12. ON DECEMBER 15TH                                      07NOV00.771
<                                                                                  07NOV00.772
< C        print*, 'xtime = ', xtime                                               07NOV00.773
< C        print*, 'julday = ', julday                                             07NOV00.774
< C        print*, 'cdate = ', cdate                                               07NOV00.775
<                                                                                  07NOV00.776
<          CALL GETH_NEWDATE( CDATENEW, CDATE, NINT(XTIME*60.) )                   07NOV00.777
< C        print*, 'cdatenew = ', cdatenew                                         07NOV00.778
<          call split_date_char ( cdatenew, NY , NM , ND ,                         07NOV00.779
<      -        MHOUR , MMIN , MSEC )                                              07NOV00.780
<          REALMON=FLOAT(NM)+FLOAT(ND-15)/30.                                      07NOV00.781
< C        print*, 'REALMON = ', REALMON                                           07NOV00.782
<                                                                                  07NOV00.783
<          IF(REALMON.GE.12.)REALMON=REALMON-12.                                   07NOV00.784
<          M1=IFIX(REALMON)                                                        07NOV00.785
<          M2=IFIX(REALMON+1)                                                      07NOV00.786
<          IF(M1.EQ.0)M1=12                                                        07NOV00.787
<          FRCMON=REALMON-IFIX(REALMON)                                            07NOV00.788
<          DO J=1,JLX                                                              07NOV00.789
<             DO I=1,ILX                                                           07NOV00.790
< C       LINEAR INTERPOLATION IN TIME FOR VEGFRC                                  07NOV00.791
<                VEGFRC(I,J)=                                                      07NOV00.792
<      &              (1.-FRCMON)*VEGFMO(I,J,M1)+FRCMON*VEGFMO(I,J,M2)             07NOV00.793
<             ENDDO                                                                07NOV00.794
<          ENDDO                                                                   07NOV00.795
<       ENDIF                                                                      07NOV00.796
< C                                                                                07NOV00.797
<       IF (DM_IONODE())THEN                                                       07NOV00.798
<          CLOSE (IUNIT)                                                           07NOV00.799
<       ENDIF                                                                      07NOV00.800
< C                                                                                07NOV00.801
---
>       IF(ILDDIM.EQ.1)THEN                                                        05DEC01.335
> C       INTERPOLATE VEGFRC IN TIME                                               05DEC01.336
>          CALL SETVEGFR(ILX,JLX,XTIME,JULDAY,GMT)                                 05DEC01.337
>       ENDIF                                                                      05DEC01.338
===================================================================
domain/nest/feedbk.F
diff -r3.6 feedbk.F
22a23
> #     include <soilp.incl>                                                       05DEC01.339
32a34
> #     include <soilpn.incl>                                                      05DEC01.340
239a242,280
> C                                                                                05DEC01.341
> C--- SNOW COVER FEEDBACK                                                         05DEC01.342
> C                                                                                05DEC01.343
>       IF (IFSNOW(INEST).EQ.2) THEN                                               05DEC01.344
> cmic$ do all autoscope                                                           05DEC01.345
> c$omp parallel do default(shared)                                                05DEC01.346
> c$omp&private(icy,jcx,jfx,jfp,jfm,ify,ifp,ifm)                                   05DEC01.347
>         DO 24 JCX=JWP1,JEM2                                                      05DEC01.348
>           JFX=2+(JCX-JWEST)*IRAX                                                 05DEC01.349
>           JFP=JFX+1                                                              05DEC01.350
>           JFM=JFX-1                                                              05DEC01.351
>           DO 24 ICY=ISP1,INM2                                                    05DEC01.352
>             IFY=2+(ICY-ISOUTH)*IRAX                                              05DEC01.353
>             IFP=IFY+1                                                            05DEC01.354
>             IFM=IFY-1                                                            05DEC01.355
>             SNOWC(ICY,JCX)=(SNOWCN(IFY,JFX)+SNOWCN(IFP,JFX)+                     05DEC01.356
>      +                   SNOWCN(IFM,JFX)+SNOWCN(IFY,JFP)+SNOWCN(IFY,JFM)         05DEC01.357
>      +                   +SNOWCN(IFP,JFP)+SNOWCN(IFP,JFM)+                       05DEC01.358
>      +                   SNOWCN(IFM,JFP)+SNOWCN(IFM,JFM))/9.                     05DEC01.359
>    24     CONTINUE                                                               05DEC01.360
>       END IF                                                                     05DEC01.361
>       IF (ISOIL.EQ.2) THEN                                                       05DEC01.362
> cmic$ do all autoscope                                                           05DEC01.363
> c$omp parallel do default(shared)                                                05DEC01.364
> c$omp&private(icy,jcx,jfx,jfp,jfm,ify,ifp,ifm)                                   05DEC01.365
>         DO 241 JCX=JWP1,JEM2                                                     05DEC01.366
>           JFX=2+(JCX-JWEST)*IRAX                                                 05DEC01.367
>           JFP=JFX+1                                                              05DEC01.368
>           JFM=JFX-1                                                              05DEC01.369
>           DO 241 ICY=ISP1,INM2                                                   05DEC01.370
>             IFY=2+(ICY-ISOUTH)*IRAX                                              05DEC01.371
>             IFP=IFY+1                                                            05DEC01.372
>             IFM=IFY-1                                                            05DEC01.373
>             SNOA(ICY,JCX)=(SNOAN(IFY,JFX)+SNOAN(IFP,JFX)+                        05DEC01.374
>      +                   SNOAN(IFM,JFX)+SNOAN(IFY,JFP)+SNOAN(IFY,JFM)            05DEC01.375
>      +                   +SNOAN(IFP,JFP)+SNOAN(IFP,JFM)+                         05DEC01.376
>      +                   SNOAN(IFM,JFP)+SNOAN(IFM,JFM))/9.                       05DEC01.377
>   241     CONTINUE                                                               05DEC01.378
>       END IF                                                                     05DEC01.379
===================================================================
domain/nest/initnest.F
diff -r3.34 initnest.F
847a848,853
>         DO L=1,12                                                                05DEC01.380
>           CALL FILL(VEGFMO(1,1,L),HELP1,MIX,MJX,IYY,JXX,IYY-1,JXX-1)             05DEC01.381
>           CALL EXAINT(HELP1,IYY,JXX,HSCR1N,IYYN,JXXN,ISOUTH,JWEST,1)             05DEC01.382
>           CALL FILL(HSCR1N,VEGFMON(1,1,L),IYYN,JXXN,MIX,MJX,IYYN-1,              05DEC01.383
>      -              JXXN-1)                                                      05DEC01.384
>         ENDDO                                                                    05DEC01.385
916a923
>          IF(IFSNOW(NUMNES).EQ.1)THEN                                             05DEC01.386
921a929,931
>          ELSE IF(IFSNOW(NUMNES).EQ.2)THEN                                        05DEC01.387
>             SNOWCN(I,J)=AMAX1(0.0,SNOWCN(I,J))                                   05DEC01.388
>          ENDIF                                                                   05DEC01.389
1015a1026,1058
> C  CORRECT GROUND TEMPERATURE IN SNOW LAYERS                                     05DEC01.390
>       IF(IFSNOW(NUMNES).EQ.2.AND.ISOIL.EQ.1)THEN                                 05DEC01.391
>       DO J=1,JLX                                                                 05DEC01.392
>         DO I=1,ILX                                                               05DEC01.393
>           IF(SNOWC(I,J)*0.01.GT.ZS(1).AND.TSLA(I,J,1).GT.273.16)THEN             05DEC01.394
>              TSLA(I,J,1)=273.16                                                  05DEC01.395
>              TSLB(I,J,1)=273.16                                                  05DEC01.396
>              TGA(I,J)=273.16                                                     05DEC01.397
>              TGB(I,J)=273.16                                                     05DEC01.398
>           ENDIF                                                                  05DEC01.399
>           IF(SNOWC(I,J)*0.01.GT.ZS(2).AND.TSLA(I,J,2).GT.273.16)THEN             05DEC01.400
>              TSLA(I,J,2)=273.16                                                  05DEC01.401
>              TSLB(I,J,2)=273.16                                                  05DEC01.402
>           ENDIF                                                                  05DEC01.403
>           IF(SNOWC(I,J)*0.01.GT.ZS(3).AND.TSLA(I,J,3).GT.273.16)THEN             05DEC01.404
>              TSLA(I,J,3)=273.16                                                  05DEC01.405
>              TSLB(I,J,3)=273.16                                                  05DEC01.406
>           ENDIF                                                                  05DEC01.407
>           IF(SNOWC(I,J)*0.01.GT.ZS(4).AND.TSLA(I,J,4).GT.273.16)THEN             05DEC01.408
>              TSLA(I,J,4)=273.16                                                  05DEC01.409
>              TSLB(I,J,4)=273.16                                                  05DEC01.410
>           ENDIF                                                                  05DEC01.411
>           IF(SNOWC(I,J)*0.01.GT.ZS(4).AND.TSLA(I,J,4).GT.273.16)THEN             05DEC01.412
>              TSLA(I,J,4)=273.16                                                  05DEC01.413
>              TSLB(I,J,4)=273.16                                                  05DEC01.414
>           ENDIF                                                                  05DEC01.415
>           IF(SNOWC(I,J)*0.01.GT.ZS(5).AND.TSLA(I,J,5).GT.273.16)THEN             05DEC01.416
>              TSLA(I,J,5)=273.16                                                  05DEC01.417
>              TSLB(I,J,5)=273.16                                                  05DEC01.418
>           ENDIF                                                                  05DEC01.419
>         ENDDO                                                                    05DEC01.420
>       ENDDO                                                                      05DEC01.421
>       ENDIF                                                                      05DEC01.422
1032c1075
<      +       XLONG,MSFD,MSFX,F,ISOIL,VEGFRC)                                     07NOV00.855
---
>      +       XLONG,MSFD,MSFX,F,ISOIL,VEGFRC,VEGFMO,IVGTYP)                       05DEC01.423
1246c1289,1290
<       CALL LBDYIN(NUMNES,TBDYLBE,BDYLTIM,BDYLFRQ,ISOIL,IACTIV,IL,JL)             07NOV00.875
---
>       CALL LBDYIN(NUMNES,TBDYLBE,BDYLTIM,BDYLFRQ,ISOIL,IACTIV,                   05DEC01.424
>      -     IFSNOW,IL,JL)                                                         05DEC01.425
1280a1325
>       IF(ICUPA(N).EQ.8)PRINT1049,ICUPA(N)                                        05DEC01.426
1310a1356
>       IF(IFSNOW(N).EQ.2)PRINT1177                                                05DEC01.427
1312a1359
>       IF(ICLOUD(N).EQ.2.AND.IFRAD.EQ.3)PRINT1152                                 05DEC01.428
1365a1413,1414
>  1049 FORMAT(/' ICUPA  = ',I3,'  KAIN/FRITSCH 2 CONVECTIVE ',                    05DEC01.429
>      1 'PARAM SCHEME WITH SHALLOW CONVECTION OPTION.')                           05DEC01.430
1391a1441
>  1152 FORMAT(12X,'THE CLOUD EFFECT IN CCM2 IS CONSIDERED THROUGH RH.')           05DEC01.431
1401c1451,1452
<  1171 FORMAT(12X,'SNOW EFFECT IS CONSIDERED.')                                   INITNEST.1303
---
>  1171 FORMAT(12X,'IFSNOW=1: SNOW EFFECT IS CONSIDERED.')                         05DEC01.432
>  1177 FORMAT(12X,'IFSNOW=2: SNOW COVER AMOUNT IS PREDICTED.')                    05DEC01.433
1649a1701,1702
>          IF(IOVERW(N).EQ.0)GOTO 2001                                             05DEC01.434
>          GOTO 2001                                                               05DEC01.435
1652,1653d1704
<             IF(IOVERW(N).EQ.0)GOTO 2001                                          INITNEST.1558
<             GOTO 2001                                                            INITNEST.1559
1677d1727
<  2001       CONTINUE                                                             INITNEST.1583
1679a1730
>  2001   CONTINUE                                                                 05DEC01.436
1760c1811
< C           IF(XLANDN(I,J).GT.1.5)THEN                                           INITNEST.1669
---
> C           IF(XLANDN(I,J).GT.1.5.AND.SNOWCN(I,J).GT.0.)THEN                     05DEC01.437
1808c1859,1870
<           IF(IKFFC.EQ.1)NCAN(I,J)=-100                                           INITNEST.1728
---
>           IF(IKFFC.EQ.1) THEN                                                    05DEC01.438
>              NCAN(I,J)=-100                                                      05DEC01.439
>              NCADN(I,J)=-100                                                     05DEC01.440
>              TNCAN(i,j)=0.                                                       05DEC01.441
>              PSRCN(I,J)=0.                                                       05DEC01.442
>              PCLBN(I,J)=0.                                                       05DEC01.443
>              UMFBN(I,J)=0.                                                       05DEC01.444
>              SPSRCN(I,J)=0.                                                      05DEC01.445
>              SPCLBN(I,J)=0.                                                      05DEC01.446
>              SUMFBN(I,J)=0.                                                      05DEC01.447
>              CINN(I,J)=0.                                                        05DEC01.448
>           END IF                                                                 05DEC01.449
1891,1900c1953
<       IF(I4D(NUMNES,2).EQ.1)THEN                                                 INITNEST.1811
<         IF(IBLTYP(NUMNES).NE.2.AND.IBLTYP(NUMNES).NE.5                           24SEP99.332
<      1     .AND.IBLTYP(NUMNES).NE.6)THEN                                         24SEP99.333
<           PRINT1311,NUMNES                                                       INITNEST.1813
< 1311  FORMAT('0','!!!! FOR NUDGING SFC DATA IN THE PBL FOR INEST = ',            INITNEST.1814
<      1I2,': MULTI-LAYER PBL (2,5 OR 6) MUST BE USED !!!!')                       24SEP99.334
<           STOP 1310                                                              INITNEST.1816
<         ENDIF                                                                    INITNEST.1817
<       ENDIF                                                                      INITNEST.1818
<  1310 CONTINUE                                                                   INITNEST.1819
---
> C                                                                                05DEC01.450
===================================================================
domain/util/dcpl3dwnd.F
diff -r3.0 dcpl3dwnd.F
22,28c22,24
< cmic$ do all autoscope                                                           DCPL3DWND.22
< c$doacross                                                                       DCPL3DWND.23
< c$& local(i,j,k)                                                                 DCPL3DWND.24
< c$omp parallel do default(shared)                                                DCPL3DWND.25
< c$omp&private(i,j,k)                                                             DCPL3DWND.26
<         DO J=1,JL                                                                DCPL3DWND.27
<           IF(J.EQ.1)THEN                                                         DCPL3DWND.28
---
> c$omp parallel                                                                   05DEC01.451
> c$omp&private(i,k)                                                               05DEC01.452
> c$        IF(OMP_GET_THREAD_NUM().EQ.0)THEN                                      05DEC01.453
37,38c33,34
<           ENDIF                                                                  DCPL3DWND.37
<           IF(J.EQ.JL)THEN                                                        DCPL3DWND.38
---
> c$        ENDIF                                                                  05DEC01.454
> c$        IF(OMP_GET_THREAD_NUM().EQ.OMP_GET_NUM_THREADS()-1)THEN                05DEC01.455
47c43,50
<           ENDIF                                                                  DCPL3DWND.47
---
> c$        ENDIF                                                                  05DEC01.456
> c$omp end parallel                                                               05DEC01.457
> cmic$ do all autoscope                                                           05DEC01.458
> c$doacross                                                                       05DEC01.459
> c$& local(i,j,k)                                                                 05DEC01.460
> c$omp parallel do default(shared)                                                05DEC01.461
> c$omp&private(i,j,k)                                                             05DEC01.462
>         DO J=1,JL                                                                05DEC01.463
===================================================================
dynamics/nonhydro/Makefile
diff -r3.2 -r3.3
57c57
< solve.o: ../../include/soil.incl
---
> solve.o: ../../include/landuse.incl ../../include/soil.incl
===================================================================
dynamics/nonhydro/solve.F
diff -r3.31 solve.F
28a29
> #include <landuse.incl>                                                          05DEC01.464
31c32
<       INTEGER   IEXEC,INEST,NN                                                   SOLVE.30
---
>       INTEGER   IEXEC,INEST,NN,IS                                                05DEC01.465
41a43
>       REAL      FIRTP(IPLOND),SABTP(IPLOND)                                      05DEC01.466
113a116,118
>       real      tposdz,snowfrac                                                  05DEC01.467
>       INTEGER   KVEG                                                             05DEC01.468
>       REAL      VEGFRQ                                                           05DEC01.469
372c377
<         CALL VADV(KZZ,THTEN,THA,QDOT,PSA,1,INEST)                                SOLVE.344
---
>         CALL VADV(KZZ,THTEN,THA,QDOT,PSA,6,INEST)                                05DEC01.470
667c672
<       IF(ISOIL.GE.2 .OR. IMOIAV(INEST).GE.1)THEN                                 07NOV00.1001
---
>       IF(ISOIL.GE.2 .OR. IMOIAV(INEST).GE.1 .OR. IFSNOW(INEST).EQ.2)THEN         05DEC01.471
850a856,887
> #ifdef ICUPA8                                                                    05DEC01.472
> C                                                                                05DEC01.473
> C --- ICUPA=8: KAIN-FRITSCH 2 WITH SHALLOW CONVECTION                            05DEC01.474
> C                                                                                05DEC01.475
>       IF(ICUPA(INEST).EQ.8)THEN                                                  05DEC01.476
> cmic$ do all autoscope                                                           05DEC01.477
> cmic$1 shared(ilx,ibnes,ienes,jbnes,jenes,inest,rho0,w3d,                        05DEC01.478
> cmic$1        t3dten,qv3dten,u3d,v3d,t3d,qv3d,pp3d,psb,rainc)                    05DEC01.479
> cmic$2 private(j,scr1)                                                           05DEC01.480
> c$doacross                                                                       05DEC01.481
> c$& local(j,scr1)                                                                05DEC01.482
> c$omp parallel do default(shared)                                                05DEC01.483
> c$omp&private(j,scr1)                                                            05DEC01.484
>         DO J=JBNES,JENES-1                                                       05DEC01.485
>           DO K=1,KL                                                              05DEC01.486
>             DO I=1,ILX                                                           05DEC01.487
>               SCR1(I,K)=-5.0E-4*G*RHO0(I,J,K)*(W3D(I,J,K)+W3D(I,J,K+1))          05DEC01.488
>             ENDDO                                                                05DEC01.489
>           ENDDO                                                                  05DEC01.490
> C                                                                                05DEC01.491
>           IF(IMPHYS(INEST).GE.6)THEN                                             05DEC01.492
>             CALL CUPARA8(PSB,T3DTEN,QV3DTEN,QR3DTEN,QC3DTEN,QG3DTEN,             05DEC01.493
>      +           QI3DTEN,RAINC,SCR1,U3D,V3D,T3D,QV3D,PP3D,J,INEST,               05DEC01.494
>      +           IMPHYS(INEST),IBNES,IENES-1)                                    05DEC01.495
>           ELSE                                                                   05DEC01.496
>             CALL CUPARA8(PSB,T3DTEN,QV3DTEN,QR3DTEN,QC3DTEN,QNI3DTEN,            05DEC01.497
>      +           QI3DTEN,RAINC,SCR1,U3D,V3D,T3D,QV3D,PP3D,J,INEST,               05DEC01.498
>      +           IMPHYS(INEST),IBNES,IENES-1)                                    05DEC01.499
>           ENDIF                                                                  05DEC01.500
>         ENDDO                                                                    05DEC01.501
>       ENDIF                                                                      05DEC01.502
> #endif                                                                           05DEC01.503
929c966
< cmic$1 shared(ibnes,ienes,jbnes,jenes,kl,inest,                                  SOLVE.886
---
> cmic$1 shared(ibnes,ienes,jbnes,jenes,kl,inest,osw,olw,tgb,emiss,                05DEC01.504
931c968
< cmic$2 private(i,j,k,cldfra,frla,frsa)                                           SOLVE.888
---
> cmic$2 private(i,j,k,cldfra,frla,frsa,firtp,sabtp)                               05DEC01.505
933c970
< c$& local(i,j,k,cldfra,frla,frsa)                                                SOLVE.890
---
> c$& local(i,j,k,cldfra,frla,frsa,firtp,sabtp)                                    05DEC01.506
935c972
< c$omp&private(i,j,k,cldfra,frla,frsa)                                            SOLVE.892
---
> c$omp&private(i,j,k,cldfra,frla,frsa,firtp,sabtp)                                05DEC01.507
942,943c979,981
<             CALL COLMOD(J,KTAU,IUTRAD,NRADISP,CLDFRA,FRLA,FRSA,OLW,OSW,          07NOV00.1015
<      +           T3D,QV3D,PP3D)                                                  07NOV00.1016
---
>             CALL COLMOD(J,KTAU,IUTRAD,NRADISP,CLDFRA,FRLA,FRSA,                  05DEC01.508
>      +                  FIRTP,SABTP,T3D,QV3D,PP3D,QC3D,QR3D,QI3D,                05DEC01.509
>      -                  QNI3D,IMPHYS(INEST),ICLOUD(INEST))                       05DEC01.510
946a985,986
>               OSW(I,J)=SABTP(I)                                                  05DEC01.511
>               OLW(I,J)=FIRTP(I)                                                  05DEC01.512
1064c1104
< c$omp&private(i,j,k)                                                             SOLVE.978
---
> c$omp&private(i,j,k,kk)                                                          05DEC01.513
1094a1135,1137
> #ifdef MPP1                                                                      05DEC01.514
>           DUMJ(J)=J                                                              05DEC01.515
> #endif                                                                           05DEC01.516
1279c1322,1329
< C Note: no parallel code yet                                                     07NOV00.1063
---
> cmic$ do all autoscope                                                           05DEC01.517
> cmic$1 shared(iyy,jxx,inest,u3d,v3d,t3d,qv3d,pp3d,qc3d,qi3d,qnc3d,               05DEC01.518
> cmic$1        ucd,vcd,qc3dten,t3dten,qv3dten,qi3dten,qnc3dten)                   05DEC01.519
> cmic$2 private(j)                                                                05DEC01.520
> c$doacross                                                                       05DEC01.521
> c$& local(j)                                                                     05DEC01.522
> c$omp parallel do default(shared)                                                05DEC01.523
> c$omp&private(j)                                                                 05DEC01.524
1288,1289d1337
< C...PX mods end                                                                  07NOV00.1072
< C                                                                                07NOV00.1073
1690c1738
<      +           INEST,J,IBNES,IENES-1)                                          24SEP99.384
---
>      +           SNOWNCT,INEST,J,IBNES,IENES-1)                                  05DEC01.525
1695c1743
<      +           ,INEST,J                                                        07NOV00.1083
---
>      +           ,SNOWNCT,INEST,J                                                05DEC01.526
1750c1798
<      +           QNC3D,PP3D,PSB,RAINNC,INEST,J,IBNES,IENES-1)                    SOLVE.1617
---
>      +           QNC3D,PP3D,PSB,RAINNC,SNOWNCT,INEST,J,IBNES,IENES-1)            05DEC01.527
1783c1831
<       IF(ISOIL.GE.2 .OR. IMOIAV(INEST).GE.1)THEN                                 07NOV00.1089
---
>       IF(ISOIL.GE.2 .OR. IMOIAV(INEST).GE.1 .OR. IFSNOW(INEST).EQ.2)THEN         05DEC01.528
1792a1841,1882
>             if(ifsnow(inest).eq.2.and.xland(i,j).lt.1.5)then                     05DEC01.529
> c  IFSNOW=2: SNOW COVER UPDATED WITH EXPLICIT PRECIP RATE                        05DEC01.530
>               if(imphys(inest).eq.4)then                                         05DEC01.531
> c               no explicit snow so estimate snow melt in atmosphere             05DEC01.532
>                 if(qr3d(i,j,kl).gt.1.e-6)then                                    05DEC01.533
>                   tposdz=0.                                                      05DEC01.534
>                   do k=1,kl                                                      05DEC01.535
>                     if(t3d(i,j,k).gt.273.16)tposdz=tposdz+                       05DEC01.536
>      -                (t3d(i,j,k)-273.16)*dsigma(k)*psa(i,j)*1000.               05DEC01.537
>      -                /(rho0(i,j,k)*g)                                           05DEC01.538
>                   enddo                                                          05DEC01.539
> c      1.e-6*dT*dz = snow melt                                                   05DEC01.540
>                   snowfrac=amax1(0.,qr3d(i,j,kl)-1.e-6*tposdz)                   05DEC01.541
>      -                     /qr3d(i,j,kl)                                         05DEC01.542
> c     snow accumulation (rainp in cm, snowc in mm)                               05DEC01.543
>                   snowc(i,j)=snowc(i,j)+10.*rainp(i,j)*snowfrac                  05DEC01.544
>                 endif                                                            05DEC01.545
>               else if(imphys(inest).eq.5.or.imphys(inest).eq.7)then              05DEC01.546
> c               explicit snow rate should be in snownct                          05DEC01.547
>                 if(snownct(i,j).gt.1.e-3)then                                    05DEC01.548
> c     snow accumulation (snownct in cm, snowc in mm)                             05DEC01.549
>                   snowc(i,j)=snowc(i,j)+10.*snownct(i,j)                         05DEC01.550
>                 endif                                                            05DEC01.551
>               else                                                               05DEC01.552
>                 print *,'ifsnow=2 not yet implemented for imphys ='              05DEC01.553
>      -                   ,imphys(inest)                                          05DEC01.554
>               endif                                                              05DEC01.555
>                                                                                  05DEC01.556
> c     reset land-use properties for snow cover                                   05DEC01.557
>               IS=INT(SATBRT(I,J)+0.001)                                          05DEC01.558
>               if(snowc(i,j).gt.0.0)then                                          05DEC01.559
>                 ALB(I,J)=ALBD(IS,ISN)/100.*(1.+SCFX(IS))                         05DEC01.560
>                 THC(I,J)=THERIN(ISICE,ISN)/100.                                  05DEC01.561
>                 EMISS(I,J)=SFEM(ISICE,ISN)                                       05DEC01.562
>                 MAVAIL(I,J)=SLMO(ISICE,ISN)                                      05DEC01.563
>               else                                                               05DEC01.564
>                 ALB(I,J)=ALBD(IS,ISN)/100.                                       05DEC01.565
>                 THC(I,J)=THERIN(IS,ISN)/100.                                     05DEC01.566
>                 EMISS(I,J)=SFEM(IS,ISN)                                          05DEC01.567
>                 MAVAIL(I,J)=SLMO(IS,ISN)                                         05DEC01.568
>               endif                                                              05DEC01.569
>             endif                                                                05DEC01.570
1862,1863c1952,1954
< #if defined(ICUPA5) || defined(ICUPA6)
<       IF(ICUPA(INEST).EQ.5.OR.ICUPA(INEST).EQ.6)THEN                             SOLVE.1730
---
> #if defined(ICUPA5) || defined(ICUPA6) || defined(ICUPA8)
>       IF(ICUPA(INEST).EQ.5.OR.ICUPA(INEST).EQ.6.OR.                              05DEC01.572
>      -   ICUPA(INEST).EQ.8)THEN                                                  05DEC01.573
2023c2114
<       XTIME=XTIME+DTMIN                                                          SOLVE.1890
---
>       XTIME=FLOAT(KTAU)*DTMIN                                                    05DEC01.574
2033c2124,2125
<       IF(ICUPA(INEST).EQ.5.OR.ICUPA(INEST).EQ.6)THEN                             SOLVE.1895
---
>       IF(ICUPA(INEST).EQ.5.OR.ICUPA(INEST).EQ.6.OR.                              05DEC01.575
>      -   ICUPA(INEST).EQ.8)THEN                                                  05DEC01.576
2086,2089c2178,2188
<       IF(INEST.GT.1)GOTO 910                                                     SOLVE.1944
< C     NO CONDITION ON ITGFLG                                                     SOLVE.1945
<       IF(XTIME.GE.DECTIM)CALL SOLAR1(XTIME,JULDAY,GMT,2)                         SOLVE.1946
<   910 CONTINUE                                                                   SOLVE.1947
---
>       IF(INEST.EQ.1)THEN                                                         05DEC01.577
>         IF(XTIME.GE.DECTIM)CALL SOLAR1(XTIME,JULDAY,GMT,2)                       05DEC01.578
>       ENDIF                                                                      05DEC01.579
> C *** RESET VEGETATION FRACTION EVERY 24 HOURS (VEGFRQ=1440.)                    05DEC01.580
>       IF(ILDDIM.EQ.1)THEN                                                        05DEC01.581
>         VEGFRQ=1440.                                                             05DEC01.582
>         KVEG=NINT(VEGFRQ/DTMIN)                                                  05DEC01.583
>         IF(KTAU.NE.0 .AND. MOD(KTAU,KVEG).EQ.0)THEN                              05DEC01.584
>           CALL SETVEGFR(ILX,JLX,XTIME,JULDAY,GMT)                                05DEC01.585
>         ENDIF                                                                    05DEC01.586
>       ENDIF                                                                      05DEC01.587
===================================================================
fdda/grid/in4dgd.F
diff -r3.16 in4dgd.F
79a80,90
>                                                                                  05DEC01.588
> C CHECK IF IT NEEDS TO READ DATA. e.g. at the end of data time                   05DEC01.589
>       IF(IDYNIN.EQ.1.AND.XTIME.GT.DATEND(IN))THEN                                05DEC01.590
>       PRINT*,' IN4DGD: FOR INEST = ',IN,' AT XTIME = ',XTIME,                    05DEC01.591
>      1'AND DATEND = ',DATEND(IN),' :'                                            05DEC01.592
>       PRINT*,'         END-OF-DATA FLAG SET FOR ANALYSIS-NUDGING',               05DEC01.593
>      1'DYNAMIC INITIALIZATION'                                                   05DEC01.594
>         IEOD(IN)=1                                                               05DEC01.595
>         RETURN                                                                   05DEC01.596
>       ENDIF                                                                      05DEC01.597
>                                                                                  05DEC01.598
162a174,175
>       XT1SAV=XTIM1(IN)                                                           05DEC01.599
>       XTNSAV=XTNEX(IN)                                                           05DEC01.600
279,288c292
<       XT1SAV=XTIM1(IN)                                                           IN4DGD.257
<       XTNSAV=XTNEX(IN)                                                           IN4DGD.258
<       IF(IDYNIN.EQ.1.AND.XTIME.GT.DATEND(IN))THEN                                IN4DGD.259
<       PRINT*,' IN4DGD: FOR INEST = ',IN,' AT XTIME = ',XTIME,                    IN4DGD.260
<      1'AND DATEND = ',DATEND(IN),' :'                                            IN4DGD.261
<       PRINT*,'         END-OF-DATA FLAG SET FOR ANALYSIS-NUDGING',               IN4DGD.262
<      1'DYNAMIC INITIALIZATION'                                                   IN4DGD.263
<         IEOD(IN)=1                                                               IN4DGD.264
<         GOTO 7002                                                                IN4DGD.265
<       ENDIF                                                                      IN4DGD.266
---
> C                                                                                05DEC01.601
===================================================================
fdda/obs/errob.F
diff -r3.0 errob.F
2a3
>       IMPLICIT NONE                                                              05DEC01.602
36a38,49
> C Declarations for Implicit None                                                 05DEC01.603
>       integer i,mm,ierr,ierror                                                   05DEC01.604
>       integer nlocal_dot,nlocal_crs                                              05DEC01.605
>       integer iiis,iiie,jjjs,jjje                                                05DEC01.606
>       integer ia,ib,ic,ityp,n,in,inpf                                            05DEC01.607
>       integer iob,job,kob,iobm,jobm,iobp,jobp,kobp                               05DEC01.608
>       integer ivar,nml,nlb,nnl,nle,nsta                                          05DEC01.609
>       real    pd1,pd2,pd3,pd4,ra,rb,rc                                           05DEC01.610
>       real    dxob,dyob,dzob,fnpf                                                05DEC01.611
>       real    ub,vb,psb,qvb,tb,grfac                                             05DEC01.612
>       real    dummy,grid                                                         05DEC01.613
>                                                                                  05DEC01.614
38c51,53
< CMPP1      INCLUDE 'mpif.h'                                                      ERROB.38
---
> C_FLIC_BEGIN_NOFLIC                                                              05DEC01.615
>       INCLUDE 'mpif.h'                                                           05DEC01.616
> C_FLIC_END_NOFLIC                                                                05DEC01.617
===================================================================
include/addrcu.incl
diff -r3.0 addrcu.incl
2a3,4
>       REAL TNCA, PSRC, PCLB, UMFB, SPSRC, SPCLB, SUMFB, CIN                      05DEC01.618
>       INTEGER NCAD                                                               05DEC01.619
8a11,15
>      1 (IATNCA,TNCA(MIXC,MJXC)),       (IAPSRC,PSRC(MIXC,MJXC)),                 05DEC01.620
>      2 (IAPCLB,PCLB(MIXC,MJXC)),       (IAUMFB,UMFB(MIXC,MJXC)),                 05DEC01.621
>      3 (IASPSRC,SPSRC(MIXC,MJXC)),     (IASPCLB,SPCLB(MIXC,MJXC)),               05DEC01.622
>      4 (IASUMFB,SUMFB(MIXC,MJXC)),     (IACIN,CIN(MIXC,MJXC)),                   05DEC01.623
>      5 (IANCAD,NCAD(MIXC,MJXC)),                                                 05DEC01.624
11c18,20
<      1          IADQRDT,IADQIDT,IADQSDT,IAW0AVG,IARCV,IANCA                      ADDRCU.11
---
>      1          IADQRDT,IADQIDT,IADQSDT,IAW0AVG,IARCV,                           05DEC01.625
>      2          IATNCA,IAPSRC,IAPCLB,IAUMFB,IASPSRC,IASPCLB,                     05DEC01.626
>      3          IASUMFB,IACIN,IANCAD,IANCA                                       05DEC01.627
===================================================================
include/addrcun.incl
diff -r3.0 addrcun.incl
3a4,5
>       REAL TNCAN,PSRCN,PCLBN,UMFBN,SPSRCN,SPCLBN,SUMFBN,CINN                     05DEC01.628
>       INTEGER NCADN                                                              05DEC01.629
10c12,18
<      6(INNCA,NCAN(MIXC,MJXC))                                                    ADDRCUN.10
---
>      1 (INTNCA,TNCAN(MIXC,MJXC)),      (INPSRC,PSRCN(MIXC,MJXC)),                05DEC01.630
>      2 (INPCLB,PCLBN(MIXC,MJXC)),      (INUMFB,UMFBN(MIXC,MJXC)),                05DEC01.631
>      3 (INSPSRC,SPSRCN(MIXC,MJXC)),    (INSPCLB,SPCLBN(MIXC,MJXC)),              05DEC01.632
>      4 (INSUMFB,SUMFBN(MIXC,MJXC)),    (INCIN,CINN(MIXC,MJXC)),                  05DEC01.633
>      5 (INNCAD,NCADN(MIXC,MJXC)),                                                05DEC01.634
>      6 (INNCA,NCAN(MIXC,MJXC))                                                   05DEC01.635
>                                                                                  05DEC01.636
12c20,22
<      1          INDQRDT,INDQIDT,INDQSDT,INW0AVG,INRCV,INNCA                      ADDRCUN.12
---
>      1          INDQRDT,INDQIDT,INDQSDT,INW0AVG,INRCV,                           05DEC01.637
>      2          INTNCA,INPSRC,INPCLB,INUMFB,INSPSRC,INSPCLB,                     05DEC01.638
>      3          INSUMFB,INCIN,INNCAD,INNCA                                       05DEC01.639
===================================================================
include/fddaob.incl
diff -r3.0 fddaob.incl
6c6
<      1    (IFTIM,TIMEOB(NIOBF)),(IFERR,ERRF(6,NIOBF))                            FDDAOB.6
---
>      1    (IFTIM,TIMEOB(NIOBF)),(IFERR,ERRF(8,NIOBF))                            05DEC01.640
===================================================================
include/jrg.incl
diff -r3.0 jrg.incl
11c11
<      7     PGM3,PGM4,PI,PSM1,PSM2,PSM3,PSM4,RMC,RON,SON,TNO,TOPG,                JRG.11
---
>      7     PGM3,PGM4,PI,PSM1,PSM2,PSM3,PSM4,RMC,RON,RON2,SON,TNO,TOPG,           05DEC01.641
14c14
<       COMMON/JRG/PI,RON,SON,GON,BR,BS,BG,DRAIN,DSNOW,                            JRG.14
---
>       COMMON/JRG/PI,RON,RON2,SON,GON,BR,BS,BG,DRAIN,DSNOW,                       05DEC01.642
===================================================================
include/param2.incl
diff -r3.7 param2.incl
12c12
<      6 ,ITSN,JTSN,ISSTVAR                                                        07NOV00.1116
---
>      6 ,ITSN,JTSN,ISSTVAR,IZ0TOPT                                                05DEC01.643
23c23
<      4  ISSTVAR                                                                  07NOV00.1118
---
>      4  ISSTVAR,IZ0TOPT                                                          05DEC01.644
===================================================================
include/parame
diff -r3.9 parame
79c79
<       PARAMETER (NVARX=8,NVARMX=4,NVARSX=46,NVARI=13,                            07NOV00.2490
---
>       PARAMETER (NVARX=8,NVARMX=4,NVARSX=47,NVARI=13,                            05DEC01.1520
113c113
<      1     9*MIXC*MJXC*MKXC+2*MIXC*MJXC+                                         PARAME.108
---
>      1     9*MIXC*MJXC*MKXC+11*MIXC*MJXC+                                        05DEC01.1521
115c115
<      1     32*MIXL*MJXL+4*MIXL*MJXL*MLX+                                         07NOV00.2491
---
>      1     32*MIXL*MJXL+4*MIXL*MJXL*MLX+MIXL*MJXL*12+                            05DEC01.1522
126c126
<      1     +MIXC*MJXC+MIXA*MJXA+3*MIXL*MJXL+NELEMTKEI)                           PARAME.121
---
>      1     +2*MIXC*MJXC+MIXA*MJXA+3*MIXL*MJXL+NELEMTKEI)                         05DEC01.1523
149c149
< C--- 11 FOR K-F AND F-C CUMULUS                                                  PARAME.146
---
> C--- 20 FOR K-F AND F-C CUMULUS                                                  05DEC01.1524
153c153
< C--- 36 FOR LAND-SURFACE,                                                        07NOV00.2492
---
> C--- 37 FOR LAND-SURFACE,                                                        05DEC01.1525
167c167
<      1     +NVARI+NVARP+27+11+46+36+9+20+2+14+1+1                                07NOV00.2493
---
>      1     +NVARI+NVARP+27+20+46+37+9+20+2+14+1+1                                05DEC01.1526
===================================================================
include/point2d.incl
diff -r3.5 point2d.incl
30c30
<       REAL TA2,QA2,UA10,VA10                                                     07NOV00.1140
---
>       REAL TA2,QA2,UA10,VA10,SNOWNCT                                             05DEC01.645
32c32,33
<      1        (IAUA10,UA10(MIX,MJX)), (IAVA10,VA10(MIX,MJX))                     07NOV00.1142
---
>      1        (IAUA10,UA10(MIX,MJX)), (IAVA10,VA10(MIX,MJX)),                    05DEC01.646
>      2        (IASNT,SNOWNCT(MIX,MJX))                                           05DEC01.647
38c39
<      5              IASR, IATSS,IATA2,IAQA2,IAUA10,IAVA10                        07NOV00.1144
---
>      5              IASR, IATSS,IATA2,IAQA2,IAUA10,IAVA10,IASNT                  05DEC01.648
===================================================================
include/point2dn.incl
diff -r3.5 point2dn.incl
30c30
<       REAL TA2N,QA2N,UA10N,VA10N                                                 07NOV00.1147
---
>       REAL TA2N,QA2N,UA10N,VA10N,SNOWNCTN                                        05DEC01.649
32c32,33
<      1        (INAUA10,UA10N(MIX,MJX)),(INAVA10,VA10N(MIX,MJX))                  07NOV00.1149
---
>      1        (INAUA10,UA10N(MIX,MJX)),(INAVA10,VA10N(MIX,MJX)),                 05DEC01.650
>      2        (INASNT,SNOWNCTN(MIX,MJX))                                         05DEC01.651
39c40
<      5           INASR,INATSS,INATA2,INAQA2,INAUA10,INAVA10                      07NOV00.1151
---
>      5           INASR,INATSS,INATA2,INAQA2,INAUA10,INAVA10,INASNT               05DEC01.652
===================================================================
include/soilp.incl
diff -r3.2 soilp.incl
1a2,3
>       INTEGER NMO                                                                05DEC01.653
>       PARAMETER (NMO=12)                                                         05DEC01.654
4c6
<      & XICE                                                                      SOILP.4
---
>      & XICE,VEGFMO                                                               05DEC01.655
27c29,30
<      & (IASMB,SMCB(MIXL,MJXL,MLX)),(IASTB,STCB(MIXL,MJXL,MLX))                   SOILP.18
---
>      & (IASMB,SMCB(MIXL,MJXL,MLX)),(IASTB,STCB(MIXL,MJXL,MLX)),                  05DEC01.656
>      & (IAVGM,VEGFMO(MIXL,MJXL,NMO))                                             05DEC01.657
31c34,35
<      &     IACMA,IASNA,IACMB,IASNB,IAVGT,IASLT,IASMA,IASTA,IASMB,IASTB           07NOV00.1165
---
>      &     IACMA,IASNA,IACMB,IASNB,IAVGT,IASLT,IASMA,IASTA,IASMB,IASTB,          05DEC01.658
>      &     IAVGM                                                                 05DEC01.659
===================================================================
include/soilpn.incl
diff -r3.2 soilpn.incl
1a2,3
>       INTEGER NMON                                                               05DEC01.660
>       PARAMETER (NMON=12)                                                        05DEC01.661
4c6
<      & STCAN,STCBN,VEGFRCN,XICEN                                                 SOILPN.4
---
>      & STCAN,STCBN,VEGFRCN,XICEN,VEGFMON                                         05DEC01.662
27c29,30
<      & (INSMB,SMCBN(MIXL,MJXL,MLX)),(INSTB,STCBN(MIXL,MJXL,MLX))                 SOILPN.18
---
>      & (INSMB,SMCBN(MIXL,MJXL,MLX)),(INSTB,STCBN(MIXL,MJXL,MLX)),                05DEC01.663
>      & (INVGM,VEGFMON(MIXL,MJXL,NMON))                                           05DEC01.664
31c34,35
<      &     INCMA,INSNA,INCMB,INSNB,INVGT,INSLT,INSMA,INSTA,INSMB,INSTB           07NOV00.1177
---
>      &     INCMA,INSNA,INCMB,INSNB,INVGT,INSLT,INSMA,INSTA,INSMB,INSTB,          05DEC01.665
>      &     INVGM                                                                 05DEC01.666
===================================================================
memory/address/addall.F
diff -r3.5 addall.F
210c210
< C--- ADDRCU VARIABLES (9 3-D REAL, 1 2-D REAL, 1 2-D INTEGER)                    ADDALL.210
---
> C--- ADDRCU VARIABLES (9 3-D REAL, 9 2-D REAL, 2 2-D INTEGER)                    05DEC01.667
217,218c217,220
<         NCOUNT=NCOUNT+1                                                          ADDALL.217
<         IAXALL(NCOUNT,K)=LOC(ALLARR(NCOU+MIXC*MJXC,K))                           ADDALL.218
---
>         DO 106 N=1,9                                                             05DEC01.668
>           NCOUNT=NCOUNT+1                                                        05DEC01.669
>           IAXALL(NCOUNT,K)=LOC(ALLARR(NCOU+N*MIXC*MJXC,K))                       05DEC01.670
>   106   CONTINUE                                                                 05DEC01.671
221,223c223,227
<         NCOU=NCOU+MIXC*MJXC                                                      ADDALL.221
<         NCOUNT=NCOUNT+1                                                          ADDALL.222
<         IAXALL(NCOUNT,K)=LOC(INTALL(NICOU+MIXC*MJXC,K))                          ADDALL.223
---
>         NCOU=NCOU+9*MIXC*MJXC                                                    05DEC01.672
>         DO 107 N=1,2                                                             05DEC01.673
>           NCOUNT=NCOUNT+1                                                        05DEC01.674
>           IAXALL(NCOUNT,K)=LOC(INTALL(NICOU+N*MIXC*MJXC,K))                      05DEC01.675
>   107   CONTINUE                                                                 05DEC01.676
226c230
<         NICOU=NICOU+MIXC*MJXC                                                    ADDALL.226
---
>         NICOU=NICOU+2*MIXC*MJXC                                                  05DEC01.677
491a496,501
> C       1 REAL 2D*12 ARRAY                                                       05DEC01.678
>         IAXALL(NCOUNT,K)=LOC(ALLARR(NCOU+MIXL*MJXL*12,K))                        05DEC01.679
>         NCOU=NCOU+MIXL*MJXL*12                                                   05DEC01.680
>         NCOUNT=NCOUNT+1                                                          05DEC01.681
>                                                                                  05DEC01.682
> C       RADIATION ARRAY                                                          05DEC01.683
494a505,506
>                                                                                  05DEC01.684
> C       UPPER B.C. ARRAY                                                         05DEC01.685
===================================================================
memory/address/addrx1c.F
diff -r3.2 addrx1c.F
41,42c41,42
<      3         IDUD13(4),IDUD14(9),IDUD15(2),IDUDU6A(11),                        ADDRX1C.41
<      4         IDUDU6B(4),IDUDU16(14),IDUD16(36)                                 07NOV00.1189
---
>      3         IDUD13(4),IDUD14(9),IDUD15(2),IDUDU6A(20),                        05DEC01.686
>      4         IDUDU6B(4),IDUDU16(14),IDUD16(37)                                 05DEC01.687
94c94
<       DO 65 N=1,11                                                               ADDRX1C.94
---
>       DO 65 N=1,20                                                               05DEC01.688
154c154
<       DO 170 N=1,36                                                              07NOV00.1190
---
>       DO 170 N=1,37                                                              05DEC01.689
===================================================================
memory/address/addrx1n.F
diff -r3.2 addrx1n.F
52,53c52,53
<      3         IDUD13(4),IDUD14(9),IDUD15(2),IDUDU6A(11),                        ADDRX1N.52
<      4         IDUDU6B(4),IDUDU16(14),IDUD16(36)                                 07NOV00.1191
---
>      3         IDUD13(4),IDUD14(9),IDUD15(2),IDUDU6A(20),                        05DEC01.690
>      4         IDUDU6B(4),IDUDU16(14),IDUD16(37)                                 05DEC01.691
106c106
<       DO 65 N=1,11                                                               ADDRX1N.106
---
>       DO 65 N=1,20                                                               05DEC01.692
166c166
<       DO 170 N=1,36                                                              07NOV00.1192
---
>       DO 170 N=1,37                                                              05DEC01.693
===================================================================
physics/cumulus/Makefile
diff -r3.0 -r3.1
47c47
< 		(cd shared; $(MAKE) kf_bm); \
---
> 		(cd shared; $(MAKE) kf_bm; $(MAKE) kf); \
58c58,67
< 	fi; 
---
> 	fi; \
> 	$(GREP) "8" $$tmpfile; \
> 	if [ $$? = 0 ]; then \
> 		echo "ICUPA = 8"; \
> 		(cd kf2; $(MAKE) all); \
> 		(cd ../pbl_sfc/dry; $(MAKE) all); \
> 		(cd shared; $(MAKE) kf_bm; $(MAKE) kf); \
> 	else \
> 		echo "ICUPA != 8"; \
> 	fi;
108c117
< 		(cd shared; $(MAKE) kf_bm_code); \
---
> 		(cd shared; $(MAKE) kf_bm_code; $(MAKE) kf_code); \
118a128,136
> 	fi; \
> 	$(GREP) "8" $$tmpfile; \
> 	if [ $$? = 0 ]; then \
> 		echo "ICUPA = 8"; \
> 		(cd kf2; $(MAKE) code); \
> 		(cd ../pbl_sfc/dry; $(MAKE) code); \
> 		(cd shared; $(MAKE) kf_bm_code; $(MAKE) kf_code); \
> 	else \
> 		echo "ICUPA != 8"; \
169c187
< 		(cd shared; $(MAKE) kf_bm_little_f); \
---
> 		(cd shared; $(MAKE) kf_bm_little_f; $(MAKE) kf_little_f); \
179a198,206
> 	fi; \
> 	$(GREP) "8" $$tmpfile; \
> 	if [ $$? = 0 ]; then \
> 		echo "ICUPA = 8"; \
> 		(cd kf2; $(MAKE) little_f); \
> 		(cd ../pbl_sfc/dry; $(MAKE) little_f); \
> 		(cd shared; $(MAKE) kf_bm_little_f; $(MAKE) kf_little_f); \
> 	else \
> 		echo "ICUPA != 8"; \
196a224
> 	(cd kf2; $(MAKE) clean); \
===================================================================
physics/cumulus/grell/cup.F
diff -r3.6 cup.F
11,16d10
< C                                                                                CUP.9
< C  AFRACL = FRACTIONAL COVER FOR CONV. PRECIP. WHEN DX=DXLARG=200 KM             CUP.10
< C  AFRACS =     "        "    "    "      "     "   DX=DXSMAL=10 KM              CUP.11
< C                                                                                CUP.12
<       DATA AFRACL,AFRACS,DLARGC,DSMALC /0.3,1.0,200.0E3,10.0E3/                  CUP.13
< C                                                                                CUP.14
72a67,72
> C                                                                                05DEC01.694
> C  AFRACL = FRACTIONAL COVER FOR CONV. PRECIP. WHEN DX=DXLARG=200 KM             05DEC01.695
> C  AFRACS =     "        "    "    "      "     "   DX=DXSMAL=10 KM              05DEC01.696
> C                                                                                05DEC01.697
>       DATA AFRACL,AFRACS,DLARGC,DSMALC /0.3,1.0,200.0E3,10.0E3/                  05DEC01.698
> C                                                                                05DEC01.699
===================================================================
physics/cumulus/kf/Makefile
diff -r3.0 -r3.1
9d8
< 	condload.o \
12d10
< 	envirtht.o \
14d11
< 	prof5.o \
19d15
< 	condload.i \
22d17
< 	envirtht.i \
24d18
< 	prof5.i \
29d22
< 	condload.f \
32d24
< 	envirtht.f \
34d25
< 	prof5.f \
62,63c53
< cupara6.o: ../../../include/pmoist.incl ../../../include/nonhyd.incl
< cupara6.o: ../../../include/nhcnst.incl
---
> cupara6.o: ../../../include/pmoist.incl ../../../include/nhcnst.incl
66,68c56,57
< kfpara.o: ../../../include/pmoist.incl ../../../include/point3d.incl
< kfpara.o: ../../../include/point2d.incl ../../../include/varia.incl
< kfpara.o: ../../../include/addrcu.incl ../../../include/nonhyd.incl
---
> kfpara.o: ../../../include/pmoist.incl ../../../include/varia.incl
> kfpara.o: ../../../include/addrcu.incl
===================================================================
physics/cumulus/kuo/cupara2.F
diff -r3.5 cupara2.F
57c57
<                                                                                  07NOV00.1464
---
>       REAL EE,TDPT                                                               05DEC01.700
89c89,94
<           EQT=T1*EXP(XLVOCP*Q/TTP)                                               CUPARA2.74
---
>           EE=PSG*Q/(0.622+Q)                                                     05DEC01.701
>           TDPT=1./(1./SVPT0-RV/XLV*ALOG(EE/.611))                                05DEC01.702
>           TDPT=AMIN1(TDPT,TTP)                                                   05DEC01.703
>           TLCL=TDPT-(.212+1.571E-3*(TDPT-SVPT0)-4.36E-4*                         05DEC01.704
>      +         (TTP-SVPT0))*(TTP-TDPT)                                           05DEC01.705
>           EQT=T1*EXP(XLVOCP*Q/TLCL)                                              05DEC01.706
===================================================================
physics/cumulus/shared/Makefile
diff -r3.0 -r3.1
14a15,17
> 	condload.o \
> 	envirtht.o \
> 	prof5.o \
23a27,29
> 	condload.i \
> 	envirtht.i \
> 	prof5.i \
32a39,41
> 	condload.f \
> 	envirtht.f \
> 	prof5.f \
67a77,91
> OBJS_KF =\
> 	condload.o \
> 	envirtht.o \
> 	prof5.o
> 
> SRC_KF =\
> 	condload.i \
> 	envirtht.i \
> 	prof5.i
> 
> SRCF_KF =\
> 	condload.f \
> 	envirtht.f \
> 	prof5.f
> 
79a104,106
> kf:: $(OBJS_KF)
> 	$(AR) $(TARGETDIR)lib$(LIBTARGET).a $(OBJS_KF)
> 
85a113,114
> kf_code:: $(SRC_KF)
> 
94a124,125
> kf_little_f:: $(SRCF_KF) $(OBJS_KF)
> 	$(AR) $(TARGETDIR)lib$(LIBTARGET).a $(OBJS_KF)
===================================================================
physics/explicit/gsfc/godmic.F
diff -r3.0 godmic.F
4a5,10
> C                                                                                05DEC01.707
> C***********************************************************************         05DEC01.708
> C     RECENT CHANGES (6.25.01) BY SCOTT BRAUN INCLUDE                            05DEC01.709
> C     INCLUSION OF A SMALL FALL SPEED FOR CLOUD ICE OF 20 CM/S                   05DEC01.710
> C***********************************************************************         05DEC01.711
> C                                                                                05DEC01.712
34c40
<       DIMENSION DT5P(MIX,MKX),DZ(MIX,MKX),PRECIP(MIX)                            GODMIC.34
---
>       DIMENSION DT5P(MIX,MKX),DZ(MIX,MKX),PRECIP(MIX),VFI(MIX,MKX)               05DEC01.713
46a53
>           VFI(I,K)=20.0                                                          05DEC01.714
81c88
<      +     TA15P,QA15P,P005P,PI05P,VFR,VFS,VFG,PRECIP,IST,IEND,KL)               GODMIC.81
---
>      +     TA15P,QA15P,P005P,PI05P,VFR,VFS,VFG,PRECIP,IST,IEND,KL)               05DEC01.715
87a95
>       CALL FALFLUX(QCI5P,VFI,RHO5P,DZ,KL,DT,IST,IEND)                            05DEC01.716
===================================================================
physics/explicit/reisner1/Makefile
diff -r3.1 -r3.2
60c60
< exmoisr.o: ../../../include/pmoist.incl
---
> exmoisr.o: ../../../include/pmoist.incl ../../../include/nhcnst.incl
68a69
> lexmoisr.o: ../../../include/nhcnst.incl
===================================================================
physics/explicit/reisner1/exmoisr.F
diff -r3.8 exmoisr.F
4c4
<      &                   PSB,RPSB,RAINNC,IN,J,IST,IEN)                           07NOV00.1483
---
>      &                   PSB,RPSB,RAINNC,SNOWNCT,IN,J,IST,IEN)                   05DEC01.717
32a33
> #     include <nhcnst.incl>                                                      05DEC01.718
45c46
<       REAL RAINNC(MIX,MJX)                                                       EXMOISR.42
---
>       REAL RAINNC(MIX,MJX),      SNOWNCT(MIX,MJX)                                05DEC01.719
53c54
<       REAL FR(MKX),FS(MKX),FI(MKX)                                               07NOV00.1491
---
>       REAL FR(MKX),FS(MKX),FI(MKX),RHOFAC(MKX)                                   05DEC01.720
56c57
<       REAL FR(MIX,MKX),FS(MIX,MKX),FI(MIX,MKX)                                   07NOV00.1494
---
>       REAL FR(MIX,MKX),FS(MIX,MKX),FI(MIX,MKX),RHOFAC(MIX,MKX)                   05DEC01.721
120a122
>       g_rcp = 1.0/g                                                              05DEC01.722
578a581
>           RHOFAC(K)=RHO0(I,J,K)/(PSB(I,J)*1000.)/RHO2                            05DEC01.723
601,604c604,607
<           rcp_nstep=1/NSTEP                                                      07NOV00.1630
<           FALTNDR=FALOUTR(K)*DSIGMA_RCP(K)                                       07NOV00.1631
<           FALTNDS=FALOUTS(K)*DSIGMA_RCP(K)                                       07NOV00.1632
<           FALTNDI=FALOUTI(K)*DSIGMA_RCP(K)                                       07NOV00.1633
---
>           rcp_nstep=1.0/NSTEP                                                    05DEC01.724
>           FALTNDR=RHOFAC(K)*FALOUTR(K)*DSIGMA_RCP(K)                             05DEC01.725
>           FALTNDS=RHOFAC(K)*FALOUTS(K)*DSIGMA_RCP(K)                             05DEC01.726
>           FALTNDI=RHOFAC(K)*FALOUTI(K)*DSIGMA_RCP(K)                             05DEC01.727
612,614c615,617
<             FALTNDR=(FALOUTR(K)-FALOUTR(K-1))*DSIGMA_RCP(K)                      07NOV00.1641
<             FALTNDS=(FALOUTS(K)-FALOUTS(K-1))*DSIGMA_RCP(K)                      07NOV00.1642
<             FALTNDI=(FALOUTI(K)-FALOUTI(K-1))*DSIGMA_RCP(K)                      07NOV00.1643
---
>             FALTNDR=RHOFAC(K)*(FALOUTR(K)-FALOUTR(K-1))*DSIGMA_RCP(K)            05DEC01.728
>             FALTNDS=RHOFAC(K)*(FALOUTS(K)-FALOUTS(K-1))*DSIGMA_RCP(K)            05DEC01.729
>             FALTNDI=RHOFAC(K)*(FALOUTI(K)-FALOUTI(K-1))*DSIGMA_RCP(K)            05DEC01.730
628,630c631,633
<           FALTNDR=FALOUTR(K)/DSIGMA(K)                                           EXMOISR.463
<           FALTNDS=FALOUTS(K)/DSIGMA(K)                                           EXMOISR.464
<           FALTNDI=FALOUTI(K)/DSIGMA(K)                                           EXMOISR.465
---
>           FALTNDR=RHOFAC(K)*FALOUTR(K)/DSIGMA(K)                                 05DEC01.731
>           FALTNDS=RHOFAC(K)*FALOUTS(K)/DSIGMA(K)                                 05DEC01.732
>           FALTNDI=RHOFAC(K)*FALOUTI(K)/DSIGMA(K)                                 05DEC01.733
638,640c641,643
<             FALTNDR=(FALOUTR(K)-FALOUTR(K-1))/DSIGMA(K)                          EXMOISR.473
<             FALTNDS=(FALOUTS(K)-FALOUTS(K-1))/DSIGMA(K)                          EXMOISR.474
<             FALTNDI=(FALOUTI(K)-FALOUTI(K-1))/DSIGMA(K)                          EXMOISR.475
---
>             FALTNDR=RHOFAC(K)*(FALOUTR(K)-FALOUTR(K-1))/DSIGMA(K)                05DEC01.734
>             FALTNDS=RHOFAC(K)*(FALOUTS(K)-FALOUTS(K-1))/DSIGMA(K)                05DEC01.735
>             FALTNDI=RHOFAC(K)*(FALOUTI(K)-FALOUTI(K-1))/DSIGMA(K)                05DEC01.736
654,655c657
<       G_RCP = 1.0/G                                                              07NOV00.1659
<       RAINNC(I,J)=RAINNC(I,J)+(FALOUTR(KL)+FALOUTS(KL)+FALOUTI(KL))*         EX  07NOV00.1660
---
>       RAINNC(I,J)=RAINNC(I,J)+(FALOUTR(KL)+FALOUTS(KL)+FALOUTI(KL))*             05DEC01.737
656a659,660
> c      snownct stores current timestep snowfall for ifsnow=2 option              05DEC01.738
>       SNOWNCT(I,J)=(FALOUTS(KL)+FALOUTI(KL))*DTMIN*6000./G/NSTEP                 05DEC01.739
658c662
<       RAINNC(I,J)=RAINNC(I,J)+(FALOUTR(KL)+FALOUTS(KL)+FALOUTI(KL))*         EX  07NOV00.1663
---
>       RAINNC(I,J)=RAINNC(I,J)+(FALOUTR(KL)+FALOUTS(KL)+FALOUTI(KL))*             05DEC01.740
659a664,665
> c      snownct stores current timestep snowfall for ifsnow=2 option              05DEC01.741
>       SNOWNCT(I,J)=(FALOUTS(KL)+FALOUTI(KL))*DTMIN*6000./G/NSTEP                 05DEC01.742
===================================================================
physics/explicit/reisner1/lexmoisr.F
diff -r3.3 lexmoisr.F
3c3
<      &                   PSB,RAINNC,IN,J,IST,IEN)                                LEXMOISR.3
---
>      &                   PSB,RAINNC,SNOWNCT,IN,J,IST,IEN)                        05DEC01.743
39c39
<       REAL RAINNC(MIX,MJX)                                                       LEXMOISR.39
---
>       REAL RAINNC(MIX,MJX), SNOWNCT(MIX,MJX)                                     05DEC01.744
63c63
<      1     FALOUTR(MKX)                                                          LEXMOISR.63
---
>      1     FALOUTR(MKX),RHOFAC(MKX)                                              05DEC01.745
489a490
>           RHOFAC(K)=RHO0(I,J,K)/(PSB(I,J)*1000.)/RHO2                            05DEC01.746
510,512c511,513
<           FALTNDR=FALOUTR(K)/DSIGMA(K)                                           LEXMOISR.507
<           FALTNDS=FALOUTS(K)/DSIGMA(K)                                           LEXMOISR.508
<           FALTNDI=FALOUTI(K)/DSIGMA(K)                                           LEXMOISR.509
---
>           FALTNDR=RHOFAC(K)*FALOUTR(K)/DSIGMA(K)                                 05DEC01.747
>           FALTNDS=RHOFAC(K)*FALOUTS(K)/DSIGMA(K)                                 05DEC01.748
>           FALTNDI=RHOFAC(K)*FALOUTI(K)/DSIGMA(K)                                 05DEC01.749
520,522c521,523
<             FALTNDR=(FALOUTR(K)-FALOUTR(K-1))/DSIGMA(K)                          LEXMOISR.517
<             FALTNDS=(FALOUTS(K)-FALOUTS(K-1))/DSIGMA(K)                          LEXMOISR.518
<             FALTNDI=(FALOUTI(K)-FALOUTI(K-1))/DSIGMA(K)                          LEXMOISR.519
---
>             FALTNDR=RHOFAC(K)*(FALOUTR(K)-FALOUTR(K-1))/DSIGMA(K)                05DEC01.750
>             FALTNDS=RHOFAC(K)*(FALOUTS(K)-FALOUTS(K-1))/DSIGMA(K)                05DEC01.751
>             FALTNDI=RHOFAC(K)*(FALOUTI(K)-FALOUTI(K-1))/DSIGMA(K)                05DEC01.752
536a538
>           SNOWNCT(I,J)=(FALOUTS(KL)+FALOUTI(KL))*DTMIN*6000./G/NSTEP             05DEC01.753
===================================================================
physics/explicit/reisner2/Makefile
diff -r3.0 -r3.1
45c45
< exmoisg.o: ../../../include/nonhyd.incl ../../../include/nhcnst.incl
---
> exmoisg.o: ../../../include/nhcnst.incl
===================================================================
physics/explicit/shared/consat.F
diff -r3.0 consat.F
6a7,11
> C     RECENT CHANGES (6.25.01) BY SCOTT BRAUN INCLUDE                            05DEC01.754
> C         * OPTION TO CHOOSE HAIL OR GRAUPEL AS THIRD ICE CATEGORY               05DEC01.755
> C         * OPTION OF SATURATION ADJUSTMENT SCHEMES                              05DEC01.756
> C         * INCLUSION OF GAMMA FUNCTION FOR EASIER VARIATION OF FALL             05DEC01.757
> C           SPEED COEFFICIENTS                                                   05DEC01.758
8c13
<       COMMON/GSIZE/ TNW,TNSS,TNG,ROQR,ROQS,ROQG                                  CONSAT.8
---
>       COMMON/GSIZE/ TNW,TNSS,TNG,ROQR,ROQS,ROQG                                  05DEC01.759
14c19
<      2   RN12,RN12A(31),RN12B(31),RN13(31),RN14,RN15,RN15A,RN16,RN17,            CONSAT.14
---
>      2   RN12,RN12A(31),RN12B(31),RN14,RN15,RN15A,RN16,RN17,                     05DEC01.760
17c22
<      5   RN30C,RN31,BETA,RN32                                                    CONSAT.17
---
>      5   RN30C,RN31,BETA,RN32,AMI40,AMI50,AMI100,IHAIL,IWATER                    05DEC01.761
29,44c34,54
< C                                                                                CONSAT.29
< C***   DEFINE THE DENSITY AND SIZE DISTRIBUTION OF PRECIPITATION                 CONSAT.30
< C                                                                                CONSAT.31
<       CP=1.003E7                                                                 CONSAT.32
<       ROQR=1.                                                                    CONSAT.33
<       TNW=.08                                                                    CONSAT.34
<       ROQS=.1                                                                    CONSAT.35
< CCCC FOR HAIL CCCCCC                                                             CONSAT.36
<       TNSS=.03                                                                   CONSAT.37
<       ROQG=.913                                                                  CONSAT.38
<       TNG=.0004                                                                  CONSAT.39
< CCCC FOR GRAUPEL CCCCCC                                                          CONSAT.40
< CC        TNSS=.04                                                               CONSAT.41
< CC        ROQG=.4                                                                CONSAT.42
< CC        TNG=.04                                                                CONSAT.43
< CCCCCCCCCCCCCCCCCCCCCCC                                                          CONSAT.44
---
> C                                                                                05DEC01.762
> C                                                                                05DEC01.763
> C     USE GRAUPEL OR HAIL (0=GRAUPEL, 1=HAIL)                                    05DEC01.764
> C                                                                                05DEC01.765
>                                                                                  05DEC01.766
>       IHAIL=0                                                                    05DEC01.767
>                                                                                  05DEC01.768
> C                                                                                05DEC01.769
> C*****   IWATER=0 USES A SLIGHT VARIANT OF THE ORIGINAL TAO ET AL METHOD.        05DEC01.770
> C*****   THE ONLY DIFFERENCE IS THAT THE WEIGHTING BETWEEN THE LIQUID            05DEC01.771
> C*****   AND ICE SATURATION VALUES IS DONE BY TEMPERATURE RATHER THAN MASS.      05DEC01.772
> C*****   IWATER=1 USES A SEQUENTIAL METHOD IN WHICH THE ADJUSTMENT IS FIRST      05DEC01.773
> C*****   DONE FOR LIQUID WATER FOR TEMPERATURES WARMER THAN 253K, THEN FOR       05DEC01.774
> C*****   ICE ONLY WHERE THE TEMPERATURE IS COLDER THAN 258K. THE MAIN EFFECT OF  05DEC01.775
> C*****   THIS CHANGE IS TO REDUCE THE AMOUNT OF SUPERCOOLED WATER AT VERY COLD   05DEC01.776
> C*****   TEMPERATURES                                                            05DEC01.777
>                                                                                  05DEC01.778
>       IWATER=1                                                                   05DEC01.779
>                                                                                  05DEC01.780
> C*****************************************************************               05DEC01.781
>                                                                                  05DEC01.782
45a56
>       CP=1.003E7                                                                 05DEC01.783
75a87,88
>                                                                                  05DEC01.784
> C***   DEFINE THE DENSITY AND SIZE DISTRIBUTION OF PRECIPITATION                 05DEC01.785
77,78c90,106
<       AGG=1400.                                                                  CONSAT.77
<       BGG=.5                                                                     CONSAT.78
---
> C**********   HAIL OR GRAUPEL PARAMETERS   **********                            05DEC01.786
>       if (ihail .eq. 1) then                                                     05DEC01.787
>         ROQG=.9                                                                  05DEC01.788
>         TNG=.002                                                                 05DEC01.789
>         CD1=6.E-1                                                                05DEC01.790
>         CD2=4.*GRVT/(3.*CD1)                                                     05DEC01.791
>         AGG=SQRT(CD2*ROQG)                                                       05DEC01.792
>         BGG=.5                                                                   05DEC01.793
>       else                                                                       05DEC01.794
>         ROQG=.4                                                                  05DEC01.795
>         TNG=.04                                                                  05DEC01.796
>         AGG=351.2                                                                05DEC01.797
>         BGG=.37                                                                  05DEC01.798
>       endif                                                                      05DEC01.799
> C**********         SNOW PARAMETERS        **********                            05DEC01.800
>       ROQS=.1                                                                    05DEC01.801
>       TNSS=1.                                                                    05DEC01.802
80a109,111
> C**********         RAIN PARAMETERS        **********                            05DEC01.803
>       ROQR=1.                                                                    05DEC01.804
>       TNW=.08                                                                    05DEC01.805
82a114,116
> C*****************************************************************               05DEC01.806
> C                                                                                05DEC01.807
> C                                                                                05DEC01.808
89,122c123,132
< CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC           CONSAT.89
<       GA3=2.                                                                     CONSAT.90
<       GA4=6.                                                                     CONSAT.91
<       GA5=24.                                                                    CONSAT.92
<       GA6=120.                                                                   CONSAT.93
<       GA7=720.                                                                   CONSAT.94
<       GA8=5040.                                                                  CONSAT.95
<       GA9=40320.                                                                 CONSAT.96
<       GA3B=4.6941552                                                             CONSAT.97
<       GA4B=17.83779                                                              CONSAT.98
<       GA6B=496.6041                                                              CONSAT.99
<       GA5BH=1.827363                                                             CONSAT.100
<       GA4G=11.63177                                                              CONSAT.101
<       GA3G=3.3233625                                                             CONSAT.102
<       GA5GH=1.608355                                                             CONSAT.103
<       IF(BGG.EQ.0.37)GA4G=9.730877                                               CONSAT.104
<       IF(BGG.EQ.0.37)GA3G=2.8875                                                 CONSAT.105
<       IF(BGG.EQ.0.37)GA5GH=1.526425                                              CONSAT.106
<       GA3D=2.54925                                                               CONSAT.107
<       GA4D=8.285063                                                              CONSAT.108
<       GA5DH=1.456943                                                             CONSAT.109
<       IF(BSS.EQ.0.57)GA3D=3.59304                                                CONSAT.110
<       IF(BSS.EQ.0.57)GA4D=12.82715                                               CONSAT.111
<       IF(BSS.EQ.0.57)GA5DH=1.655588                                              CONSAT.112
<       IF(BSS.EQ.0.11)GA3D=2.218906                                               CONSAT.113
<       IF(BSS.EQ.0.11)GA4D=6.900796                                               CONSAT.114
<       IF(BSS.EQ.0.11)GA5DH=1.382792                                              CONSAT.115
< CCCCCC        LIN ET AL., 1983                     CCCCCCCCCCCCCCCCCCCC          CONSAT.116
<       AC1=AWW                                                                    CONSAT.117
<       BC1=BWW                                                                    CONSAT.118
<       CC1=ASS                                                                    CONSAT.119
<       DC1=BSS                                                                    CONSAT.120
<       CD1=6.E-1                                                                  CONSAT.121
<       CD2=4.*GRVT/(3.*CD1)                                                       CONSAT.122
---
>       GA3B=gamma(3.+BWW)                                                         05DEC01.809
>       GA4B=gamma(4.+BWW)                                                         05DEC01.810
>       GA6B=gamma(6.+BWW)                                                         05DEC01.811
>       GA5BH=gamma((5.+BWW)/2.)                                                   05DEC01.812
>       GA3G=gamma(3.+BGG)                                                         05DEC01.813
>       GA4G=gamma(4.+BGG)                                                         05DEC01.814
>       GA5GH=gamma((5.+BGG)/2.)                                                   05DEC01.815
>       GA3D=gamma(3.+BSS)                                                         05DEC01.816
>       GA4D=gamma(4.+BSS)                                                         05DEC01.817
>       GA5DH=gamma((5.+BSS)/2.)                                                   05DEC01.818
126,128c136,138
<       VRC=AC1*GA4B/(6.*ZRC**BWW)                                                 CONSAT.126
<       VSC=CC1*GA4D/(6.*ZSC**BSS)                                                 CONSAT.127
<       VGC=GA4G*SQRT(CD2*ROQG/ZGC)/6.                                             CONSAT.128
---
>       VRC=AWW*GA4B/(6.*ZRC**BWW)                                                 05DEC01.819
>       VSC=ASS*GA4D/(6.*ZSC**BSS)                                                 05DEC01.820
>       VGC=AGG*GA4G/(6.*ZGC**BGG)                                                 05DEC01.821
131d140
<       BND1=6.E-4                                                                 CONSAT.131
133,134c142,144
<       BND2=1.E-3                                                                 CONSAT.133
<       RN3=.25*CPI*TNSS*CC1*GA3D                                                  CONSAT.134
---
>       BND1=5.E-4                                                                 05DEC01.822
>       BND2=1.25E-3                                                               05DEC01.823
>       RN3=.25*CPI*TNSS*ASS*GA3D                                                  05DEC01.824
136c146
<       RN4=.25*CPI*ESW*TNSS*CC1*GA3D                                              CONSAT.136
---
>       RN4=.25*CPI*ESW*TNSS*ASS*GA3D                                              05DEC01.825
138c148
<       RN5=.25*CPI*ERI*TNW*AC1*GA3B                                               CONSAT.138
---
>       RN5=.25*CPI*ERI*TNW*AWW*GA3B                                               05DEC01.826
140c150
<       RN6=CPI2*ERI*TNW*AC1*ROQR*GA6B*AMI                                         CONSAT.140
---
>       RN6=CPI2*ERI*TNW*AWW*ROQR*GA6B*AMI                                         05DEC01.827
146c156
<       RN101=.31*GA5DH*SQRT(CC1)                                                  CONSAT.146
---
>       RN101=.31*GA5DH*SQRT(ASS)                                                  05DEC01.828
150,151c160,162
<       AMI50=4.8E-7                                                               CONSAT.150
<       AMI40=3.84E-9                                                              CONSAT.151
---
>       AMI40=2.41e-8                                                              05DEC01.829
>       AMI50=3.76e-8                                                              05DEC01.830
>       AMI100=1.51e-7                                                             05DEC01.831
153,154c164,165
<       UI50=100.                                                                  CONSAT.153
<       RI50=5.E-3                                                                 CONSAT.154
---
>       UI50=20.                                                                   05DEC01.832
>       RI50=10.e-3                                                                05DEC01.833
159,161c170,172
<         RN13(K)=A1(K)*Y1/(AMI50**Y1-AMI40**Y1)                                   CONSAT.159
<         RN12A(K)=RN13(K)/AMI50                                                   CONSAT.160
<         RN12B(K)=A1(K)*AMI50**A2(K)                                              CONSAT.161
---
>         RN13=A1(K)*Y1/(AMI100**Y1-AMI40**Y1)                                     05DEC01.834
>         RN12A(K)=RN13/AMI100                                                     05DEC01.835
>         RN12B(K)=A1(K)*AMI100**A2(K)                                             05DEC01.836
165d175
<       RN14=.25*CPI*EGW*TNG*GA3G*SQRT(CD2*ROQG)                                   CONSAT.165
167,169c177,180
<       RN15=.25*CPI*EGI*TNG*GA3G*SQRT(CD2*ROQG)                                   CONSAT.167
<       EGI=1.                                                                     CONSAT.168
<       RN15A=.25*CPI*EGI*TNG*GA3G*SQRT(CD2*ROQG)                                  CONSAT.169
---
>       EGI2=1.                                                                    05DEC01.837
>       RN14=.25*CPI*EGW*TNG*GA3G*agg                                              05DEC01.838
>       RN15=.25*CPI*EGI*TNG*GA3G*agg                                              05DEC01.839
>       RN15A=.25*CPI*EGI2*TNG*GA3G*agg                                            05DEC01.840
173c184
<       RN17A=.31*GA5GH*(CD2*ROQG)**.25                                            CONSAT.173
---
>       RN17A=.31*GA5GH*sqrt(agg)                                                  05DEC01.841
181c192
<       RN19A=.31*GA5GH*(CD2*ROQG)**.25                                            CONSAT.181
---
>       RN19A=.31*GA5GH*sqrt(agg)                                                  05DEC01.842
185,186c196,197
<       RN20B=.31*GA5GH*(CD2*ROQG)**.25                                            CONSAT.185
<       BND3=2.E-3                                                                 CONSAT.186
---
>       RN20B=.31*GA5GH*sqrt(agg)                                                  05DEC01.843
>       BND3=.5E-3                                                                 05DEC01.844
189c200
<       RN22=.25*CPI*ERW*AC1*TNW*GA3B                                              CONSAT.189
---
>       RN22=.25*CPI*ERW*AWW*TNW*GA3B                                              05DEC01.845
191c202
<       RN23A=.31*GA5BH*SQRT(AC1)                                                  CONSAT.191
---
>       RN23A=.31*GA5BH*SQRT(AWW)                                                  05DEC01.846
193,194c204,205
<       CN0=1.E-8                                                                  CONSAT.193
<       RN25=CN0/1000.                                                             CONSAT.194
---
>       CN0=1.E-6                                                                  05DEC01.847
>       RN25=CN0                                                                   05DEC01.848
199c210
<       BETA=-.6                                                                   CONSAT.199
---
>       BETA=-.46                                                                  05DEC01.849
===================================================================
physics/explicit/simple/exmoiss.F
diff -r3.2 exmoiss.F
44c44
<       REAL      RGV(MKX),FALOUT(MKX)                                             EXMOISS.44
---
>       REAL      RGV(MKX),FALOUT(MKX),RHOFAC(MKX)                                 05DEC01.850
285a286
>           RHOFAC(K)=RHO0(I,J,K)/(PSB(I,J)*1000.)/RHO2                            05DEC01.851
305c306
<           FALTND=FALOUT(K)/DSIGMA(K)                                             EXMOISS.302
---
>           FALTND=RHOFAC(K)*FALOUT(K)/DSIGMA(K)                                   05DEC01.852
308c309
<           FALTNDC=FALOUTC(K)/DSIGMA(K)                                           EXMOISS.305
---
>           FALTNDC=RHOFAC(K)*FALOUTC(K)/DSIGMA(K)                                 05DEC01.853
312c313
<             FALTND=(FALOUT(K)-FALOUT(K-1))/DSIGMA(K)                             EXMOISS.309
---
>             FALTND=RHOFAC(K)*(FALOUT(K)-FALOUT(K-1))/DSIGMA(K)                   05DEC01.854
315c316
<             FALTNDC=(FALOUTC(K)-FALOUTC(K-1))/DSIGMA(K)                          EXMOISS.312
---
>             FALTNDC=RHOFAC(K)*(FALOUTC(K)-FALOUTC(K-1))/DSIGMA(K)                05DEC01.855
===================================================================
physics/explicit/simple/lexmoiss.F
diff -r3.2 lexmoiss.F
42c42
<       DIMENSION RGV(MKX),FALOUT(MKX)                                             LEXMOISS.42
---
>       DIMENSION RGV(MKX),FALOUT(MKX),RHOFAC(MKX)                                 05DEC01.856
284a285
>           RHOFAC(K)=RHO0(I,J,K)/(PSB(I,J)*1000.)/RHO2                            05DEC01.857
304c305
<           FALTND=FALOUT(K)/DSIGMA(K)                                             LEXMOISS.301
---
>           FALTND=RHOFAC(K)*FALOUT(K)/DSIGMA(K)                                   05DEC01.858
307c308
<           FALTNDC=FALOUTC(K)/DSIGMA(K)                                           LEXMOISS.304
---
>           FALTNDC=RHOFAC(K)*FALOUTC(K)/DSIGMA(K)                                 05DEC01.859
311c312
<             FALTND=(FALOUT(K)-FALOUT(K-1))/DSIGMA(K)                             LEXMOISS.308
---
>             FALTND=RHOFAC(K)*(FALOUT(K)-FALOUT(K-1))/DSIGMA(K)                   05DEC01.860
314c315
<             FALTNDC=(FALOUTC(K)-FALOUTC(K-1))/DSIGMA(K)                          LEXMOISS.311
---
>             FALTNDC=RHOFAC(K)*(FALOUTC(K)-FALOUTC(K-1))/DSIGMA(K)                05DEC01.861
===================================================================
physics/pbl_sfc/btpbl/bound.F
diff -r3.0 bound.F
158a159,161
> C     LIMIT TO PREVENT NEGATIVE OR ZERO DENOMINATOR                              05DEC01.862
>       PSI1=AMIN1(PSI1,0.9*TL1)                                                   05DEC01.863
>       PSI2=AMIN1(PSI2,0.9*TL2)                                                   05DEC01.864
===================================================================
physics/pbl_sfc/btpbl/outpb.F
diff -r3.0 outpb.F
26a27
> C_FLIC_BEGIN_NOFLIC                                                              05DEC01.865
80a82
> #ifndef MPP1                                                                     05DEC01.1527
82a85,89
> #else                                                                            05DEC01.1528
>           IF(FLIC_L2G_M(I).GE.IBNES.AND.FLIC_L2G_M(I).LE.IENES-1.AND.            05DEC01.866
>      +       FLIC_L2G_N(J).GE.JBNES.AND.FLIC_L2G_N(J).LE.JENES-1                 05DEC01.867
>      +      )THEN                                                                05DEC01.1529
> #endif                                                                           05DEC01.1530
88a96
> #ifndef MPP1                                                                     05DEC01.1531
90a99,103
> #else                                                                            05DEC01.1532
>           IF(FLIC_L2G_M(I).GE.IBNES.AND.FLIC_L2G_M(I).LE.IENES.AND.              05DEC01.868
>      +       FLIC_L2G_N(J).GE.JBNES.AND.FLIC_L2G_N(J).LE.JENES                   05DEC01.869
>      +      )THEN                                                                05DEC01.870
> #endif                                                                           05DEC01.1533
108a122
> C_FLIC_END_NOFLIC                                                                05DEC01.871
===================================================================
physics/pbl_sfc/gspbl/gspbl.F
diff -r3.13 gspbl.F
779c779,781
<             PSIH(I)=-0.5*GZ1OZ0(I)                                               GSPBL.728
---
>             PSIH(I)=-10.*GZ1OZ0(I)                                               05DEC01.872
> C    LOWER LIMIT ON PSI IN STABLE CONDITIONS                                     05DEC01.873
>             PSIM(I)=AMAX1(PSIM(I),-10.)                                          05DEC01.874
789a792,793
> C    LOWER LIMIT ON PSI IN STABLE CONDITIONS                                     05DEC01.875
>             PSIM(I)=AMAX1(PSIM(I),-10.)                                          05DEC01.876
===================================================================
physics/pbl_sfc/hirpbl/hirpbl.F
diff -r3.7 hirpbl.F
59a60,63
> C        ADD IZ0TOPT SWITCH AND 2M T & Q, 10M U & V                   C          05DEC01.877
> C                                                                     C          05DEC01.878
> C        MODIFIED MOIST VERTICAL DIFFUSION TO PREVENT LOW-CLOUD BIAS  C          05DEC01.879
> C                                                                     C          05DEC01.880
89c93
<      6              PS(MIX)                                                      HIRPBL.87
---
>      6              PS(MIX), DENOMQ(MIX)                                         05DEC01.881
90a95,98
>       REAL      gz10oz0(mix),gz2oz0(mix),psih10(mix),psih2(mix),                 05DEC01.882
>      -     psim10(mix),psim2(mix),u10(mix),v10(mix),th2(mix)                     05DEC01.883
>      -     ,gz1oz0q(mix),gz2oz0q(mix),q2(mix)                                    05DEC01.884
>                                                                                  05DEC01.885
125c133,134
<       REAL    CHI,DTG,PSIX,USTM,ZL,DTTHX,WSPDX,USTM2,XKZ31,DTDZ                  HIRPBL.123
---
>       REAL    CHI,DTG,PSIX,ZL,DTTHX,WSPDX,USTM2,XKZ31,DTDZ                       05DEC01.886
>       REAL    PSIX10,PSIT,PSIQ,PSIT2,PSIQ2,ZOL10,ZOL2                            05DEC01.887
129c138
<       REAL    MITER0,DTMITE                                                      07NOV00.1753
---
>       REAL    MITER0,DTMITE,VISC,RESTAR                                          05DEC01.888
136a146
>                                                                                  05DEC01.889
397a408,419
>           GZ10OZ0(I)=ALOG(10./ZNT(I,J))                                          05DEC01.890
>           GZ2OZ0(I)=ALOG(2./ZNT(I,J))                                            05DEC01.891
>         IF(IZ0TOPT.EQ.0)THEN                                                     05DEC01.892
> C CARLSON-BOLAND FORMULA                                                         05DEC01.893
>           IF((XLAND(I,J)-1.5).GE.0)THEN                                          05DEC01.894
>             ZL=ZNT(I,J)                                                          05DEC01.895
>           ELSE                                                                   05DEC01.896
>             ZL=0.01                                                              05DEC01.897
>           ENDIF                                                                  05DEC01.898
>           GZ1OZ0Q(I)=ALOG(KARMAN*UST(I,J)*ZA(I,KL)/KA+ZA(I,KL)/ZL)               05DEC01.899
>           GZ2OZ0Q(I)=ALOG(KARMAN*UST(I,J)*2./KA+2./ZL)                           05DEC01.900
>         ENDIF                                                                    05DEC01.901
446,447c468,470
<             IF((QCX(I,KL)+QIX(I,KL)).GT.0.01E-3.AND.(QCX(I,KLM)+                 HIRPBL.447
<      +        QIX(I,KLM)).GT.0.01E-3)THEN                                        HIRPBL.448
---
> C     CHANGED FROM K-1 AND K TO K IN NEXT LINE.                                  05DEC01.902
> C     CLOUDY MIXING NOW EXTENDS ABOVE CLOUD.                                     05DEC01.903
>               IF((QCX(I,KL)+QIX(I,KL)).GT.0.01E-3)THEN                           05DEC01.904
521a545,552
> C DIAGNOSTICS                                                                    05DEC01.905
>           ZOL10=10./ZA(I,KL)*ZOL(I,J)                                            05DEC01.906
>           PSIM10(I)=-ZOL10*(1.86+ZOL10*(1.07+0.249*ZOL10))                       05DEC01.907
>           PSIH10(I)=-ZOL10*(3.23+ZOL10*(1.99+0.474*ZOL10))                       05DEC01.908
>           ZOL2=2./ZA(I,KL)*ZOL(I,J)                                              05DEC01.909
>           PSIM2(I)=-ZOL2*(1.86+ZOL2*(1.07+0.249*ZOL2))                           05DEC01.910
>           PSIH2(I)=-ZOL2*(3.23+ZOL2*(1.99+0.474*ZOL2))                           05DEC01.911
>                                                                                  05DEC01.912
529a561
>           PSIX10=GZ10OZ0(I)-PSIM10(I)                                            05DEC01.913
531,537c563,625
<           USTM=AMAX1(UST(I,J),0.1)                                               HIRPBL.532
<           IF((XLAND(I,J)-1.5).GE.0)THEN                                          HIRPBL.533
<             UST(I,J)=UST(I,J)                                                    HIRPBL.534
<           ELSE                                                                   HIRPBL.535
<             UST(I,J)=USTM                                                        HIRPBL.536
<           ENDIF                                                                  HIRPBL.537
<           MOL(I,J)=KARMAN*DTG/(GZ1OZ0(I)-PSIH(I))                                HIRPBL.538
---
>           IF((XLAND(I,J)-1.5).LE.0.)THEN                                         05DEC01.914
> C LAND: LOWER LIMIT ON USTAR                                                     05DEC01.915
>             UST(I,J)=AMAX1(UST(I,J),0.1)                                         05DEC01.916
>           ELSE                                                                   05DEC01.917
> C WATER: ROUGHNESS LENGTH DEPENDS ON USTAR                                       05DEC01.918
>             ZNT(I,J)=CZO*UST(I,J)*UST(I,J)/G+OZO                                 05DEC01.919
>           ENDIF                                                                  05DEC01.920
>         IF(IZ0TOPT.EQ.0)THEN                                                     05DEC01.921
> C CARLSON-BOLAND FORMULA                                                         05DEC01.922
>           PSIT=GZ1OZ0(I)-PSIH(I)                                                 05DEC01.923
>           PSIQ=GZ1OZ0Q(I)-PSIH(I)                                                05DEC01.924
>           PSIT2=GZ2OZ0(I)-PSIH2(I)                                               05DEC01.925
>           PSIQ2=GZ2OZ0Q(I)-PSIH2(I)                                              05DEC01.926
>         ELSE IF(IZ0TOPT.EQ.1)THEN                                                05DEC01.927
> C GARRATT FORMULA                                                                05DEC01.928
>           IF((XLAND(I,J)-1.5).GE.0)THEN                                          05DEC01.929
> C WATER: CALCULATE ROUGHNESS REYNOLDS NUMBER                                     05DEC01.930
> C        KINEMATIC VISCOSITY OF AIR (LINEAR APPROX TO                            05DEC01.931
> C                 TEMP DEPENDENCE AT SEA LEVEL)                                  05DEC01.932
>             VISC=(1.32+0.009*(SCR3(I,KL)-273.15))*1.E-5                          05DEC01.933
>             RESTAR=UST(I,J)*ZNT(I,J)/VISC                                        05DEC01.934
>             PSIT=GZ1OZ0(I)-PSIH(I)+2.48*SQRT(SQRT(RESTAR))-2.                    05DEC01.935
>             PSIQ=GZ1OZ0(I)-PSIH(I)+2.28*SQRT(SQRT(RESTAR))-2.                    05DEC01.936
>             PSIT2=GZ2OZ0(I)-PSIH2(I)+2.48*SQRT(SQRT(RESTAR))-2.                  05DEC01.937
>             PSIQ2=GZ2OZ0(I)-PSIH2(I)+2.28*SQRT(SQRT(RESTAR))-2.                  05DEC01.938
>           ELSE                                                                   05DEC01.939
> C LAND                                                                           05DEC01.940
>             PSIT=GZ1OZ0(I)-PSIH(I)+2.                                            05DEC01.941
>             PSIQ=GZ1OZ0(I)-PSIH(I)+2.                                            05DEC01.942
>             PSIT2=GZ2OZ0(I)-PSIH2(I)+2.                                          05DEC01.943
>             PSIQ2=GZ2OZ0(I)-PSIH2(I)+2.                                          05DEC01.944
>           ENDIF                                                                  05DEC01.945
>         ELSE IF(IZ0TOPT.EQ.2)THEN                                                05DEC01.946
>           IF((XLAND(I,J)-1.5).GE.0)THEN                                          05DEC01.947
> C WATER (Z0T=Z0)                                                                 05DEC01.948
>             PSIT=GZ1OZ0(I)-PSIH(I)                                               05DEC01.949
>             PSIQ=GZ1OZ0(I)-PSIH(I)                                               05DEC01.950
>             PSIT2=GZ2OZ0(I)-PSIH2(I)                                             05DEC01.951
>             PSIQ2=GZ2OZ0(I)-PSIH2(I)                                             05DEC01.952
>           ELSE                                                                   05DEC01.953
> C LAND ZILITINKEVICH FORMULA                                                     05DEC01.954
> C        KINEMATIC VISCOSITY OF AIR (LINEAR APPROX TO                            05DEC01.955
> C                 TEMP DEPENDENCE AT SEA LEVEL)                                  05DEC01.956
>             VISC=(1.32+0.009*(SCR3(I,KL)-273.15))*1.E-5                          05DEC01.957
>             RESTAR=UST(I,J)*ZNT(I,J)/VISC                                        05DEC01.958
>             PSIT=GZ1OZ0(I)-PSIH(I)+0.1*KARMAN*SQRT(RESTAR)                       05DEC01.959
>             PSIQ=GZ1OZ0(I)-PSIH(I)+0.1*KARMAN*SQRT(RESTAR)                       05DEC01.960
>             PSIT2=GZ2OZ0(I)-PSIH2(I)+0.1*KARMAN*SQRT(RESTAR)                     05DEC01.961
>             PSIQ2=GZ2OZ0(I)-PSIH2(I)+0.1*KARMAN*SQRT(RESTAR)                     05DEC01.962
>           ENDIF                                                                  05DEC01.963
>         ENDIF                                                                    05DEC01.964
>         U10(I)=UX(I,KL)*PSIX10/PSIX                                              05DEC01.965
>         V10(I)=VX(I,KL)*PSIX10/PSIX                                              05DEC01.966
>         TH2(I)=THGB(I)+DTG*PSIT2/PSIT                                            05DEC01.967
>         Q2(I)=QGH(I)+(QX(I,KL)-QGH(I))*PSIQ2/PSIQ                                05DEC01.968
> C       LATER Q2 WILL BE OVERWRITTEN FOR LAND POINTS IN SURFCE                   05DEC01.969
>         TA2(I,J) = TH2(I)*(PS(I)/100.)**ROVCP                                    05DEC01.970
>         QA2(I,J) = Q2(I)                                                         05DEC01.971
>         UA10(I,J) = U10(I)                                                       05DEC01.972
>         VA10(I,J) = V10(I)                                                       05DEC01.973
> C                                                                                05DEC01.974
>         MOL(I,J)=KARMAN*DTG/PSIT                                                 05DEC01.975
>         DENOMQ(I)=PSIQ                                                           05DEC01.976
573,582c661
<           IF((XLAND(I,J)-1.5).GE.0)THEN                                          HIRPBL.574
<             ZNT(I,J)=CZO*UST(I,J)*UST(I,J)/G+OZO                                 HIRPBL.575
<           ENDIF                                                                  HIRPBL.576
<           IF((XLAND(I,J)-1.5).GE.0)THEN                                          HIRPBL.577
<             ZL=ZNT(I,J)                                                          HIRPBL.578
<           ELSE                                                                   HIRPBL.579
<             ZL=0.01                                                              HIRPBL.580
<           ENDIF                                                                  HIRPBL.581
<           FLQC(I)=RHOX(I)*MAVAIL(I,J)*UST(I,J)*KARMAN/(                          HIRPBL.582
<      +            ALOG(KARMAN*UST(I,J)*ZA(I,KL)/KA+ZA(I,KL)/ZL)-PSIH(I))         HIRPBL.583
---
>           FLQC(I)=RHOX(I)*MAVAIL(I,J)*UST(I,J)*KARMAN/DENOMQ(I)                  05DEC01.977
892,893c971,973
<               IF((QCX(I,K)+QIX(I,K)).GT.0.01E-3.AND.(QCX(I,K-1)+                 HIRPBL.890
<      +          QIX(I,K-1)).GT.0.01E-3)THEN                                      HIRPBL.891
---
> C     CHANGED FROM .AND. TO .OR. IN NEXT LINE.                                   05DEC01.978
> C     CLOUDY MIXING NOW EXTENDS ABOVE AND BELOW CLOUD.                           05DEC01.979
>               IF((QCX(I,K)+QIX(I,K)).GT.0.01E-3)THEN                             05DEC01.980
===================================================================
physics/pbl_sfc/mrfpbl/mrfpbl.F
diff -r3.13 mrfpbl.F
55a56,59
> C        ADD IZ0TOPT SWITCH                                           C          05DEC01.981
> C                                                                     C          05DEC01.982
> C        MODIFIED MOIST VERTICAL DIFFUSION TO PREVENT LOW-CLOUD BIAS  C          05DEC01.983
> C                                                                     C          05DEC01.984
73c77
<       REAL DTG,PSIX,PSIX10,PSIT,PSIQ,PSIT2,PSIQ2,USTM                            07NOV00.1801
---
>       REAL DTG,PSIX,PSIX10,PSIT,PSIQ,PSIT2,PSIQ2                                 05DEC01.985
79c83
<       REAL TGC,TSLC,XXT                                                          07NOV00.1807
---
>       REAL TGC,TSLC,XXT,VISC,RESTAR                                              05DEC01.986
142a147
>       REAL CKLQ(MIX,MJX)                                                         05DEC01.987
146c151,152
<       REAL SCR3(MIX,MKX),SCR4(MIX,MKX),DUM1(MIX)                                 07NOV00.1838
---
>       REAL SCR3(MIX,MKX),SCR4(MIX,MKX),DUM1(MIX),                                05DEC01.988
>      -     DENOMQ(MIX),DENOMQ2(MIX)                                              05DEC01.989
160c166
<      -     ,gz2oz0q(mix),q2(mix),tx(mix,mkx)                                     MRFPBL.108
---
>      -     ,gz1oz0q(mix),gz2oz0q(mix),q2(mix),tx(mix,mkx)                        05DEC01.990
360,365c366,375
<         IF((XLAND(I,J)-1.5).GE.0)THEN                                            MRFPBL.302
<           ZL=ZNT(I,J)                                                            MRFPBL.303
<         ELSE                                                                     MRFPBL.304
<           ZL=0.01                                                                MRFPBL.305
<         ENDIF                                                                    MRFPBL.306
<         GZ2OZ0Q(I)=ALOG(KARMAN*UST(I,J)*2./XKA+2./ZL)                            MRFPBL.307
---
>         IF(IZ0TOPT.EQ.0)THEN                                                     05DEC01.991
> C CARLSON-BOLAND FORMULA                                                         05DEC01.992
>           IF((XLAND(I,J)-1.5).GE.0)THEN                                          05DEC01.993
>             ZL=ZNT(I,J)                                                          05DEC01.994
>           ELSE                                                                   05DEC01.995
>             ZL=0.01                                                              05DEC01.996
>           ENDIF                                                                  05DEC01.997
>           GZ1OZ0Q(I)=ALOG(KARMAN*UST(I,J)*ZA(I,KL)/XKA+ZA(I,KL)/ZL)              05DEC01.998
>           GZ2OZ0Q(I)=ALOG(KARMAN*UST(I,J)*2./XKA+2./ZL)                          05DEC01.999
>         ENDIF                                                                    05DEC01.1000
516,524d525
<         PSIT=GZ1OZ0(I)-PSIH(I)                                                   MRFPBL.458
<         IF((XLAND(I,J)-1.5).GE.0)THEN                                            MRFPBL.459
<           ZL=ZNT(I,J)                                                            MRFPBL.460
<         ELSE                                                                     MRFPBL.461
<           ZL=0.01                                                                MRFPBL.462
<         ENDIF                                                                    MRFPBL.463
<         PSIQ=ALOG(KARMAN*UST(I,J)*ZA(I,KL)/XKA+ZA(I,KL)/ZL)-PSIH(I)              MRFPBL.464
<         PSIT2=GZ2OZ0(I)-PSIH2(I)                                                 MRFPBL.465
<         PSIQ2=GZ2OZ0Q(I)-PSIH2(I)                                                MRFPBL.466
525a527,577
>         IF((XLAND(I,J)-1.5).LE.0.)THEN                                           05DEC01.1001
> C LAND: LOWER LIMIT ON USTAR                                                     05DEC01.1002
>           UST(I,J)=AMAX1(UST(I,J),0.1)                                           05DEC01.1003
>         ELSE                                                                     05DEC01.1004
> C WATER: ROUGHNESS LENGTH DEPENDS ON USTAR                                       05DEC01.1005
>           ZNT(I,J)=CZO*UST(I,J)*UST(I,J)/G+OZO                                   05DEC01.1006
>         ENDIF                                                                    05DEC01.1007
>         IF(IZ0TOPT.EQ.0)THEN                                                     05DEC01.1008
> C CARLSON-BOLAND FORMULA                                                         05DEC01.1009
>           PSIT=GZ1OZ0(I)-PSIH(I)                                                 05DEC01.1010
>           PSIQ=GZ1OZ0Q(I)-PSIH(I)                                                05DEC01.1011
>           PSIT2=GZ2OZ0(I)-PSIH2(I)                                               05DEC01.1012
>           PSIQ2=GZ2OZ0Q(I)-PSIH2(I)                                              05DEC01.1013
>         ELSE IF(IZ0TOPT.EQ.1)THEN                                                05DEC01.1014
> C GARRATT FORMULA                                                                05DEC01.1015
>          IF((XLAND(I,J)-1.5).GE.0)THEN                                           05DEC01.1016
> C WATER: CALCULATE ROUGHNESS REYNOLDS NUMBER                                     05DEC01.1017
> C        KINEMATIC VISCOSITY OF AIR (LINEAR APPROX TO                            05DEC01.1018
> C                 TEMP DEPENDENCE AT SEA LEVEL)                                  05DEC01.1019
>             VISC=(1.32+0.009*(TX(I,KL)-273.15))*1.E-5                            05DEC01.1020
>             RESTAR=UST(I,J)*ZNT(I,J)/VISC                                        05DEC01.1021
>             PSIT=GZ1OZ0(I)-PSIH(I)+2.48*SQRT(SQRT(RESTAR))-2.                    05DEC01.1022
>             PSIQ=GZ1OZ0(I)-PSIH(I)+2.28*SQRT(SQRT(RESTAR))-2.                    05DEC01.1023
>             PSIT2=GZ2OZ0(I)-PSIH2(I)+2.48*SQRT(SQRT(RESTAR))-2.                  05DEC01.1024
>             PSIQ2=GZ2OZ0(I)-PSIH2(I)+2.28*SQRT(SQRT(RESTAR))-2.                  05DEC01.1025
>           ELSE                                                                   05DEC01.1026
> C LAND                                                                           05DEC01.1027
>             PSIT=GZ1OZ0(I)-PSIH(I)+2.                                            05DEC01.1028
>             PSIQ=GZ1OZ0(I)-PSIH(I)+2.                                            05DEC01.1029
>             PSIT2=GZ2OZ0(I)-PSIH2(I)+2.                                          05DEC01.1030
>             PSIQ2=GZ2OZ0(I)-PSIH2(I)+2.                                          05DEC01.1031
>           ENDIF                                                                  05DEC01.1032
>         ELSE IF(IZ0TOPT.EQ.2)THEN                                                05DEC01.1033
>           IF((XLAND(I,J)-1.5).GE.0)THEN                                          05DEC01.1034
> C WATER (Z0T=Z0)                                                                 05DEC01.1035
>             PSIT=GZ1OZ0(I)-PSIH(I)                                               05DEC01.1036
>             PSIQ=GZ1OZ0(I)-PSIH(I)                                               05DEC01.1037
>             PSIT2=GZ2OZ0(I)-PSIH2(I)                                             05DEC01.1038
>             PSIQ2=GZ2OZ0(I)-PSIH2(I)                                             05DEC01.1039
>           ELSE                                                                   05DEC01.1040
> C LAND ZILITINKEVICH FORMULA                                                     05DEC01.1041
> C        KINEMATIC VISCOSITY OF AIR (LINEAR APPROX TO                            05DEC01.1042
> C                 TEMP DEPENDENCE AT SEA LEVEL)                                  05DEC01.1043
>             VISC=(1.32+0.009*(SCR3(I,KL)-273.15))*1.E-5                          05DEC01.1044
>             RESTAR=UST(I,J)*ZNT(I,J)/VISC                                        05DEC01.1045
>             PSIT=GZ1OZ0(I)-PSIH(I)+0.1*KARMAN*SQRT(RESTAR)                       05DEC01.1046
>             PSIQ=GZ1OZ0(I)-PSIH(I)+0.1*KARMAN*SQRT(RESTAR)                       05DEC01.1047
>             PSIT2=GZ2OZ0(I)-PSIH2(I)+0.1*KARMAN*SQRT(RESTAR)                     05DEC01.1048
>             PSIQ2=GZ2OZ0(I)-PSIH2(I)+0.1*KARMAN*SQRT(RESTAR)                     05DEC01.1049
>           ENDIF                                                                  05DEC01.1050
>         ENDIF                                                                    05DEC01.1051
536,542c588,590
<         USTM=AMAX1(UST(I,J),0.1)                                                 MRFPBL.473
<         IF((XLAND(I,J)-1.5).GE.0)THEN                                            MRFPBL.474
<           UST(I,J)=UST(I,J)                                                      MRFPBL.475
<         ELSE                                                                     MRFPBL.476
<           UST(I,J)=USTM                                                          MRFPBL.477
<         ENDIF                                                                    MRFPBL.478
<         MOL(I,J)=KARMAN*DTG/(GZ1OZ0(I)-PSIH(I))/PRT                              MRFPBL.479
---
>         MOL(I,J)=KARMAN*DTG/PSIT/PRT                                             05DEC01.1052
>         DENOMQ(I)=PSIQ                                                           05DEC01.1053
>         DENOMQ2(I)=PSIQ2                                                         05DEC01.1054
571,580c619
<         IF((XLAND(I,J)-1.5).GE.0)THEN                                            MRFPBL.502
<           ZNT(I,J)=CZO*UST(I,J)*UST(I,J)/G+OZO                                   MRFPBL.503
<         ENDIF                                                                    MRFPBL.504
<         IF((XLAND(I,J)-1.5).GE.0)THEN                                            MRFPBL.505
<           ZL=ZNT(I,J)                                                            MRFPBL.506
<         ELSE                                                                     MRFPBL.507
<           ZL=0.01                                                                MRFPBL.508
<         ENDIF                                                                    MRFPBL.509
<         FLQC(I)=RHOX(I)*MAVAIL(I,J)*UST(I,J)*KARMAN/(                            MRFPBL.510
<      +          ALOG(KARMAN*UST(I,J)*ZA(I,KL)/XKA+ZA(I,KL)/ZL)-PSIH(I))          MRFPBL.511
---
>         FLQC(I)=RHOX(I)*MAVAIL(I,J)*UST(I,J)*KARMAN/DENOMQ(I)                    05DEC01.1055
628c667
<      +            SATBRT,RAINP,THC,MAVAIL,ALB,                                   07NOV00.1906
---
>      +            SATBRT,RAINP,RAINC,RAINNC,THC,MAVAIL,ALB,                      05DEC01.1534
637,655c676,678
<           IF((XLAND(I,J)-1.5).GE.0)THEN                                          MRFPBL.557
<             ZL=ZNT(I,J)                                                          MRFPBL.558
<           ELSE                                                                   MRFPBL.559
<             ZL=0.01                                                              MRFPBL.560
<           ENDIF                                                                  MRFPBL.561
<           CHS(I)=UST(I,J)*KARMAN/(                                               MRFPBL.562
<      +           ALOG(KARMAN*UST(I,J)*ZA(I,KL)/XKA+ZA(I,KL)/ZL)-PSIH(I))         MRFPBL.563
<           CHS2(I)=UST(I,J)*KARMAN/(ALOG(KARMAN*UST(I,J)*2.0/XKA+2.0/ZL)-         MRFPBL.564
<      +            PSIH2(I))                                                      MRFPBL.565
< c      use thermal treatment of fluxes at surface instead of moisture tr         MRFPBL.566
< c           CHSTST=UST(I,J)*KARMAN/(ALOG(KARMAN*UST(I,J)*ZA(I,KL)                MRFPBL.567
< c    -             /XKA+ZA(I,KL)/ZL)-PSIH(I))                                    MRFPBL.568
< c           CHS(I)=UST(I,J)*KARMAN/(GZ1OZ0(I)-PSIH(I))                           MRFPBL.569
< c     Zilitinkevich formulation                                                  MRFPBL.570
< c        restar=ust(i,j)*znt(i,j)/2.4e-5                                         MRFPBL.571
< c        z0t=znt(i,j)*exp(-karman*0.1*sqrt(restar))                              MRFPBL.572
< c        gz1oz0t=alog(za(i,kl)/z0t)                                              MRFPBL.573
< c        chstst=UST(I,J)*KARMAN/(GZ1OZ0(I)-PSIH(I))                              MRFPBL.574
< c        chs(i)=UST(I,J)*KARMAN/(GZ1OZ0T-PSIH(I))                                MRFPBL.575
---
> c LSM is restricted to same exchange coeff for T and Q so use Q                  05DEC01.1056
>           CHS(I)=UST(I,J)*KARMAN/DENOMQ(I)                                       05DEC01.1057
>           CHS2(I)=UST(I,J)*KARMAN/DENOMQ2(I)                                     05DEC01.1058
663c686
<      +       V10,TH2,Q2,RAINC,RAINNC,SNOWC,CHS2)                                 24SEP99.419
---
>      +       V10,TH2,Q2,RAINC,RAINNC,SNOWC,CHS2,CKLQ)                            05DEC01.1059
854,855c877,879
<               IF((QCX(I,K)+QIX(I,K)).GT.0.01E-3.AND.(QCX(I,K-1)+                 MRFPBL.766
<      +          QIX(I,K-1)).GT.0.01E-3)THEN                                      MRFPBL.767
---
> C     CHANGED FROM K AND K-1 TO K IN NEXT LINE.                                  05DEC01.1060
> C     CLOUDY MIXING NOW EXTENDS ABOVE CLOUD.                                     05DEC01.1061
>               IF((QCX(I,K)+QIX(I,K)).GT.0.01E-3)THEN                             05DEC01.1062
===================================================================
physics/pbl_sfc/myepbl/myepbl.F
diff -r3.4 myepbl.F
0a1
> #include <defines.incl>                                                          05DEC01.1063
2a4
> C     IMPLICIT NONE                                                              05DEC01.1064
21a24,30
> C                                                                                05DEC01.1065
> C     APRIL 2001:                                                                05DEC01.1066
> C       COUPLE WITH OSU LSM                                                      05DEC01.1067
> C                                                                                05DEC01.1068
> C     SEPTEMBER 2001:                                                            05DEC01.1069
> C       ESTIMATE PBL HEIGHT, LEVEL, REGIME FOR FDDA APPL.,                       05DEC01.1070
> C       FOLLOWING GS PBL                                                         05DEC01.1071
32a42,44
> #     include <varia.incl>                                                       05DEC01.1072
>                                                                                  05DEC01.1073
>       INTEGER LM                                                                 05DEC01.1074
39a52
>                                                                                  05DEC01.1075
47,48c60,61
<       DIMENSION ZCOLI(MIX,LP1),APECOLI(MIX,LM),AKHCOLI(MIX,LM),                  MYEPBL.47
<      -     AKMCOLI(MIX,LM),Q2COLI(MIX,LM),THX(MIX,MKX),QX(MIX,MKX),              MYEPBL.48
---
>       DIMENSION ZCOLI(MIX,LP1),APECOLI(MIX,LM),AKHCOLI(MIX,LM1),                 05DEC01.1076
>      -     AKMCOLI(MIX,LM1),Q2COLI(MIX,LM),THX(MIX,MKX),QX(MIX,MKX),             05DEC01.1077
50a64,69
> C FOR LSM                                                                        05DEC01.1078
>       REAL PREC(MIX), CPM(MIX), CHS(MIX), CHS2(MIX), CHFF(MIX)                   05DEC01.1079
>       REAL U10I(MIX), V10I(MIX), TH2(MIX), Q2(MIX), RHOX(MIX)                    05DEC01.1080
>       REAL T2D(MIX,MKX), QCX(MIXM,MKXM), UX(MIX,MKX), VX(MIX,MKX)                05DEC01.1081
>       REAL ZA(MIX,MKX), ZQ(MIX,LP1)                                              05DEC01.1082
>       REAL CKLQ(MIX,MJX)                                                         05DEC01.1083
87a107
>         CKLQ(I,J)=1.                                                             05DEC01.1084
109a130
>         RHOX(I)=RHOSFC                                                           05DEC01.1085
111a133
>         ZQ(I,LMHK+1)=0.0                                                         05DEC01.1086
117a140,141
>           ZA(I,K)=0.5*(ZCOL(K)+ZCOL(K+1))                                        05DEC01.1087
>           ZQ(I,K)=ZCOL(K)                                                        05DEC01.1088
128c152,153
<      +       VLM,TCOL,QCOL,APECOL,ZCOL,HSFLX,HLFLX)                              MYEPBL.128
---
>      +       VLM,TCOL,QCOL,APECOL,ZCOL,HSFLX,HLFLX,AKHS02)                       05DEC01.1089
> c       IF (ISOIL.LE.1) THEN                                                     05DEC01.1090
130a156
> c       END IF                                                                   05DEC01.1091
133a160,162
>         CHS(I)  =AKHS                                                            05DEC01.1092
> C EXCHANGE COEFF AT 2 M (FOR LSM)                                                05DEC01.1093
>         CHS2(I) = AKHS02                                                         05DEC01.1094
139,140d167
<           AKHCOLI(I,L)=AKHCOL(L)                                                 MYEPBL.139
<           AKMCOLI(I,L)=AKMCOL(L)                                                 MYEPBL.140
143a171,174
>         DO L=1,LMHK-1                                                            05DEC01.1095
>           AKHCOLI(I,L)=AKHCOL(L)                                                 05DEC01.1096
>           AKMCOLI(I,L)=AKMCOL(L)                                                 05DEC01.1097
>         ENDDO                                                                    05DEC01.1098
149a181,189
> C                                                                                05DEC01.1099
> C  FILL UA10,VA10,T2 AND QA2 (QA2 WILL BE UPDATED BY LSM OVER LAND)              05DEC01.1100
> C                                                                                05DEC01.1101
>         UA10(I,J)=U10                                                            05DEC01.1102
>         VA10(I,J)=V10                                                            05DEC01.1103
>         TA2 (I,J)=TSHLTR/APES(I)                                                 05DEC01.1104
>         QA2 (I,J)=QSHLTR                                                         05DEC01.1105
>         TH2 (I)  =TSHLTR                                                         05DEC01.1106
>         Q2  (I)  =QSHLTR                                                         05DEC01.1107
154a195
> C                                                                                05DEC01.1108
155a197
> C                                                                                05DEC01.1109
165a208,209
> C                                                                                05DEC01.1110
>       IF (ISOIL.LE.1) THEN                                                       05DEC01.1111
166a211,245
>                                                                                  05DEC01.1112
>       ELSE IF (ISOIL.EQ.2) THEN                                                  05DEC01.1113
> #ifdef SOIL2                                                                     05DEC01.1114
>         DO I=1,ILX                                                               05DEC01.1115
>           DO L = 1,LMHK                                                          05DEC01.1116
>              T2D(I,L) = T3D(I,J,L)                                               05DEC01.1117
> C QCX: dummy, not used in LSM                                                    05DEC01.1118
>              QCX(I,L) = 0.0                                                      05DEC01.1119
>              UX(I,L) = 0.25*(U3D(I,J,L)+U3D(I+1,J,L)+U3D(I,J+1,L)+               05DEC01.1120
>      +                       U3D(I+1,J+1,L))                                     05DEC01.1121
>              VX(I,L) = 0.25*(V3D(I,J,L)+V3D(I+1,J,L)+V3D(I,J+1,L)+               05DEC01.1122
>      +                       V3D(I+1,J+1,L))                                     05DEC01.1123
>           END DO                                                                 05DEC01.1124
>                                                                                  05DEC01.1125
>           U10I(I) = UA10(I,J)                                                    05DEC01.1126
>           V10I(I) = VA10(I,J)                                                    05DEC01.1127
>                                                                                  05DEC01.1128
>           CPM(I)=CP*(1.+0.8*QX(I,KL)*XMOIST(IN))                                 05DEC01.1129
>           CHS(I)=HOL(I,J)                                                        05DEC01.1130
>           CHFF(I)=CPM(I)*RHOX(I)*CHS(I)                                          05DEC01.1131
> C        PREC (KG/M^2/S) FROM RAINP (CM) ACCUMULATION IN ONE TIMESTEP            05DEC01.1132
>           PREC(I)=RAINP(I,J)*10./(DT/2.)                                         05DEC01.1133
>         END DO                                                                   05DEC01.1134
>                                                                                  05DEC01.1135
>         CALL SURFCE(J,ZA,QX,THX,TGB,THGB,TGDSB,CHS,CHFF,CPM,PREC,                05DEC01.1136
>      +       HFX,QFX,QGH,                                                        05DEC01.1137
>      +       GSW,GLW,T2D,UX,VX,ALB,PP3D,PSB,RHOX,TMN,XLAND,QCX,IN,U10I,          05DEC01.1138
>      +       V10I,TH2,Q2,RAINC,RAINNC,SNOWC,CHS2,CKLQ)                           05DEC01.1139
>                                                                                  05DEC01.1140
>         DO I=1,ILX                                                               05DEC01.1141
>            QA2(I,J) = Q2(I)                                                      05DEC01.1142
>         END DO                                                                   05DEC01.1143
> #endif                                                                           05DEC01.1144
>       END IF                                                                     05DEC01.1145
> C                                                                                05DEC01.1146
167a247
> C                                                                                05DEC01.1147
181a262,263
>         ENDDO                                                                    05DEC01.1148
>         DO L=1,LMHK-1                                                            05DEC01.1149
201a284
>         IF (ISOIL.LE.1) THEN                                                     05DEC01.1150
203a287,291
>         ELSE IF (ISOIL.EQ.2) THEN                                                05DEC01.1151
>         THZ0=THX(I,LMHK)+HFX(I,J)/(RHOX(I)*CP*CHS(I))                            05DEC01.1152
>         QZ0=QX(I,LMHK)+QFX(I,J)/(RHOX(I)*CHS(I))                                 05DEC01.1153
>         WETM=CKLQ(I,J)                                                           05DEC01.1154
>         END IF                                                                   05DEC01.1155
228a317,413
> C ESTIMATE PBL HEIGHT FROM TKE - FOR V3.5                                        05DEC01.1156
> C                                                                                05DEC01.1157
> C   This is how it is done:                                                      05DEC01.1158
> C     Following what is done in GS PBL, PBL height is determined                 05DEC01.1159
> C     based on the TKE profile. In a general case, the PBL height                05DEC01.1160
> C     is the height where TKE drops below a threshold value.                     05DEC01.1161
> C     This threshold is 0.5xmin(0.6,TKEMAX) if the maximum TKE                   05DEC01.1162
> C     is greater than 1.2.                                                       05DEC01.1163
> C     It is KL if max TKE is less than TKE=0.4.                                  05DEC01.1164
> C                                                                                05DEC01.1165
> C     Algorithm parameters:                                                      05DEC01.1166
> C                                                                                05DEC01.1167
>         PTKEMAX=1.20                                                             05DEC01.1168
>         PTKEFRACT=0.50                                                           05DEC01.1169
>         PTKEWEAK=0.4                                                             05DEC01.1170
>         PTKEZMIN=150.0                                                           05DEC01.1171
> C                                                                                05DEC01.1172
> C     Initialization of KPBL2D(mix,mjx) array                                    05DEC01.1173
> C                                                                                05DEC01.1174
>         KPBL2D(I,J)=-99                                                          05DEC01.1175
>         REGIME(I,J)=1.                                                           05DEC01.1176
> C                                                                                05DEC01.1177
> C     Find the layer in which to look for maximum TKE                            05DEC01.1178
> C     The layer is either where TKE begins to decrease or 150 m AGL              05DEC01.1179
> C       LM=MKX                                                                   05DEC01.1180
> C                                                                                05DEC01.1181
>         KTEMP1=KL                                                                05DEC01.1182
>         DO K=KL,1,-1                                                             05DEC01.1183
>           IF(TURKE(I,J,K-1).LT.TURKE(I,J,K))THEN                                 05DEC01.1184
>             KTEMP1=K-1                                                           05DEC01.1185
>             GOTO 305                                                             05DEC01.1186
>           ENDIF                                                                  05DEC01.1187
>         ENDDO                                                                    05DEC01.1188
>  305    CONTINUE                                                                 05DEC01.1189
>         KTEMP2=KL                                                                05DEC01.1190
>         DO K=KL,1,-1                                                             05DEC01.1191
>            IF(ZA(I,K).GE.PTKEZMIN)THEN                                           05DEC01.1192
>               KTEMP2=K                                                           05DEC01.1193
>               GOTO 306                                                           05DEC01.1194
>            ENDIF                                                                 05DEC01.1195
>         ENDDO                                                                    05DEC01.1196
>  306    CONTINUE                                                                 05DEC01.1197
>         KTEMP=MIN(KTEMP1,KTEMP2)                                                 05DEC01.1198
> C                                                                                05DEC01.1199
> C     Find the maximum TKE below KTEMP                                           05DEC01.1200
> C                                                                                05DEC01.1201
>         TKEMAX=TURKE(I,J,KL)                                                     05DEC01.1202
>         DO K=LM1,KTEMP,-1                                                        05DEC01.1203
>            IF(TKEMAX.LT.TURKE(I,J,K)) TKEMAX=TURKE(I,J,K)                        05DEC01.1204
>         ENDDO                                                                    05DEC01.1205
> C                                                                                05DEC01.1206
> C     Estimate PBL height                                                        05DEC01.1207
> C                                                                                05DEC01.1208
> C     Cases of weak or no turbulence                                             05DEC01.1209
> C                                                                                05DEC01.1210
>         IF(TKEMAX.LT.PTKEWEAK)THEN                                               05DEC01.1211
>            PBL(I,J)=0.0                                                          05DEC01.1212
>            KPBL2D(I,J)=KL                                                        05DEC01.1213
>            GOTO 301                                                              05DEC01.1214
>         ELSE                                                                     05DEC01.1215
> C                                                                                05DEC01.1216
> C     Cases of stronger turbulence                                               05DEC01.1217
> C                                                                                05DEC01.1218
>            TKELIM=PTKEFRACT*MIN(TKEMAX,PTKEMAX)                                  05DEC01.1219
>            TKELIM=MAX(TKELIM,0.4)                                                05DEC01.1220
>            DO K=LM1,1,-1                                                         05DEC01.1221
>               IF(TURKE(I,J,K).LT.TKELIM.AND.                                     05DEC01.1222
>      -           TURKE(I,J,K).LT.TURKE(I,J,K+1)) THEN                            05DEC01.1223
>                  FRACT=(TURKE(I,J,K+1)-TKELIM)/                                  05DEC01.1224
>      -                 (TURKE(I,J,K+1)-TURKE(I,J,K))                             05DEC01.1225
> C                IF(FRACT.GE.0.0.AND.FRACT.LE.1.0)THEN                           05DEC01.1226
>                     PBL(I,J)=ZA(I,K+1)+FRACT*(ZA(I,K)-ZA(I,K+1))                 05DEC01.1227
>                     IF(PBL(I,J).LE.ZQ(I,K+1)) THEN                               05DEC01.1228
>                        KPBL2D(I,J)=K+1                                           05DEC01.1229
>                     ELSE                                                         05DEC01.1230
>                        KPBL2D(I,J)=K                                             05DEC01.1231
>                     END IF                                                       05DEC01.1232
>                     GOTO 301                                                     05DEC01.1233
> C                ENDIF                                                           05DEC01.1234
>               ELSEIF(ZA(I,K).GT.5000.)THEN                                       05DEC01.1235
> C                PRINT *,'PBL HT LIMITED TO 5 KM AGL AT ',I,J                    05DEC01.1236
>                  PBL(I,J)=5000.                                                  05DEC01.1237
>                  KPBL2D(I,J)=K                                                   05DEC01.1238
>                  GOTO 301                                                        05DEC01.1239
>               ENDIF                                                              05DEC01.1240
>            ENDDO                                                                 05DEC01.1241
>            STOP 294                                                              05DEC01.1242
>         ENDIF                                                                    05DEC01.1243
>   301   CONTINUE                                                                 05DEC01.1244
> C                                                                                05DEC01.1245
> C    Set REGIME for FDDA use                                                     05DEC01.1246
> C                                                                                05DEC01.1247
>         IF(KPBL2D(I,J).LT.KL)THEN                                                05DEC01.1248
>            REGIME(I,J) = 4.                                                      05DEC01.1249
>         ENDIF                                                                    05DEC01.1250
> C end of PBL height estimation                                                   05DEC01.1251
>                                                                                  05DEC01.1252
===================================================================
physics/pbl_sfc/myepbl/sfcdif.F
diff -r3.0 sfcdif.F
5c5
<      &,                 ULM,VLM,T,Q,APE,Z,HSFLX,HLFLX)                           SFCDIF.5
---
>      &,                 ULM,VLM,T,Q,APE,Z,HSFLX,HLFLX,AKHS02)                    05DEC01.1253
===================================================================
physics/pbl_sfc/osusfc/hrt.F
diff -r3.4 hrt.F
47c47
<       PARAMETER(CAIR=1004.0,CH2O=4.2 E6,CSOIL=1.26E6,ZBOT=-3.0)                  HRT.43
---
>       PARAMETER(CAIR=1004.0,CH2O=4.2 E6,CSOIL=2.0E6,ZBOT=-3.0)                   05DEC01.1254
===================================================================
physics/pbl_sfc/osusfc/hrtice.F
diff -r3.5 hrtice.F
19d18
<       REAL CSOIL                                                                 HRTICE.16
49c48
<       PARAMETER(CAIR=1004.0,CH2O=4.2 E6,CSOIL=1.26E6)                            HRTICE.42
---
>       PARAMETER(CAIR=1004.0,CH2O=4.2 E6)                                         05DEC01.1255
===================================================================
physics/pbl_sfc/osusfc/prmsoi.F
diff -r3.1 prmsoi.F
55c55
<         DATA SATDK /1.07E-6, 1.41E-5, 5.23E-6, 2.81E-6, 2.81E-6,                 PRMSOI.55
---
>         DATA SATDK /4.66E-5, 1.41E-5, 5.23E-6, 2.81E-6, 2.81E-6,                 05DEC01.1256
61c61
<      &  0.387, 0.382, 0.338, 0.404, 0.412, 0.329, 0.0, 0.108, 0.283/             PRMSOI.61
---
>      &  0.387, 0.382, 0.338, 0.404, 0.412, 0.329, 0.0, 0.170, 0.283/             05DEC01.1257
===================================================================
physics/pbl_sfc/osusfc/surfce.F
diff -r3.9 surfce.F
3c3
<      &,inest,u10,v10,th2,q2,rainc,rainnc,SNOWC,chs2)                             24SEP99.512
---
>      &,inest,u10,v10,th2,q2,rainc,rainnc,SNOWC,chs2,cklq)                        05DEC01.1258
66c66
<      &,UX(MIX,MKX),VX(MIX,MKX)                                                   SURFCE.56
---
>      &,UX(MIX,MKX),VX(MIX,MKX),CKLQ(MIX,MJX)                                     05DEC01.1259
154,155c154,155
< !??                                                                              SURFCE.133
<           RAINK=(RAINC(I,J)+RAINNC(I,J))*10.                                     SURFCE.134
---
> C          RAINK=(RAINC(I,J)+RAINNC(I,J))*10.                                    05DEC01.1260
>           RAINK=PRCP*DTHALF                                                      05DEC01.1261
161a162
>             CKLQ(I,J)=0.                                                         05DEC01.1262
163a165
>             CKLQ(I,J)=1.                                                         05DEC01.1263
===================================================================
physics/pbl_sfc/pxpbl/Makefile
diff -r1.1 -r3.5
17c17
<     surface.o \
---
>     surfpx.o \
30c30
<     surface.i \
---
>     surfpx.i \
43c43
<     surface.f \
---
>     surfpx.f \
91,92c91,92
< surface.o: ../../../include/parame.incl  ../../../include/comicl.incl
< surface.o: ../../../include/soilp.incl 
---
> surfpx.o: ../../../include/parame.incl  ../../../include/comicl.incl
> surfpx.o: ../../../include/soilp.incl 
===================================================================
physics/pbl_sfc/pxpbl/eddymm4.F
diff -r1.2 eddymm4.F
6d5
< C---- THIS IS THE SAME SCHEME AS USED IN HIRPBL                                  EDDYMM4.6
9c8,9
< C  REVISION HISTORY:                                                             EDDYMM4.9
---
> C  REVISION HISTORY:                                                             05DEC01.1264
> C  JEP        3/01 - updated Kz scheme similar to Liu & Carroll (1996)           05DEC01.1265
30,32c30,32
<       REAL SZKM,EDYZ0,RV                                                         EDDYMM4.30
<       DATA SZKM/1600./,EDYZ0/0.8/                                                EDDYMM4.31
<       DATA RV/461.5/                                                             EDDYMM4.32
---
>       REAL SQL,EDYZ0,RV,RLAM,ZK                                                  05DEC01.1266
>       DATA RV/461.5/,RC/0.25/,RLAM/80./                                          05DEC01.1267
>       SAVE RV,RC,RLAM                                                            05DEC01.1268
40c40
<           RC = 0.257 * DZF ** 0.175                                              EDDYMM4.40
---
> C          RC = 0.257 * DZF ** 0.175                                             05DEC01.1269
59c59,61
< C-----------------                                                               EDDYMM4.59
---
> C-----------------                                                               05DEC01.1270
>           ZK = 0.4 * ZF(I,K)                                                     05DEC01.1271
>           SQL = (ZK*RLAM/(RLAM+ZK))**2                                           05DEC01.1272
62c64
<           IF(RI - RC.GT.0.0)THEN                                                 EDDYMM4.62
---
>           IF(RI .GE.RC)THEN                                                      05DEC01.1273
64,66c66,69
<           ELSE                                                                   EDDYMM4.64
<             EDDYZ(I,K) = EDYZ0 + SQRT(SS) * (RC - RI) *                          EDDYMM4.65
<      &                 SZKM / RC                                                 EDDYMM4.66
---
>           ELSE IF(RI.GE.0.0) THEN                                                05DEC01.1274
>             EDDYZ(I,K) = EDYZ0 + SQRT(SS) * (1.- RI/RC)**2 * SQL                 05DEC01.1275
>           ELSE                                                                   05DEC01.1276
>             EDDYZ(I,K) = EDYZ0 + SQRT(SS*(1.-25.*RI)) * SQL                      05DEC01.1277
69c72,75
<           EDDYZ(I,K) = AMIN1(100.0,EDDYZ(I,K))                                   EDDYMM4.69
---
>           EDDYZ(I,K) = AMIN1(1000.0,EDDYZ(I,K))                                  05DEC01.1278
> C         IF(I.EQ.53.AND.J.EQ.128.AND.EDDYZ(I,K).GT.100.)                        05DEC01.1279
> C    >    PRINT *,' KZ,kpbl,noc=',EDDYZ(I,K),KLPBL(I),NOCONV(I),                 05DEC01.1280
> C    >    ' SS,RI,SQL=',SS,RI,SQL,' K=',K                                        05DEC01.1281
===================================================================
physics/pbl_sfc/pxpbl/radsfc.F
diff -r1.2 radsfc.F
12c12
< C     IF ICLOUDS = 1, THEN THE EFFECT OF CLOUDS IS ACCOUNTED          C          RADSFC.12
---
> C     IF ICLOUD  = 1, THEN THE EFFECT OF CLOUDS IS ACCOUNTED          C          05DEC01.1282
50c50,54
<                                                                                  RADSFC.50
---
> C-- for cloud                                                                    05DEC01.1283
>       REAL CLOBOT,CMDBOT,CHIBOT,PSMB                                             05DEC01.1284
>       DATA CLOBOT/970.0/   ! bottom bound pressure for low cloud                 05DEC01.1285
>       DATA CMDBOT/800.0/   ! bottom bound pressure for middle cloud              05DEC01.1286
>       DATA CHIBOT/450.0/   ! bottom bound pressure for high cloud                05DEC01.1287
72a77,95
> C..........  determine the sigma level for high, middle and low cloud            05DEC01.1288
>       DO 192 I = 1,ILX                                                           05DEC01.1289
>         KCLOUD(I,1) = 0                                                          05DEC01.1290
>         KCLOUD(I,2) = 0                                                          05DEC01.1291
>         KCLOUD(I,3) = 0                                                          05DEC01.1292
> 192   CONTINUE                                                                   05DEC01.1293
> C                                                                                05DEC01.1294
>       DO 193 K = 1,KL                                                            05DEC01.1295
>       DO 193 I = 1,ILX                                                           05DEC01.1296
>         PSMB = P(I,K) * 10.0                                                     05DEC01.1297
>         IF ( PSMB .LE. CLOBOT .AND. KCLOUD(I,3) .EQ. 0) THEN                     05DEC01.1298
>           KCLOUD(I,3) = K                                                        05DEC01.1299
>          ELSE IF( PSMB .LE. CMDBOT .AND. KCLOUD(I,2) .EQ. 0) THEN                05DEC01.1300
>           KCLOUD(I,2) = K                                                        05DEC01.1301
>          ELSE IF( PSMB .LE. CHIBOT .AND. KCLOUD(I,1) .EQ. 0) THEN                05DEC01.1302
>           KCLOUD(I,1) = K                                                        05DEC01.1303
>         ENDIF                                                                    05DEC01.1304
> 193   CONTINUE                                                                   05DEC01.1305
> C                                                                                05DEC01.1306
163,164c186,191
<         DEPCL = 1.0 + ICLOUD(INEST) * (CLW(1) * CLDFR(I,1) +                     RADSFC.163
<      &          CLW(2) * CLDFR(I,2) + CLW(3) * CLDFR(I,3))                       RADSFC.164
---
>         IF(ICLOUD(INEST).NE.0) THEN                                              05DEC01.1307
>            DEPCL = 1.0 + CLW(1) * CLDFR(I,1) +                                   05DEC01.1308
>      &             CLW(2) * CLDFR(I,2) + CLW(3) * CLDFR(I,3)                     05DEC01.1309
>         ELSE                                                                     05DEC01.1310
>            DEPCL = 1.0                                                           05DEC01.1311
>         END IF                                                                   05DEC01.1312
256c283
<         IF (ICLOUD(INEST) .EQ. 1) THEN                                           RADSFC.256
---
>         IF (ICLOUD(INEST) .GE. 1) THEN                                           05DEC01.1313
===================================================================
physics/pbl_sfc/util/Makefile
diff -r3.1 -r3.2
9c9,10
< 	slab.o
---
> 	slab.o \
> 	setvegfr.o
12c13,14
< 	slab.i
---
> 	slab.i \
> 	setvegfr.i
15c17,18
< 	slab.f
---
> 	slab.f \
> 	setvegfr.f
46a50
> setvegfr.o: ../../../include/parame.incl ../../../include/soilp.incl
===================================================================
physics/pbl_sfc/util/slab.F
diff -r3.15 slab.F
9c9
<      +         SATBRT,RAINP,THC,MAVAIL,ALB,                                      07NOV00.2007
---
>      +         SATBRT,RAINP,RAINC,RAINNC,THC,MAVAIL,ALB,                         05DEC01.1535
12a13
> #  undef VECTOR                                                                  05DEC01.1314
58a60,61
> C RAINC and RAINNC new with 3.5                                                  05DEC01.1536
>       REAL RAINC(MIX,MJX),RAINNC(MIX,MJX)    ! IN                                05DEC01.1537
86c87
<       REAL    PRECIP, TSFC, RUNOFF, XMM, EVAP, AVAIL, TIMFAC                     07NOV00.2051
---
>       REAL    PRECIP, RUNOFF, XMM, EVAP, AVAIL, TIMFAC                           05DEC01.1315
246c247
< C IF WE'VE ACCUMULATED A MM OF PRECIP (1 CM OF SNOW) AND IT'S                    07NOV00.2100
---
> C IF WE'VE ACCUMULATED A MM OF ACCUM PRECIP (1 CM OF SNOW) AND IT'S              05DEC01.1316
249,250c250,251
<             TSFC = (T3D(I,J,KL)-273.16)*9./5. + 32.                              07NOV00.2103
<             IF (TSFC .LE. 28. .AND. RAINP(I,J) .GT. 0.1) THEN                    07NOV00.2104
---
>             IF (T3D(I,J,KL) .le. 270.94 .AND. PRECIP .GT. 0. .and.               05DEC01.1317
>      &          (RAINC(I,J) + RAINNC(I,J)) .GT. 0.1 ) THEN                       05DEC01.1318
===================================================================
physics/radiation/ccm2/cldems.F
diff -r3.0 cldems.F
3c3
<       SUBROUTINE CLDEMS(CLWP,EMIS)                                               CLDEMS.3
---
>       SUBROUTINE CLDEMS(CLWP,CIWP,CONWP,EMIS)                                    05DEC01.1319
21a22,23
>       REAL CIWP(IPLOND,IPLEV)    ! CLOUD ICE WATER PATH (G/M**2)                 05DEC01.1320
>       REAL CONWP(IPLOND,IPLEV)   ! CONVECTIVE CLOUD WATER PATH (G/M**2)          05DEC01.1321
42c44,45
<           EMIS(I,K)=1.-EXP(-KABS*CLWP(I,K))                                      CLDEMS.42
---
>           EMIS(I,K)=1.-(EXP(-KABS*(CLWP(I,K)+CONWP(I,K)))*                       05DEC01.1322
>      +              EXP(-0.0735*CIWP(I,K)))                                      05DEC01.1323
===================================================================
physics/radiation/ccm2/colmod.F
diff -r3.2 colmod.F
5c5,6
<      -                  FIRTP,SABTP,T3D,QV3D,PP3D)                               07NOV00.2169
---
>      -                  FIRTP,SABTP,T3D,QV3D,PP3D,QC3D,QR3D,QI3D,                05DEC01.1324
>      -                  QNI3D,MCPHYS,ICLOUDE)                                    05DEC01.1325
44a46,48
>       REAL QC3D,QR3D,QI3D,QNI3D                                                  05DEC01.1326
>       DIMENSION QC3D(MIXM,MJXM,MKXM),QR3D(MIXM,MJXM,MKXM)                        05DEC01.1327
>       DIMENSION QI3D(MIXIC,MJXIC,MKXIC),QNI3D(MIXIC,MJXIC,MKXIC)                 05DEC01.1328
60a65,66
>      $     CIWP(IPLOND,IPLEV),   ! CLOUD ICE WATER PATH                          05DEC01.1329
>      $     CONWP(IPLOND,IPLEV),  ! CONVECTIVE CLOUD WATER PATH                   05DEC01.1330
86a93,94
>       INTEGER MCPHYS           ! microphysics parameterization                   05DEC01.1331
>       INTEGER ICLOUDE          ! ICLOUD(N): cloud effect on radiation            05DEC01.1332
95,96c103,105
<      +     ,PMID,PINT,PMLN,PILN,T,H2OMMR,PLOL,PLOS,CLDFRC,CLWP,EFFCLD,           COLMOD.95
<      +     JSLC,ILX,DX,T3D,QV3D,PP3D)                                            COLMOD.96
---
>      +     ,PMID,PINT,PMLN,PILN,T,H2OMMR,PLOL,PLOS,CLDFRC,CLWP,CIWP              05DEC01.1333
>      +     ,CONWP,EFFCLD,JSLC,ILX,DX,MCPHYS,T3D,QV3D,PP3D,QC3D,QR3D              05DEC01.1334
>      +     ,QI3D,QNI3D,ICLOUDE)                                                  05DEC01.1335
106,107c115,116
<      +     ,CLWP,PLOL,PLOS,SOLIN,SABTP,FRSA,CLRST,CLRSS,QRS,FIRTP,FRLA,          COLMOD.106
<      +     CLRLT,CLRLS,QRL,SRFRAD,JSLC,KTAUW,IUTRAD,NRADISP)                     COLMOD.107
---
>      +     ,CLWP,CIWP,CONWP,PLOL,PLOS,SOLIN,SABTP,FRSA,CLRST,CLRSS,QRS           05DEC01.1336
>      +     ,FIRTP,FRLA,CLRLT,CLRLS,QRL,SRFRAD,JSLC,KTAUW,IUTRAD,NRADISP)         05DEC01.1337
===================================================================
physics/radiation/ccm2/getdat.F
diff -r3.1 getdat.F
8,9c8,10
<      $                  CLWP   , EFFCLD,   JSLC,   ILX, DX,                      GETDAT.8
<      $                  T3D    , QV3D     , PP3D)                                GETDAT.9
---
>      $                  CLWP ,CIWP, CONWP, EFFCLD, JSLC, ILX, DX,                05DEC01.1338
>      $                  MCPHYS,T3D,QV3D,PP3D,QC3D,QR3D,QI3D,QNI3D,               05DEC01.1339
>      $                  ICLOUDE)                                                 05DEC01.1340
36a38,40
> C    cmr - cloud water mixing ratio (g/kg)                                       05DEC01.1341
> C   cimr - cloud ice mixing ratio (g/kg)                                         05DEC01.1342
>       REAL CMR(IPLOND,IPLEVP),CIMR(IPLOND,IPLEVP)                                05DEC01.1343
39a44,47
>       REAL QC3D,QR3D,QI3D,QNI3D                                                  05DEC01.1344
>       DIMENSION QC3D(MIXM,MJXM,MKXM),QR3D(MIXM,MJXM,MKXM)                        05DEC01.1345
>       DIMENSION QI3D(MIXIC,MJXIC,MKXIC),QNI3D(MIXIC,MJXIC,MKXIC)                 05DEC01.1346
>       INTEGER MCPHYS                                                             05DEC01.1347
64a73,74
>      $     CIWP(IPLOND,IPLEV),   ! CLOUD ICE WATER PATH (G/M**2)                 05DEC01.1348
>      $     CONWP(IPLOND,IPLEV),  ! CONVECTIVE CLOUD WATER PATH (G/M**2)          05DEC01.1349
180a191,220
>             IF(MCPHYS.GE.5)THEN                                                  05DEC01.1350
> C CONSIDER RADIATIVE PROPERTIES OF CLOUD SIZE PARTICLES ONLY                     05DEC01.1351
>               CMR(N,NLL)=(QC3D(NLIM,JSLC,NLL))                                   05DEC01.1352
>      +                   *1000.                                                  05DEC01.1353
>               CIMR(N,NLL)=(QI3D(NLIM,JSLC,NLL))                                  05DEC01.1354
>      +                    *1000.                                                 05DEC01.1355
> C CONSIDER RADIATIVE PROPERTIES OF CLOUD AND PRECIP SIZE PARTICLES               05DEC01.1356
> C             CMR(N,NLL)=(QC3D(NLIM,JSLC,NLL)+QR3D(NLIM,JSLC,NLL))               05DEC01.1357
> C    +                   *1000.                                                  05DEC01.1358
> C             CIMR(N,NLL)=(QI3D(NLIM,JSLC,NLL)+QNI3D(NLIM,JSLC,NLL))             05DEC01.1359
> C    +                    *1000.                                                 05DEC01.1360
>             ELSE                                                                 05DEC01.1361
>               IF(T(N,NLL).GE.273.15)THEN                                         05DEC01.1362
> C CONSIDER RADIATIVE PROPERTIES OF CLOUD SIZE PARTICLES ONLY                     05DEC01.1363
>                 CMR(N,NLL)=(QC3D(NLIM,JSLC,NLL))                                 05DEC01.1364
>      +                     *1000.                                                05DEC01.1365
> C CONSIDER RADIATIVE PROPERTIES OF CLOUD AND PRECIP SIZE PARTICLES               05DEC01.1366
> C               CMR(N,NLL)=(QC3D(NLIM,JSLC,NLL)+QR3D(NLIM,JSLC,NLL))             05DEC01.1367
> C    +                     *1000.                                                05DEC01.1368
>                 CIMR(N,NLL)=0.                                                   05DEC01.1369
>               ELSE                                                               05DEC01.1370
> C CONSIDER RADIATIVE PROPERTIES OF CLOUD SIZE PARTICLES ONLY                     05DEC01.1371
>                 CIMR(N,NLL)=(QC3D(NLIM,JSLC,NLL))                                05DEC01.1372
>      +                      *1000.                                               05DEC01.1373
> C CONSIDER RADIATIVE PROPERTIES OF CLOUD AND PRECIP SIZE PARTICLES               05DEC01.1374
> C               CIMR(N,NLL)=(QC3D(NLIM,JSLC,NLL)+QR3D(NLIM,JSLC,NLL))            05DEC01.1375
> C    +                      *1000.                                               05DEC01.1376
>                 CMR(N,NLL)=0.                                                    05DEC01.1377
>               ENDIF                                                              05DEC01.1378
>             ENDIF                                                                05DEC01.1379
264,265c304,317
<             CLDFRC(N,NLL)=AMAX1(CLDFRA(NLIM,NLL)*0.9999999,CCVTEM)               GETDAT.270
<             CLDFRC(N,NLL)=AMIN1(CLDFRC(N,NLL),0.99)                              GETDAT.271
---
>                                                                                  05DEC01.1380
>             IF(ICLOUDE.EQ.1) THEN                                                05DEC01.1381
> C CALCULATE CLDFRC BASED ON CMR AND CIMR (CLDFRC=1 FOR CMR+CMR.GT.1E-4 G/KG      05DEC01.1382
>               IF((CMR(N,NLL)+CIMR(N,NLL)).GT.1E-4)THEN                           05DEC01.1383
>                 CLDFRC(N,NLL)=0.99999                                            05DEC01.1384
>               ELSE                                                               05DEC01.1385
>                 CLDFRC(N,NLL)=0.                                                 05DEC01.1386
>               ENDIF                                                              05DEC01.1387
> C Allow for convective cloud cover to contribute to total cloud cover            05DEC01.1388
>               CLDFRC(N,NLL)=AMAX1(CLDFRA(NLIM,NLL)*0.9999,CLDFRC(N,NLL))         05DEC01.1389
>             ELSE                                                                 05DEC01.1390
>               CLDFRC(N,NLL)=AMAX1(CLDFRA(NLIM,NLL)*0.9999999,CCVTEM)             05DEC01.1391
>               CLDFRC(N,NLL)=AMIN1(CLDFRC(N,NLL),0.99)                            05DEC01.1392
>             ENDIF                                                                05DEC01.1393
267c319
< C   CONVERT LIQUID WATER CONTENT INTO LIQUID WATER PATH, I.E. MULTIPLY B         GETDAT.273
---
> C   CONVERT LIQUID WATER CONTENT INTO LIQUID WATER PATH, I.E. MULTIPLY BY        05DEC01.1394
271,272c323,346
<             CLWP(N,NLL)=CLWTEM*DELTAZ(N,NLL)                                     GETDAT.277
<             IF(CLDFRC(N,NLL).EQ.0.)CLWP(N,NLL)=0.                                GETDAT.278
---
>                                                                                  05DEC01.1395
>             IF (ICLOUDE.EQ.0) THEN                                               05DEC01.1396
> C   No cloud effect on radiation                                                 05DEC01.1397
>               CIWP(N,NLL)=0.                                                     05DEC01.1398
>               CLWP(N,NLL)=0.                                                     05DEC01.1399
>               CONWP(N,NLL)=0.                                                    05DEC01.1400
>             ELSE IF (ICLOUDE.EQ.1) THEN                                          05DEC01.1401
> C   Radiation interaction with cloud water/ice                                   05DEC01.1402
>               CONWP(N,NLL)=CLWTEM*DELTAZ(N,NLL)*CLDFRA(NLIM,NLL)                 05DEC01.1403
>               CLWP(N,NLL)=CMR(N,NLL)*(PPS*1000.)/(T(N,NLL)*287.)*                05DEC01.1404
>      +                    DELTAZ(N,NLL)                                          05DEC01.1405
>               CIWP(N,NLL)=CIMR(N,NLL)*(PPS*1000.)/(T(N,NLL)*287.)*               05DEC01.1406
>      +                    DELTAZ(N,NLL)                                          05DEC01.1407
>             ELSE IF (ICLOUDE.EQ.2) THEN                                          05DEC01.1408
> C   Radiation interaction with RH                                                05DEC01.1409
>               CLWP(N,NLL)=CLWTEM*DELTAZ(N,NLL)                                   05DEC01.1410
>               CIWP(N,NLL)=0.                                                     05DEC01.1411
>               CONWP(N,NLL)=0.                                                    05DEC01.1412
>             END IF                                                               05DEC01.1413
>             IF(CLDFRC(N,NLL).EQ.0.)THEN                                          05DEC01.1414
>               CLWP(N,NLL)=0.                                                     05DEC01.1415
>               CIWP(N,NLL)=0.                                                     05DEC01.1416
>               CONWP(N,NLL)=0.                                                    05DEC01.1417
>             ENDIF                                                                05DEC01.1418
274d347
<                                                                                  GETDAT.280
296a370,371
>           CIWP(N,1)=0.                                                           05DEC01.1419
>           CONWP(N,1)=0.                                                          05DEC01.1420
310a386,387
>             CIWP(N,NLL)=0.                                                       05DEC01.1421
>             CONWP(N,NLL)=0.                                                      05DEC01.1422
378c455
<       CALL CLDEMS(CLWP,EMIS)                                                     GETDAT.385
---
>       CALL CLDEMS(CLWP,CIWP,CONWP,EMIS)                                          05DEC01.1423
===================================================================
physics/radiation/ccm2/radcsw.F
diff -r3.3 radcsw.F
4c4
<      $                  CLD     ,CLWP    ,O3MMR   ,ECCF    ,                     RADCSW.4
---
>      $                  CLD ,CLWP , CIWP, CONWP, O3MMR  ,ECCF   ,                05DEC01.1424
56a57,58
>      $     CIWP(IPLOND,IPLEV),     ! LAYER ICE WATER PATH                        05DEC01.1425
>      $     CONWP(IPLOND,IPLEV),    ! LAYER CONVECTIVE WATER PATH                 05DEC01.1426
121a124,145
> C Ice water coefficients (Ebert and Curry, 1992, JGR, 97, 3831-3836)             05DEC01.1427
>       REAL ABRIC(4), ! A COEFFICIENT FOR EXTINCTION OPTICAL DEPTH                05DEC01.1428
>      $     BBRIC(4), ! B COEFFICIANT FOR EXTINCTION OPTICAL DEPTH                05DEC01.1429
>      $     CBRIC(4), ! C COEFFICIANT FOR SINGLE PARTICLE SCAT ALBEDO             05DEC01.1430
>      $     DBRIC(4), ! D COEFFICIANT FOR SINGLE PARTICLE SCAT ALBEDO             05DEC01.1431
>      $     EBRIC(4), ! E COEFFICIANT FOR ASYMMETRY PARAMETER                     05DEC01.1432
>      $     FBRIC(4)  ! F COEFFICIANT FOR ASYMMETRY PARAMETER                     05DEC01.1433
> C                                                                                05DEC01.1434
>       DATA ABRIC/ 3.448E-03, 3.448E-03,3.448E-03,3.448E-03/                      05DEC01.1435
>       DATA BBRIC/ 2.431    , 2.431    ,2.431    ,2.431    /                      05DEC01.1436
>       DATA CBRIC/ 1.00E-05 , 1.10E-04 ,1.861E-02,0.46658  /                      05DEC01.1437
>       DATA DBRIC/ 0.0      , 1.405E-05,8.328E-04,2.05E-05 /                      05DEC01.1438
>       DATA EBRIC/ 0.7661   , 0.7730   ,0.794    ,0.9595   /                      05DEC01.1439
>       DATA FBRIC/ 5.851E-04, 5.665E-04,7.267E-04,1.076E-04/                      05DEC01.1440
> C                                                                                05DEC01.1441
>       REAL ABRICI,   ! A COEFFICIANT FOR CURRENT SPECTRAL INTERVAL               05DEC01.1442
>      $     BBRICI,   ! B COEFFICIANT FOR CURRENT SPECTRAL INTERVAL               05DEC01.1443
>      $     CBRICI,   ! C COEFFICIANT FOR CURRENT SPECTRAL INTERVAL               05DEC01.1444
>      $     DBRICI,   ! D COEFFICIANT FOR CURRENT SPECTRAL INTERVAL               05DEC01.1445
>      $     EBRICI,   ! E COEFFICIANT FOR CURRENT SPECTRAL INTERVAL               05DEC01.1446
>      $     FBRICI    ! F COEFFICIANT FOR CURRENT SPECTRAL INTERVAL               05DEC01.1447
> C                                                                                05DEC01.1448
244a269,274
>       REAL TAUEXI(IPLOND,0:IPLEV),     ! CLOUD EXT OPT DEPTH - ICE               05DEC01.1449
>      $         WCI(IPLOND,0:IPLEV),    ! CLOUD SINGLE SCAT ALB - ICE             05DEC01.1450
>      $         GCI(IPLOND,0:IPLEV),    ! CLOUD ASSYMETRY PARAM - ICE             05DEC01.1451
>      $         FCI(IPLOND,0:IPLEV),    ! CLOUD FORWARD SCAT FRAC - ICE           05DEC01.1452
>      $         CREI(IPLEV),            ! CLOUD EFF RAD - ICE                     05DEC01.1453
>      $         RCREI(IPLEV)            ! INVERSE CREI - ICE                      05DEC01.1454
253a284,286
>      $     TMP1I,               ! TEMPORARY CONSTANT ARRAY                       05DEC01.1455
>      $     TMP2I,               ! TEMPORARY CONSTANT ARRAY                       05DEC01.1456
>      $     TMP3I,               ! TEMPORARY CONSTANT ARRAY                       05DEC01.1457
314a348
>         CREI(K)=14.6                                                             05DEC01.1458
315a350
>         RCREI(K)=1./CREI(K)                                                      05DEC01.1459
325a361,362
>         TAUEXC(I,0)=0.0                                                          05DEC01.1460
>         TAUEXI(I,0)=0.0                                                          05DEC01.1461
331a369,370
>           TAUEXC(I,K)=0.0                                                        05DEC01.1462
>           TAUEXI(I,K)=0.0                                                        05DEC01.1463
531a571,574
>           TAUEXI(I,0)=0.                                                         05DEC01.1464
>           WCI(I,0)=0.999999                                                      05DEC01.1465
>           GCI(I,0)=0.85                                                          05DEC01.1466
>           FCI(I,0)=0.725                                                         05DEC01.1467
568a612,618
> C                                                                                05DEC01.1468
>         ABRICI=ABRIC(INDXSL)                                                     05DEC01.1469
>         BBRICI=BBRIC(INDXSL)                                                     05DEC01.1470
>         CBRICI=CBRIC(INDXSL)                                                     05DEC01.1471
>         DBRICI=DBRIC(INDXSL)                                                     05DEC01.1472
>         EBRICI=EBRIC(INDXSL)                                                     05DEC01.1473
>         FBRICI=FBRIC(INDXSL)                                                     05DEC01.1474
572a623,626
> C for ice cloud                                                                  05DEC01.1475
>           TMP1I=ABRICI+BBRICI*RCREI(K)                                           05DEC01.1476
>           TMP2I=1.-CBRICI-DBRICI*CREI(K)                                         05DEC01.1477
>           TMP3I=FBRICI*CREI(K)                                                   05DEC01.1478
575c629,630
<               TAUEXC(I,K)=CLWP(I,K)*TMP1                                         RADCSW.573
---
>               TAUEXC(I,K)=(CLWP(I,K)+CONWP(I,K))*TMP1                            05DEC01.1479
>               TAUEXI(I,K)=CIWP(I,K)*TMP1I                                        05DEC01.1480
579a635
>               TAUEXI(I,K)=TAUEXI(I,K)*CLD(I,K)*SQRT(CLD(I,K))                    05DEC01.1481
586a643,645
>               WCI(I,K)=AMIN1(TMP2I,.999999)                                      05DEC01.1482
>               GCI(I,K)=EBRICI+TMP3I                                              05DEC01.1483
>               FCI(I,K)=GCI(I,K)*GCI(I,K)                                         05DEC01.1484
641c700,701
<      +       ,RDIF,TDIR,TDIF,EXPLAY,EXPTDN,RDNDIF,TOTTRN,KTAUW)                  RADCSW.639
---
>      +       ,RDIF,TDIR,TDIF,EXPLAY,EXPTDN,RDNDIF,TOTTRN,KTAUW                   05DEC01.1485
>      +       ,TAUEXI,WCI,GCI,FCI)                                                05DEC01.1486
===================================================================
physics/radiation/ccm2/radctl.F
diff -r3.2 radctl.F
6c6
<      $                  CLWP   ,PLOL   ,PLOS   ,SOLIN  ,SABTP  ,FRSA ,           RADCTL.6
---
>      $                  CLWP,CIWP,CONWP,PLOL,PLOS,SOLIN,SABTP  ,FRSA ,           05DEC01.1487
77a78,79
>      $     CIWP(IPLOND,IPLEV),   ! CLOUD ICE WATER PATH                          05DEC01.1488
>      $     CONWP(IPLOND,IPLEV),  ! CONVECTIVE CLOUD ICE WATER PATH               05DEC01.1489
132,133c134,135
<       CALL RADCSW(COSZRS,PNM,H2OMMR,CLD,CLWP,O3MMR,ECCF,SOLIN,QRS,FRSA,          RADCTL.132
<      +     SABTP,CLRSS,CLRST,KTAUW,JSLC)                                         RADCTL.133
---
>       CALL RADCSW(COSZRS,PNM,H2OMMR,CLD,CLWP,CIWP,CONWP,O3MMR,ECCF,              05DEC01.1490
>      +     SOLIN,QRS,FRSA,SABTP,CLRSS,CLRST,KTAUW,JSLC)                          05DEC01.1491
===================================================================
physics/radiation/ccm2/radded.F
diff -r3.0 radded.F
8c8
<      $                  TOTTRN, KTAUW  )                                         RADDED.8
---
>      $                  TOTTRN, KTAUW, TAUEXI, WCI, GCI, FCI)                    05DEC01.1492
48a49,52
>       REAL TAUEXI(IPLOND,0:IPLEV),  ! CLOUD EXT OPTICAL DEPTH - ICE              05DEC01.1493
>      $         WCI(IPLOND,0:IPLEV),  ! CLOUD SINGLE SCAT ALB - ICE               05DEC01.1494
>      $         GCI(IPLOND,0:IPLEV),  ! CLOUD ASSYMETRY PARAM - ICE               05DEC01.1495
>      $         FCI(IPLOND,0:IPLEV)   ! CLOUD FORWARD SCAT FRAC - ICE             05DEC01.1496
167,168c171,172
<           TAUTOT=TAUEXC(I,0)+TAURAY(I)+TAUGAB(I)                                 RADDED.167
<           TAUCSC=TAUEXC(I,0)*WC(I,0)                                             RADDED.168
---
>           TAUTOT=TAUEXC(I,0)+TAUEXI(I,0)+TAURAY(I)+TAUGAB(I)                     05DEC01.1497
>           TAUCSC=TAUEXC(I,0)*WC(I,0)+TAUEXI(I,0)*WCI(I,0)                        05DEC01.1498
172,173c176,179
<           GTOT=(WTAU*GRAY+GC(I,0)*TAUCSC)/WT                                     RADDED.172
<           FTOT=(WTAU*FRAY+FC(I,0)*TAUCSC)/WT                                     RADDED.173
---
>           GTOT=(WTAU*GRAY+TAUEXC(I,0)*WC(I,0)*GC(I,0)+                           05DEC01.1499
>      +          TAUEXI(I,0)*WCI(I,0)*GCI(I,0))/WT                                05DEC01.1500
>           FTOT=(WTAU*FRAY+TAUEXC(I,0)*WC(I,0)*FC(I,0)+                           05DEC01.1501
>      +          TAUEXI(I,0)*WCI(I,0)*FCI(I,0))/WT                                05DEC01.1502
290,291c296,297
<             TAUTOT=TAUEXC(I,K)+TAURAY(I)+TAUGAB(I)                               RADDED.290
<             TAUCSC=TAUEXC(I,K)*WC(I,K)                                           RADDED.291
---
>             TAUTOT=TAUEXC(I,K)+TAUEXI(I,K)+TAURAY(I)+TAUGAB(I)                   05DEC01.1503
>             TAUCSC=TAUEXC(I,K)*WC(I,K)+TAUEXI(I,K)*WCI(I,K)                      05DEC01.1504
295,296c301,304
<             GTOT=(WTAU*GRAY+GC(I,K)*TAUCSC)/WT                                   RADDED.295
<             FTOT=(WTAU*FRAY+FC(I,K)*TAUCSC)/WT                                   RADDED.296
---
>             GTOT=(WTAU*GRAY+TAUEXC(I,K)*WC(I,K)*GC(I,K)+                         05DEC01.1505
>      +            TAUEXI(I,K)*WCI(I,K)*GCI(I,K))/WT                              05DEC01.1506
>             FTOT=(WTAU*FRAY+TAUEXC(I,K)*WC(I,K)*FC(I,K)+                         05DEC01.1507
>      +            TAUEXI(I,K)*WCI(I,K)*FCI(I,K))/WT                              05DEC01.1508
===================================================================
physics/radiation/ccm2/wheneq.F
diff -r3.0 wheneq.F
29c29
<       INTEGER PLON,IPOS(MIX),INDX(MIX)                                           WHENEQ.29
---
>       INTEGER PLON,IPOS(*),INDX(*)                                               05DEC01.1509
===================================================================
physics/radiation/ccm2/whenfgt.F
diff -r3.0 whenfgt.F
31c31
<       DIMENSION TIN(MIX),INDEX(MIX)                                              WHENFGT.31
---
>       DIMENSION TIN(*),INDEX(*)                                                  05DEC01.1510
===================================================================
physics/radiation/sfc/sfcrad.F
diff -r3.4 sfcrad.F
12a13
> #  undef VECTOR                                                                  05DEC01.1511
22c23
< C     IF ICLOUD = 1, THEN THE EFFECT OF CLOUDS IS ACCOUNTED           C          SFCRAD.13
---
> C     IF ICLOUD = 1, or 2 THEN THE EFFECT OF CLOUDS IS ACCOUNTED      C          05DEC01.1512
182,183c183,188
<         DEPCL=1.+ICLOUD(INEST)*(CLW(1)*CLDFR(I,1)+CLW(2)*CLDFR(I,2)+             SFCRAD.167
<      +        CLW(3)*CLDFR(I,3))                                                 SFCRAD.168
---
>         IF(ICLOUD(INEST).NE.0) THEN                                              05DEC01.1513
>            DEPCL=1.+CLW(1)*CLDFR(I,1)+CLW(2)*CLDFR(I,2)+                         05DEC01.1514
>      +           CLW(3)*CLDFR(I,3)                                               05DEC01.1515
>         ELSE                                                                     05DEC01.1516
>            DEPCL=1.                                                              05DEC01.1517
>         END IF                                                                   05DEC01.1518
256c261
<       IF(ICLOUD(INEST).NE.1)GOTO 200                                             SFCRAD.241
---
>       IF(ICLOUD(INEST).EQ.0)GOTO 200                                             05DEC01.1519
